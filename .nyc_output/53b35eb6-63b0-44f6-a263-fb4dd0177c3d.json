{"/Users/ldlafountaine/code/got/source/index.ts":{"path":"/Users/ldlafountaine/code/got/source/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":17},"end":{"line":74,"column":1}},"6":{"start":{"line":43,"column":51},"end":{"line":43,"column":64}},"7":{"start":{"line":75,"column":12},"end":{"line":75,"column":38}},"8":{"start":{"line":76,"column":0},"end":{"line":76,"column":22}},"9":{"start":{"line":78,"column":0},"end":{"line":78,"column":21}},"10":{"start":{"line":79,"column":0},"end":{"line":79,"column":29}},"11":{"start":{"line":81,"column":0},"end":{"line":81,"column":29}},"12":{"start":{"line":82,"column":18},"end":{"line":82,"column":40}},"13":{"start":{"line":83,"column":0},"end":{"line":83,"column":49}},"14":{"start":{"line":84,"column":15},"end":{"line":84,"column":34}},"15":{"start":{"line":85,"column":0},"end":{"line":85,"column":37}},"16":{"start":{"line":86,"column":0},"end":{"line":86,"column":41}},"17":{"start":{"line":87,"column":0},"end":{"line":87,"column":45}},"18":{"start":{"line":88,"column":0},"end":{"line":88,"column":41}},"19":{"start":{"line":89,"column":0},"end":{"line":89,"column":39}},"20":{"start":{"line":90,"column":0},"end":{"line":90,"column":55}},"21":{"start":{"line":91,"column":0},"end":{"line":91,"column":69}},"22":{"start":{"line":92,"column":0},"end":{"line":92,"column":45}},"23":{"start":{"line":93,"column":0},"end":{"line":93,"column":43}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":43,"column":28},"end":{"line":43,"column":29}},"loc":{"start":{"line":43,"column":51},"end":{"line":43,"column":64}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"f":{"0":1,"1":3},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/index.ts","sources":["/Users/ldlafountaine/code/got/source/index.ts"],"names":[],"mappings":";;;;;AAAA,qCAAgD;AAGhD,MAAM,QAAQ,GAAa;IAC1B,OAAO,EAAE;QACR,MAAM,EAAE,KAAK;QACb,KAAK,EAAE;YACN,KAAK,EAAE,CAAC;YACR,OAAO,EAAE;gBACR,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,QAAQ;gBACR,SAAS;gBACT,OAAO;aACP;YACD,WAAW,EAAE;gBACZ,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;aACH;YACD,UAAU,EAAE;gBACX,WAAW;gBACX,YAAY;gBACZ,YAAY;gBACZ,cAAc;gBACd,OAAO;gBACP,WAAW;gBACX,aAAa;gBACb,WAAW;aACX;YACD,aAAa,EAAE,SAAS;YACxB,cAAc,EAAE,CAAC,EAAC,aAAa,EAAC,EAAE,EAAE,CAAC,aAAa;SAClD;QACD,OAAO,EAAE,EAAE;QACX,OAAO,EAAE;YACR,YAAY,EAAE,2CAA2C;SACzD;QACD,KAAK,EAAE;YACN,IAAI,EAAE,EAAE;YACR,aAAa,EAAE,EAAE;YACjB,cAAc,EAAE,EAAE;YAClB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,EAAE;SACjB;QACD,UAAU,EAAE,IAAI;QAChB,eAAe,EAAE,IAAI;QACrB,cAAc,EAAE,IAAI;QACpB,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,KAAK;QACf,cAAc,EAAE,KAAK;QACrB,YAAY,EAAE,MAAM;QACpB,eAAe,EAAE,KAAK;QACtB,YAAY,EAAE,EAAE;QAChB,SAAS,EAAE,EAAE;QACb,eAAe,EAAE,IAAI;QACrB,oBAAoB,EAAE,KAAK;QAC3B,OAAO,EAAE,EAAE;KACX;IACD,QAAQ,EAAE,CAAC,uBAAc,CAAC;IAC1B,eAAe,EAAE,KAAK;CACtB,CAAC;AAEF,MAAM,GAAG,GAAG,gBAAM,CAAC,QAAQ,CAAC,CAAC;AAE7B,kBAAe,GAAG,CAAC;AAEnB,sCAAsC;AACtC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;AACrB,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC;AAE7B,eAAe;AACf,6BAAwB;AASxB,yCAEqB;AADpB,qCAAA,WAAW,CAAkB;AAG9B,mCAUkB;AATjB,4BAAA,QAAQ,CAAA;AACR,8BAAA,UAAU,CAAA;AACV,gCAAA,YAAY,CAAA;AACZ,8BAAA,UAAU,CAAA;AACV,6BAAA,SAAS,CAAA;AACT,qCAAA,iBAAiB,CAAA;AACjB,4CAAA,wBAAwB,CAAA;AACxB,gCAAA,YAAY,CAAA;AACZ,+BAAA,WAAW,CAAA","sourcesContent":["import create, {defaultHandler} from './create';\nimport {Defaults} from './types';\n\nconst defaults: Defaults = {\n\toptions: {\n\t\tmethod: 'GET',\n\t\tretry: {\n\t\t\tlimit: 2,\n\t\t\tmethods: [\n\t\t\t\t'GET',\n\t\t\t\t'PUT',\n\t\t\t\t'HEAD',\n\t\t\t\t'DELETE',\n\t\t\t\t'OPTIONS',\n\t\t\t\t'TRACE'\n\t\t\t],\n\t\t\tstatusCodes: [\n\t\t\t\t408,\n\t\t\t\t413,\n\t\t\t\t429,\n\t\t\t\t500,\n\t\t\t\t502,\n\t\t\t\t503,\n\t\t\t\t504,\n\t\t\t\t521,\n\t\t\t\t522,\n\t\t\t\t524\n\t\t\t],\n\t\t\terrorCodes: [\n\t\t\t\t'ETIMEDOUT',\n\t\t\t\t'ECONNRESET',\n\t\t\t\t'EADDRINUSE',\n\t\t\t\t'ECONNREFUSED',\n\t\t\t\t'EPIPE',\n\t\t\t\t'ENOTFOUND',\n\t\t\t\t'ENETUNREACH',\n\t\t\t\t'EAI_AGAIN'\n\t\t\t],\n\t\t\tmaxRetryAfter: undefined,\n\t\t\tcalculateDelay: ({computedValue}) => computedValue\n\t\t},\n\t\ttimeout: {},\n\t\theaders: {\n\t\t\t'user-agent': 'got (https://github.com/sindresorhus/got)'\n\t\t},\n\t\thooks: {\n\t\t\tinit: [],\n\t\t\tbeforeRequest: [],\n\t\t\tbeforeRedirect: [],\n\t\t\tbeforeRetry: [],\n\t\t\tbeforeError: [],\n\t\t\tafterResponse: []\n\t\t},\n\t\tdecompress: true,\n\t\tthrowHttpErrors: true,\n\t\tfollowRedirect: true,\n\t\tisStream: false,\n\t\tcache: false,\n\t\tdnsCache: false,\n\t\tuseElectronNet: false,\n\t\tresponseType: 'text',\n\t\tresolveBodyOnly: false,\n\t\tmaxRedirects: 10,\n\t\tprefixUrl: '',\n\t\tmethodRewriting: true,\n\t\tignoreInvalidCookies: false,\n\t\tcontext: {}\n\t},\n\thandlers: [defaultHandler],\n\tmutableDefaults: false\n};\n\nconst got = create(defaults);\n\nexport default got;\n\n// For CommonJS default export support\nmodule.exports = got;\nmodule.exports.default = got;\n\n// Export types\nexport * from './types';\n\nexport {\n\tGot,\n\tGotStream,\n\tReturnStream,\n\tGotReturn\n} from './create';\n\nexport {\n\tProxyStream as ResponseStream\n} from './as-stream';\n\nexport {\n\tGotError,\n\tCacheError,\n\tRequestError,\n\tParseError,\n\tHTTPError,\n\tMaxRedirectsError,\n\tUnsupportedProtocolError,\n\tTimeoutError,\n\tCancelError\n} from './errors';\n\nexport {\n\tInitHook,\n\tBeforeRequestHook,\n\tBeforeRedirectHook,\n\tBeforeRetryHook,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n\tHookType,\n\tHooks,\n\tHookEvent\n} from './known-hook-events';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ea7de3a94ada9abec5fc7e8e954b6f17873c157","contentHash":"3444559d163a934ccdafaafd5f4a9d270ea812c5045a4a9e67060974cc733f0c"},"/Users/ldlafountaine/code/got/source/create.ts":{"path":"/Users/ldlafountaine/code/got/source/create.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":62}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":52}},"6":{"start":{"line":8,"column":27},"end":{"line":8,"column":119}},"7":{"start":{"line":8,"column":40},"end":{"line":8,"column":119}},"8":{"start":{"line":9,"column":22},"end":{"line":9,"column":107}},"9":{"start":{"line":9,"column":34},"end":{"line":9,"column":106}},"10":{"start":{"line":10,"column":16},"end":{"line":17,"column":1}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"12":{"start":{"line":18,"column":44},"end":{"line":18,"column":57}},"13":{"start":{"line":19,"column":15},"end":{"line":100,"column":1}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":46}},"15":{"start":{"line":22,"column":4},"end":{"line":34,"column":8}},"16":{"start":{"line":22,"column":53},"end":{"line":34,"column":5}},"17":{"start":{"line":25,"column":23},"end":{"line":28,"column":10}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":36}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":24}},"20":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":71}},"22":{"start":{"line":31,"column":12},"end":{"line":31,"column":84}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":22}},"24":{"start":{"line":36,"column":16},"end":{"line":56,"column":5}},"25":{"start":{"line":38,"column":24},"end":{"line":38,"column":25}},"26":{"start":{"line":39,"column":32},"end":{"line":41,"column":9}},"27":{"start":{"line":40,"column":12},"end":{"line":40,"column":141}},"28":{"start":{"line":43,"column":8},"end":{"line":54,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":101}},"30":{"start":{"line":47,"column":12},"end":{"line":53,"column":13}},"31":{"start":{"line":48,"column":16},"end":{"line":48,"column":28}},"32":{"start":{"line":52,"column":16},"end":{"line":52,"column":45}},"33":{"start":{"line":57,"column":4},"end":{"line":84,"column":6}},"34":{"start":{"line":58,"column":29},"end":{"line":58,"column":47}},"35":{"start":{"line":59,"column":23},"end":{"line":59,"column":49}},"36":{"start":{"line":61,"column":8},"end":{"line":74,"column":9}},"37":{"start":{"line":62,"column":12},"end":{"line":73,"column":13}},"38":{"start":{"line":63,"column":16},"end":{"line":63,"column":58}},"39":{"start":{"line":64,"column":16},"end":{"line":64,"column":62}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":65}},"41":{"start":{"line":68,"column":16},"end":{"line":68,"column":41}},"42":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"43":{"start":{"line":70,"column":20},"end":{"line":70,"column":53}},"44":{"start":{"line":72,"column":16},"end":{"line":72,"column":56}},"45":{"start":{"line":75,"column":8},"end":{"line":75,"column":82}},"46":{"start":{"line":75,"column":46},"end":{"line":75,"column":80}},"47":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"48":{"start":{"line":77,"column":12},"end":{"line":77,"column":50}},"49":{"start":{"line":79,"column":8},"end":{"line":83,"column":11}},"50":{"start":{"line":86,"column":4},"end":{"line":86,"column":76}},"51":{"start":{"line":86,"column":35},"end":{"line":86,"column":75}},"52":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"53":{"start":{"line":89,"column":8},"end":{"line":89,"column":73}},"54":{"start":{"line":89,"column":40},"end":{"line":89,"column":72}},"55":{"start":{"line":90,"column":8},"end":{"line":90,"column":87}},"56":{"start":{"line":90,"column":47},"end":{"line":90,"column":86}},"57":{"start":{"line":92,"column":4},"end":{"line":92,"column":88}},"58":{"start":{"line":93,"column":4},"end":{"line":98,"column":7}},"59":{"start":{"line":99,"column":4},"end":{"line":99,"column":15}},"60":{"start":{"line":101,"column":0},"end":{"line":101,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":27},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":40},"end":{"line":8,"column":119}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":22},"end":{"line":9,"column":23}},"loc":{"start":{"line":9,"column":34},"end":{"line":9,"column":106}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":25},"end":{"line":18,"column":26}},"loc":{"start":{"line":18,"column":44},"end":{"line":18,"column":57}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":15},"end":{"line":19,"column":16}},"loc":{"start":{"line":19,"column":29},"end":{"line":100,"column":1}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":46},"end":{"line":22,"column":47}},"loc":{"start":{"line":22,"column":53},"end":{"line":34,"column":5}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":53},"end":{"line":22,"column":54}},"loc":{"start":{"line":22,"column":72},"end":{"line":34,"column":5}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":35},"end":{"line":25,"column":36}},"loc":{"start":{"line":25,"column":49},"end":{"line":28,"column":9}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":16},"end":{"line":36,"column":17}},"loc":{"start":{"line":36,"column":34},"end":{"line":56,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":32},"end":{"line":39,"column":33}},"loc":{"start":{"line":39,"column":48},"end":{"line":41,"column":9}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":17},"end":{"line":57,"column":18}},"loc":{"start":{"line":57,"column":44},"end":{"line":84,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":75,"column":35},"end":{"line":75,"column":36}},"loc":{"start":{"line":75,"column":46},"end":{"line":75,"column":80}},"line":75},"11":{"name":"(anonymous_11)","decl":{"start":{"line":86,"column":17},"end":{"line":86,"column":18}},"loc":{"start":{"line":86,"column":35},"end":{"line":86,"column":75}},"line":86},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":22},"end":{"line":89,"column":23}},"loc":{"start":{"line":89,"column":40},"end":{"line":89,"column":72}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":29},"end":{"line":90,"column":30}},"loc":{"start":{"line":90,"column":47},"end":{"line":90,"column":86}},"line":90}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":40},"end":{"line":8,"column":119}},"type":"cond-expr","locations":[{"start":{"line":8,"column":59},"end":{"line":8,"column":87}},{"start":{"line":8,"column":90},"end":{"line":8,"column":119}}],"line":8},"1":{"loc":{"start":{"line":9,"column":34},"end":{"line":9,"column":106}},"type":"binary-expr","locations":[{"start":{"line":9,"column":34},"end":{"line":9,"column":64}},{"start":{"line":9,"column":68},"end":{"line":9,"column":106}}],"line":9},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},{"start":{"line":29,"column":8},"end":{"line":32,"column":9}}],"line":29},"3":{"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":48}},"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":27}},{"start":{"line":29,"column":31},"end":{"line":29,"column":48}}],"line":29},"4":{"loc":{"start":{"line":40,"column":62},"end":{"line":40,"column":139}},"type":"cond-expr","locations":[{"start":{"line":40,"column":103},"end":{"line":40,"column":121}},{"start":{"line":40,"column":124},"end":{"line":40,"column":139}}],"line":40},"5":{"loc":{"start":{"line":47,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":53,"column":13}},{"start":{"line":47,"column":12},"end":{"line":53,"column":13}}],"line":47},"6":{"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":79}},"type":"cond-expr","locations":[{"start":{"line":47,"column":59},"end":{"line":47,"column":65}},{"start":{"line":47,"column":68},"end":{"line":47,"column":79}}],"line":47},"7":{"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":56}},"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":39}},{"start":{"line":47,"column":43},"end":{"line":47,"column":56}}],"line":47},"8":{"loc":{"start":{"line":62,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":73,"column":13}},{"start":{"line":62,"column":12},"end":{"line":73,"column":13}}],"line":62},"9":{"loc":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},{"start":{"line":69,"column":16},"end":{"line":71,"column":17}}],"line":69},"10":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{"line":76,"column":8},"end":{"line":78,"column":9}}],"line":76},"11":{"loc":{"start":{"line":94,"column":15},"end":{"line":94,"column":84}},"type":"cond-expr","locations":[{"start":{"line":94,"column":42},"end":{"line":94,"column":50}},{"start":{"line":94,"column":53},"end":{"line":94,"column":84}}],"line":94}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":5,"8":1,"9":1,"10":1,"11":1,"12":5,"13":1,"14":2,"15":2,"16":2,"17":5,"18":5,"19":5,"20":5,"21":0,"22":0,"23":5,"24":2,"25":5,"26":5,"27":5,"28":5,"29":5,"30":0,"31":0,"32":0,"33":2,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":2,"51":0,"52":2,"53":12,"54":0,"55":12,"56":0,"57":2,"58":2,"59":2,"60":1},"f":{"0":5,"1":1,"2":5,"3":2,"4":2,"5":5,"6":5,"7":5,"8":5,"9":1,"10":1,"11":0,"12":0,"13":0},"b":{"0":[0,5],"1":[1,0],"2":[0,5],"3":[5,0],"4":[5,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1],"9":[0,1],"10":[1,0],"11":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/create.ts","sources":["/Users/ldlafountaine/code/got/source/create.ts"],"names":[],"mappings":"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","sourcesContent":["import {Merge} from 'type-fest';\nimport asPromise from './as-promise';\nimport asStream, {ProxyStream} from './as-stream';\nimport * as errors from './errors';\nimport {normalizeArguments, mergeOptions} from './normalize-arguments';\nimport deepFreeze from './utils/deep-freeze';\nimport {\n\tCancelableRequest,\n\tDefaults,\n\tDefaultOptions,\n\tExtendOptions,\n\tHandlerFunction,\n\tNormalizedOptions,\n\tOptions,\n\tResponse,\n\tURLOrOptions\n} from './types';\n\nexport type HTTPAlias =\n\t| 'get'\n\t| 'post'\n\t| 'put'\n\t| 'patch'\n\t| 'head'\n\t| 'delete';\n\nexport type ReturnStream = <T>(url: string | Merge<Options, {isStream?: true}>, options?: Merge<Options, {isStream?: true}>) => ProxyStream<T>;\nexport type GotReturn<T = unknown> = CancelableRequest<T> | ProxyStream<T>;\n\nconst getPromiseOrStream = (options: NormalizedOptions): GotReturn => options.isStream ? asStream(options) : asPromise(options);\n\nconst isGotInstance = (value: Got | ExtendOptions): value is Got => (\n\tReflect.has(value, 'defaults') && Reflect.has(value.defaults, 'options')\n);\n\nexport type OptionsOfDefaultResponseBody = Merge<Options, {isStream?: false; resolveBodyOnly?: false; responseType?: 'default'}>;\ntype OptionsOfTextResponseBody = Merge<Options, {isStream?: false; resolveBodyOnly?: false; responseType: 'text'}>;\ntype OptionsOfJSONResponseBody = Merge<Options, {isStream?: false; resolveBodyOnly?: false; responseType: 'json'}>;\ntype OptionsOfBufferResponseBody = Merge<Options, {isStream?: false; resolveBodyOnly?: false; responseType: 'buffer'}>;\ntype ResponseBodyOnly = {resolveBodyOnly: true};\n\ninterface GotFunctions {\n\t// `asPromise` usage\n\t<T = string>(url: string | OptionsOfDefaultResponseBody, options?: OptionsOfDefaultResponseBody): CancelableRequest<Response<T>>;\n\t(url: string | OptionsOfTextResponseBody, options?: OptionsOfTextResponseBody): CancelableRequest<Response<string>>;\n\t<T>(url: string | OptionsOfJSONResponseBody, options?: OptionsOfJSONResponseBody): CancelableRequest<Response<T>>;\n\t(url: string | OptionsOfBufferResponseBody, options?: OptionsOfBufferResponseBody): CancelableRequest<Response<Buffer>>;\n\t// `resolveBodyOnly` usage\n\t<T = string>(url: string | Merge<OptionsOfDefaultResponseBody, ResponseBodyOnly>, options?: Merge<OptionsOfDefaultResponseBody, ResponseBodyOnly>): CancelableRequest<T>;\n\t(url: string | Merge<OptionsOfTextResponseBody, ResponseBodyOnly>, options?: Merge<OptionsOfTextResponseBody, ResponseBodyOnly>): CancelableRequest<string>;\n\t<T>(url: string | Merge<OptionsOfJSONResponseBody, ResponseBodyOnly>, options?: Merge<OptionsOfJSONResponseBody, ResponseBodyOnly>): CancelableRequest<T>;\n\t(url: string | Merge<OptionsOfBufferResponseBody, ResponseBodyOnly>, options?: Merge<OptionsOfBufferResponseBody, ResponseBodyOnly>): CancelableRequest<Buffer>;\n\t// `asStream` usage\n\t<T>(url: string | Merge<Options, {isStream: true}>, options?: Merge<Options, {isStream: true}>): ProxyStream<T>;\n}\n\nexport interface Got extends Record<HTTPAlias, GotFunctions>, GotFunctions {\n\tstream: GotStream;\n\tdefaults: Defaults;\n\tGotError: typeof errors.GotError;\n\tCacheError: typeof errors.CacheError;\n\tRequestError: typeof errors.RequestError;\n\tReadError: typeof errors.ReadError;\n\tParseError: typeof errors.ParseError;\n\tHTTPError: typeof errors.HTTPError;\n\tMaxRedirectsError: typeof errors.MaxRedirectsError;\n\tUnsupportedProtocolError: typeof errors.UnsupportedProtocolError;\n\tTimeoutError: typeof errors.TimeoutError;\n\tCancelError: typeof errors.CancelError;\n\n\textend(...instancesOrOptions: Array<Got | ExtendOptions>): Got;\n\tmergeInstances(parent: Got, ...instances: Got[]): Got;\n\tmergeOptions(...sources: Options[]): NormalizedOptions;\n}\n\nexport interface GotStream extends Record<HTTPAlias, ReturnStream> {\n\t(url: URLOrOptions, options?: Options): ProxyStream;\n}\n\nconst aliases: ReadonlyArray<HTTPAlias> = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nexport const defaultHandler: HandlerFunction = (options, next) => next(options);\n\nconst create = (defaults: Defaults): Got => {\n\t// Proxy properties from next handlers\n\tdefaults._rawHandlers = defaults.handlers;\n\tdefaults.handlers = defaults.handlers.map(fn => ((options, next) => {\n\t\t// This will be assigned by assigning result\n\t\tlet root!: ReturnType<typeof next>;\n\n\t\tconst result = fn(options, newOptions => {\n\t\t\troot = next(newOptions);\n\t\t\treturn root;\n\t\t});\n\n\t\tif (result !== root && !options.isStream) {\n\t\t\tObject.setPrototypeOf(result, Object.getPrototypeOf(root));\n\t\t\tObject.defineProperties(result, Object.getOwnPropertyDescriptors(root));\n\t\t}\n\n\t\treturn result;\n\t}));\n\n\t// @ts-ignore Because the for loop handles it for us, as well as the other Object.defines\n\tconst got: Got = (url: URLOrOptions, options?: Options): GotReturn => {\n\t\tlet iteration = 0;\n\t\tconst iterateHandlers = (newOptions: NormalizedOptions): GotReturn => {\n\t\t\treturn defaults.handlers[iteration++](\n\t\t\t\tnewOptions,\n\t\t\t\titeration === defaults.handlers.length ? getPromiseOrStream : iterateHandlers\n\t\t\t) as GotReturn;\n\t\t};\n\n\t\t/* eslint-disable @typescript-eslint/return-await */\n\t\ttry {\n\t\t\treturn iterateHandlers(normalizeArguments(url, options, defaults));\n\t\t} catch (error) {\n\t\t\tif (options?.isStream) {\n\t\t\t\tthrow error;\n\t\t\t} else {\n\t\t\t\t// @ts-ignore It's an Error not a response, but TS thinks it's calling .resolve\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable @typescript-eslint/return-await */\n\t};\n\n\tgot.extend = (...instancesOrOptions) => {\n\t\tconst optionsArray: Options[] = [defaults.options];\n\t\tlet handlers: HandlerFunction[] = [...defaults._rawHandlers!];\n\t\tlet mutableDefaults: boolean | undefined;\n\n\t\tfor (const value of instancesOrOptions) {\n\t\t\tif (isGotInstance(value)) {\n\t\t\t\toptionsArray.push(value.defaults.options);\n\t\t\t\thandlers.push(...value.defaults._rawHandlers!);\n\t\t\t\tmutableDefaults = value.defaults.mutableDefaults;\n\t\t\t} else {\n\t\t\t\toptionsArray.push(value);\n\n\t\t\t\tif (Reflect.has(value, 'handlers')) {\n\t\t\t\t\thandlers.push(...value.handlers);\n\t\t\t\t}\n\n\t\t\t\tmutableDefaults = value.mutableDefaults;\n\t\t\t}\n\t\t}\n\n\t\thandlers = handlers.filter(handler => handler !== defaultHandler);\n\n\t\tif (handlers.length === 0) {\n\t\t\thandlers.push(defaultHandler);\n\t\t}\n\n\t\treturn create({\n\t\t\toptions: mergeOptions(...optionsArray) as DefaultOptions,\n\t\t\thandlers,\n\t\t\tmutableDefaults: Boolean(mutableDefaults)\n\t\t});\n\t};\n\n\t// @ts-ignore The missing methods because the for-loop handles it for us\n\tgot.stream = (url, options) => got(url, {...options, isStream: true});\n\n\tfor (const method of aliases) {\n\t\t// @ts-ignore Cannot properly type a function with multiple definitions yet\n\t\tgot[method] = (url: URLOrOptions, options?: Options): GotReturn => got(url, {...options, method});\n\t\tgot.stream[method] = (url, options) => got.stream(url, {...options, method});\n\t}\n\n\tObject.assign(got, {...errors, mergeOptions});\n\tObject.defineProperty(got, 'defaults', {\n\t\tvalue: defaults.mutableDefaults ? defaults : deepFreeze(defaults),\n\t\twritable: defaults.mutableDefaults,\n\t\tconfigurable: defaults.mutableDefaults,\n\t\tenumerable: true\n\t});\n\n\treturn got;\n};\n\nexport default create;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c773b2b7ae817bf5a1375eb146e6769cac9c5e64","contentHash":"a6b0f9a53ae962d83c8aabfa5d936070dc2a7bb64378c97d3a33a2cc7b8e63dc"},"/Users/ldlafountaine/code/got/source/as-promise.ts":{"path":"/Users/ldlafountaine/code/got/source/as-promise.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":30},"end":{"line":8,"column":62}},"7":{"start":{"line":9,"column":35},"end":{"line":9,"column":72}},"8":{"start":{"line":10,"column":18},"end":{"line":21,"column":1}},"9":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":68}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"13":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":39}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":63}},"16":{"start":{"line":23,"column":18},"end":{"line":23,"column":36}},"17":{"start":{"line":25,"column":20},"end":{"line":121,"column":6}},"18":{"start":{"line":26,"column":24},"end":{"line":26,"column":67}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":32}},"20":{"start":{"line":28,"column":26},"end":{"line":39,"column":9}},"21":{"start":{"line":29,"column":12},"end":{"line":38,"column":13}},"22":{"start":{"line":30,"column":16},"end":{"line":33,"column":17}},"23":{"start":{"line":32,"column":20},"end":{"line":32,"column":46}},"24":{"start":{"line":34,"column":16},"end":{"line":34,"column":30}},"25":{"start":{"line":37,"column":16},"end":{"line":37,"column":31}},"26":{"start":{"line":40,"column":8},"end":{"line":118,"column":11}},"27":{"start":{"line":42,"column":12},"end":{"line":42,"column":45}},"28":{"start":{"line":44,"column":12},"end":{"line":50,"column":13}},"29":{"start":{"line":45,"column":16},"end":{"line":45,"column":80}},"30":{"start":{"line":48,"column":16},"end":{"line":48,"column":66}},"31":{"start":{"line":49,"column":16},"end":{"line":49,"column":23}},"32":{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},"33":{"start":{"line":53,"column":16},"end":{"line":53,"column":23}},"34":{"start":{"line":55,"column":25},"end":{"line":59,"column":13}},"35":{"start":{"line":56,"column":39},"end":{"line":56,"column":47}},"36":{"start":{"line":57,"column":40},"end":{"line":57,"column":74}},"37":{"start":{"line":58,"column":16},"end":{"line":58,"column":98}},"38":{"start":{"line":61,"column":12},"end":{"line":72,"column":13}},"39":{"start":{"line":62,"column":16},"end":{"line":62,"column":88}},"40":{"start":{"line":65,"column":16},"end":{"line":69,"column":17}},"41":{"start":{"line":66,"column":39},"end":{"line":66,"column":88}},"42":{"start":{"line":67,"column":20},"end":{"line":67,"column":42}},"43":{"start":{"line":68,"column":20},"end":{"line":68,"column":27}},"44":{"start":{"line":71,"column":16},"end":{"line":71,"column":48}},"45":{"start":{"line":73,"column":12},"end":{"line":105,"column":13}},"46":{"start":{"line":74,"column":16},"end":{"line":100,"column":17}},"47":{"start":{"line":77,"column":20},"end":{"line":99,"column":23}},"48":{"start":{"line":78,"column":45},"end":{"line":85,"column":27}},"49":{"start":{"line":81,"column":54},"end":{"line":81,"column":55}},"50":{"start":{"line":88,"column":24},"end":{"line":88,"column":103}},"51":{"start":{"line":89,"column":24},"end":{"line":92,"column":25}},"52":{"start":{"line":91,"column":28},"end":{"line":91,"column":53}},"53":{"start":{"line":93,"column":40},"end":{"line":93,"column":63}},"54":{"start":{"line":94,"column":24},"end":{"line":97,"column":27}},"55":{"start":{"line":95,"column":28},"end":{"line":95,"column":53}},"56":{"start":{"line":96,"column":28},"end":{"line":96,"column":45}},"57":{"start":{"line":98,"column":24},"end":{"line":98,"column":39}},"58":{"start":{"line":103,"column":16},"end":{"line":103,"column":33}},"59":{"start":{"line":104,"column":16},"end":{"line":104,"column":23}},"60":{"start":{"line":107,"column":12},"end":{"line":116,"column":13}},"61":{"start":{"line":108,"column":30},"end":{"line":108,"column":71}},"62":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"63":{"start":{"line":110,"column":20},"end":{"line":110,"column":27}},"64":{"start":{"line":112,"column":16},"end":{"line":115,"column":17}},"65":{"start":{"line":113,"column":20},"end":{"line":113,"column":37}},"66":{"start":{"line":114,"column":20},"end":{"line":114,"column":27}},"67":{"start":{"line":117,"column":12},"end":{"line":117,"column":72}},"68":{"start":{"line":119,"column":8},"end":{"line":119,"column":38}},"69":{"start":{"line":120,"column":8},"end":{"line":120,"column":63}},"70":{"start":{"line":122,"column":4},"end":{"line":125,"column":6}},"71":{"start":{"line":123,"column":8},"end":{"line":123,"column":27}},"72":{"start":{"line":124,"column":8},"end":{"line":124,"column":23}},"73":{"start":{"line":126,"column":21},"end":{"line":131,"column":5}},"74":{"start":{"line":128,"column":27},"end":{"line":128,"column":94}},"75":{"start":{"line":128,"column":46},"end":{"line":128,"column":93}},"76":{"start":{"line":129,"column":8},"end":{"line":129,"column":87}},"77":{"start":{"line":130,"column":8},"end":{"line":130,"column":26}},"78":{"start":{"line":132,"column":4},"end":{"line":137,"column":6}},"79":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"80":{"start":{"line":134,"column":12},"end":{"line":134,"column":56}},"81":{"start":{"line":136,"column":8},"end":{"line":136,"column":32}},"82":{"start":{"line":138,"column":4},"end":{"line":138,"column":46}},"83":{"start":{"line":138,"column":27},"end":{"line":138,"column":45}},"84":{"start":{"line":139,"column":4},"end":{"line":139,"column":42}},"85":{"start":{"line":139,"column":25},"end":{"line":139,"column":41}},"86":{"start":{"line":140,"column":4},"end":{"line":140,"column":19}},"87":{"start":{"line":142,"column":0},"end":{"line":142,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":18},"end":{"line":10,"column":19}},"loc":{"start":{"line":10,"column":52},"end":{"line":21,"column":1}},"line":10},"1":{"name":"asPromise","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":28},"end":{"line":141,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":36},"end":{"line":25,"column":37}},"loc":{"start":{"line":25,"column":67},"end":{"line":121,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":26},"end":{"line":28,"column":27}},"loc":{"start":{"line":28,"column":43},"end":{"line":39,"column":9}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":31},"end":{"line":40,"column":32}},"loc":{"start":{"line":40,"column":51},"end":{"line":118,"column":9}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":25},"end":{"line":55,"column":26}},"loc":{"start":{"line":55,"column":31},"end":{"line":59,"column":13}},"line":55},"6":{"name":"(anonymous_6)","decl":{"start":{"line":77,"column":52},"end":{"line":77,"column":53}},"loc":{"start":{"line":77,"column":78},"end":{"line":99,"column":21}},"line":77},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":48},"end":{"line":81,"column":49}},"loc":{"start":{"line":81,"column":54},"end":{"line":81,"column":55}},"line":81},"8":{"name":"(anonymous_8)","decl":{"start":{"line":94,"column":33},"end":{"line":94,"column":34}},"loc":{"start":{"line":94,"column":39},"end":{"line":97,"column":25}},"line":94},"9":{"name":"(anonymous_9)","decl":{"start":{"line":95,"column":42},"end":{"line":95,"column":43}},"loc":{"start":{"line":95,"column":48},"end":{"line":95,"column":51}},"line":95},"10":{"name":"(anonymous_10)","decl":{"start":{"line":122,"column":17},"end":{"line":122,"column":18}},"loc":{"start":{"line":122,"column":31},"end":{"line":125,"column":5}},"line":122},"11":{"name":"(anonymous_11)","decl":{"start":{"line":126,"column":21},"end":{"line":126,"column":22}},"loc":{"start":{"line":126,"column":39},"end":{"line":131,"column":5}},"line":126},"12":{"name":"(anonymous_12)","decl":{"start":{"line":128,"column":40},"end":{"line":128,"column":41}},"loc":{"start":{"line":128,"column":46},"end":{"line":128,"column":93}},"line":128},"13":{"name":"(anonymous_13)","decl":{"start":{"line":132,"column":19},"end":{"line":132,"column":20}},"loc":{"start":{"line":132,"column":25},"end":{"line":137,"column":5}},"line":132},"14":{"name":"(anonymous_14)","decl":{"start":{"line":138,"column":21},"end":{"line":138,"column":22}},"loc":{"start":{"line":138,"column":27},"end":{"line":138,"column":45}},"line":138},"15":{"name":"(anonymous_15)","decl":{"start":{"line":139,"column":19},"end":{"line":139,"column":20}},"loc":{"start":{"line":139,"column":25},"end":{"line":139,"column":41}},"line":139}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"1":{"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":67}},"type":"cond-expr","locations":[{"start":{"line":12,"column":35},"end":{"line":12,"column":37}},{"start":{"line":12,"column":40},"end":{"line":12,"column":67}}],"line":12},"2":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"3":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}],"line":17},"4":{"loc":{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},{"start":{"line":51,"column":12},"end":{"line":54,"column":13}}],"line":51},"5":{"loc":{"start":{"line":51,"column":16},"end":{"line":51,"column":83}},"type":"cond-expr","locations":[{"start":{"line":51,"column":64},"end":{"line":51,"column":70}},{"start":{"line":51,"column":73},"end":{"line":51,"column":83}}],"line":51},"6":{"loc":{"start":{"line":51,"column":16},"end":{"line":51,"column":61}},"type":"binary-expr","locations":[{"start":{"line":51,"column":16},"end":{"line":51,"column":44}},{"start":{"line":51,"column":48},"end":{"line":51,"column":61}}],"line":51},"7":{"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":74}},"type":"cond-expr","locations":[{"start":{"line":57,"column":65},"end":{"line":57,"column":68}},{"start":{"line":57,"column":71},"end":{"line":57,"column":74}}],"line":57},"8":{"loc":{"start":{"line":58,"column":23},"end":{"line":58,"column":97}},"type":"binary-expr","locations":[{"start":{"line":58,"column":24},"end":{"line":58,"column":41}},{"start":{"line":58,"column":45},"end":{"line":58,"column":74}},{"start":{"line":58,"column":79},"end":{"line":58,"column":97}}],"line":58},"9":{"loc":{"start":{"line":65,"column":16},"end":{"line":69,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":16},"end":{"line":69,"column":17}},{"start":{"line":65,"column":16},"end":{"line":69,"column":17}}],"line":65},"10":{"loc":{"start":{"line":107,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":116,"column":13}},{"start":{"line":107,"column":12},"end":{"line":116,"column":13}}],"line":107},"11":{"loc":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},{"start":{"line":109,"column":16},"end":{"line":111,"column":17}}],"line":109},"12":{"loc":{"start":{"line":112,"column":16},"end":{"line":115,"column":17}},"type":"if","locations":[{"start":{"line":112,"column":16},"end":{"line":115,"column":17}},{"start":{"line":112,"column":16},"end":{"line":115,"column":17}}],"line":112},"13":{"loc":{"start":{"line":117,"column":20},"end":{"line":117,"column":70}},"type":"cond-expr","locations":[{"start":{"line":117,"column":46},"end":{"line":117,"column":59}},{"start":{"line":117,"column":62},"end":{"line":117,"column":70}}],"line":117},"14":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"15":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":90}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":40}},{"start":{"line":133,"column":44},"end":{"line":133,"column":90}}],"line":133}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4,"10":0,"11":4,"12":0,"13":4,"14":4,"15":0,"16":5,"17":5,"18":5,"19":5,"20":5,"21":0,"22":0,"23":0,"24":0,"25":0,"26":5,"27":4,"28":4,"29":4,"30":0,"31":0,"32":4,"33":0,"34":4,"35":4,"36":4,"37":4,"38":4,"39":4,"40":0,"41":0,"42":0,"43":0,"44":0,"45":4,"46":4,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":4,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":4,"68":5,"69":5,"70":5,"71":0,"72":0,"73":5,"74":0,"75":0,"76":0,"77":0,"78":5,"79":0,"80":0,"81":0,"82":5,"83":0,"84":5,"85":0,"86":5,"87":1},"f":{"0":4,"1":5,"2":5,"3":0,"4":4,"5":4,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[0,4],"1":[0,0],"2":[0,4],"3":[4,0],"4":[0,4],"5":[0,4],"6":[4,4],"7":[4,0],"8":[4,4,0],"9":[0,0],"10":[0,4],"11":[0,0],"12":[0,0],"13":[0,4],"14":[0,0],"15":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/as-promise.ts","sources":["/Users/ldlafountaine/code/got/source/as-promise.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter = require('events');\nimport getStream = require('get-stream');\nimport PCancelable = require('p-cancelable');\nimport is from '@sindresorhus/is';\nimport {ParseError, ReadError, HTTPError} from './errors';\nimport {normalizeArguments, mergeOptions} from './normalize-arguments';\nimport requestAsEventEmitter, {proxyEvents} from './request-as-event-emitter';\nimport {CancelableRequest, GeneralError, NormalizedOptions, Response} from './types';\n\nconst parseBody = (body: Buffer, responseType: NormalizedOptions['responseType'], encoding: NormalizedOptions['encoding']): unknown => {\n\tif (responseType === 'json') {\n\t\treturn body.length === 0 ? '' : JSON.parse(body.toString());\n\t}\n\n\tif (responseType === 'buffer') {\n\t\treturn Buffer.from(body);\n\t}\n\n\tif (responseType === 'text') {\n\t\treturn body.toString(encoding);\n\t}\n\n\tthrow new TypeError(`Unknown body type '${responseType as string}'`);\n};\n\nexport default function asPromise<T>(options: NormalizedOptions): CancelableRequest<T> {\n\tconst proxy = new EventEmitter();\n\tlet body: Buffer;\n\n\tconst promise = new PCancelable<Response | Response['body']>((resolve, reject, onCancel) => {\n\t\tconst emitter = requestAsEventEmitter(options);\n\t\tonCancel(emitter.abort);\n\n\t\tconst emitError = async (error: GeneralError): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tfor (const hook of options.hooks.beforeError) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\terror = await hook(error);\n\t\t\t\t}\n\n\t\t\t\treject(error);\n\t\t\t} catch (error_) {\n\t\t\t\treject(error_);\n\t\t\t}\n\t\t};\n\n\t\temitter.on('response', async (response: Response) => {\n\t\t\tproxy.emit('response', response);\n\n\t\t\t// Download body\n\t\t\ttry {\n\t\t\t\tbody = await getStream.buffer(response, {encoding: 'binary'});\n\t\t\t} catch (error) {\n\t\t\t\temitError(new ReadError(error, options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response.req?.aborted) {\n\t\t\t\t// Canceled while downloading - will throw a `CancelError` or `TimeoutError` error\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isOk = (): boolean => {\n\t\t\t\tconst {statusCode} = response;\n\t\t\t\tconst limitStatusCode = options.followRedirect ? 299 : 399;\n\n\t\t\t\treturn (statusCode >= 200 && statusCode <= limitStatusCode) || statusCode === 304;\n\t\t\t};\n\n\t\t\t// Parse body\n\t\t\ttry {\n\t\t\t\tresponse.body = parseBody(body, options.responseType, options.encoding);\n\t\t\t} catch (error) {\n\t\t\t\tif (isOk()) {\n\t\t\t\t\tconst parseError = new ParseError(error, response, options);\n\t\t\t\t\temitError(parseError);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Fall back to `utf8`\n\t\t\t\tresponse.body = body.toString();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tfor (const [index, hook] of options.hooks.afterResponse.entries()) {\n\t\t\t\t\t// @ts-ignore TS doesn't notice that CancelableRequest is a Promise\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tresponse = await hook(response, async (updatedOptions): CancelableRequest<Response> => {\n\t\t\t\t\t\tconst typedOptions = normalizeArguments(mergeOptions(options, {\n\t\t\t\t\t\t\t...updatedOptions,\n\t\t\t\t\t\t\tretry: {\n\t\t\t\t\t\t\t\tcalculateDelay: () => 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthrowHttpErrors: false,\n\t\t\t\t\t\t\tresolveBodyOnly: false\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// Remove any further hooks for that request, because we'll call them anyway.\n\t\t\t\t\t\t// The loop continues. We don't want duplicates (asPromise recursion).\n\t\t\t\t\t\ttypedOptions.hooks.afterResponse = options.hooks.afterResponse.slice(0, index);\n\n\t\t\t\t\t\tfor (const hook of options.hooks.beforeRetry) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\t\t\tawait hook(typedOptions);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst promise = asPromise(typedOptions);\n\n\t\t\t\t\t\tonCancel(() => {\n\t\t\t\t\t\t\tpromise.catch(() => {});\n\t\t\t\t\t\t\tpromise.cancel();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn promise as unknown as CancelableRequest<Response>;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\temitError(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check for HTTP error codes\n\t\t\tif (!isOk()) {\n\t\t\t\tconst error = new HTTPError(response, options);\n\n\t\t\t\tif (emitter.retry(error)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.throwHttpErrors) {\n\t\t\t\t\temitError(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolve(options.resolveBodyOnly ? response.body : response);\n\t\t});\n\n\t\temitter.once('error', reject);\n\n\t\tproxyEvents(proxy, emitter);\n\t}) as CancelableRequest<T>;\n\n\tpromise.on = (name: string, fn: (...args: any[]) => void) => {\n\t\tproxy.on(name, fn);\n\t\treturn promise;\n\t};\n\n\tconst shortcut = <T>(responseType: NormalizedOptions['responseType']): CancelableRequest<T> => {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tconst newPromise = promise.then(() => parseBody(body, responseType, options.encoding));\n\n\t\tObject.defineProperties(newPromise, Object.getOwnPropertyDescriptors(promise));\n\n\t\treturn newPromise as CancelableRequest<T>;\n\t};\n\n\tpromise.json = () => {\n\t\tif (is.undefined(body) && is.undefined(options.headers.accept)) {\n\t\t\toptions.headers.accept = 'application/json';\n\t\t}\n\n\t\treturn shortcut('json');\n\t};\n\n\tpromise.buffer = () => shortcut('buffer');\n\tpromise.text = () => shortcut('text');\n\n\treturn promise;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d39b04d8f61f253f33d490e50af911fe8b1b48de","contentHash":"6e3be20732987ff9edec7c83d78cf9037bd11c1ef14baf8286e30ff55eb3a0c8"},"/Users/ldlafountaine/code/got/source/errors.ts":{"path":"/Users/ldlafountaine/code/got/source/errors.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":56}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"6":{"start":{"line":10,"column":12},"end":{"line":10,"column":35}},"7":{"start":{"line":12,"column":8},"end":{"line":17,"column":11}},"8":{"start":{"line":19,"column":8},"end":{"line":28,"column":9}},"9":{"start":{"line":20,"column":35},"end":{"line":20,"column":89}},"10":{"start":{"line":21,"column":35},"end":{"line":21,"column":89}},"11":{"start":{"line":22,"column":36},"end":{"line":22,"column":134}},"12":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"13":{"start":{"line":25,"column":16},"end":{"line":25,"column":39}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":143}},"15":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":32}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":35}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":45}},"23":{"start":{"line":49,"column":8},"end":{"line":49,"column":32}},"24":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":81}},"26":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}},"27":{"start":{"line":57,"column":8},"end":{"line":60,"column":11}},"28":{"start":{"line":63,"column":0},"end":{"line":63,"column":32}},"29":{"start":{"line":66,"column":8},"end":{"line":66,"column":95}},"30":{"start":{"line":67,"column":8},"end":{"line":67,"column":32}},"31":{"start":{"line":68,"column":8},"end":{"line":71,"column":11}},"32":{"start":{"line":74,"column":0},"end":{"line":74,"column":30}},"33":{"start":{"line":77,"column":8},"end":{"line":77,"column":74}},"34":{"start":{"line":78,"column":8},"end":{"line":78,"column":40}},"35":{"start":{"line":79,"column":8},"end":{"line":82,"column":11}},"36":{"start":{"line":85,"column":0},"end":{"line":85,"column":46}},"37":{"start":{"line":88,"column":8},"end":{"line":88,"column":77}},"38":{"start":{"line":89,"column":8},"end":{"line":89,"column":47}},"39":{"start":{"line":92,"column":0},"end":{"line":92,"column":60}},"40":{"start":{"line":95,"column":8},"end":{"line":95,"column":45}},"41":{"start":{"line":96,"column":8},"end":{"line":96,"column":35}},"42":{"start":{"line":97,"column":8},"end":{"line":97,"column":33}},"43":{"start":{"line":98,"column":8},"end":{"line":98,"column":31}},"44":{"start":{"line":101,"column":0},"end":{"line":101,"column":36}},"45":{"start":{"line":102,"column":21},"end":{"line":102,"column":44}},"46":{"start":{"line":103,"column":0},"end":{"line":103,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":41},"end":{"line":29,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":32},"end":{"line":36,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":32},"end":{"line":43,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":32},"end":{"line":50,"column":5}},"line":47},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":42},"end":{"line":61,"column":5}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":35},"end":{"line":72,"column":5}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":49},"end":{"line":83,"column":5}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":25},"end":{"line":90,"column":5}},"line":87},"8":{"name":"(anonymous_8)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":41},"end":{"line":99,"column":5}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":28,"column":9}},{"start":{"line":19,"column":8},"end":{"line":28,"column":9}}],"line":19},"2":{"loc":{"start":{"line":24,"column":19},"end":{"line":24,"column":91}},"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":47}},{"start":{"line":24,"column":51},"end":{"line":24,"column":91}}],"line":24}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":3,"13":0,"14":3,"15":1,"16":0,"17":0,"18":1,"19":3,"20":3,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":1,"46":1},"f":{"0":3,"1":0,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[3,0],"1":[3,0],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/errors.ts","sources":["/Users/ldlafountaine/code/got/source/errors.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport {Timings} from '@szmarczak/http-timer';\nimport {TimeoutError as TimedOutError} from './utils/timed-out';\nimport {Response, NormalizedOptions} from './types';\n\nexport class GotError extends Error {\n\tcode?: string;\n\tstack!: string;\n\tdeclare readonly options: NormalizedOptions;\n\n\tconstructor(message: string, error: Partial<Error & {code?: string}>, options: NormalizedOptions) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, this.constructor);\n\t\tthis.name = 'GotError';\n\n\t\tif (!is.undefined(error.code)) {\n\t\t\tthis.code = error.code;\n\t\t}\n\n\t\tObject.defineProperty(this, 'options', {\n\t\t\t// This fails because of TS 3.7.2 useDefineForClassFields\n\t\t\t// Ref: https://github.com/microsoft/TypeScript/issues/34972\n\t\t\tenumerable: false,\n\t\t\tvalue: options\n\t\t});\n\n\t\t// Recover the original stacktrace\n\t\tif (!is.undefined(error.stack)) {\n\t\t\tconst indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n\t\t\tconst thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n\t\t\tconst errorStackTrace = error.stack.slice(error.stack.indexOf(error.message!) + error.message!.length).split('\\n').reverse();\n\n\t\t\t// Remove duplicated traces\n\t\t\twhile (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {\n\t\t\t\tthisStackTrace.shift();\n\t\t\t}\n\n\t\t\tthis.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n\t\t}\n\t}\n}\n\nexport class CacheError extends GotError {\n\tconstructor(error: Error, options: NormalizedOptions) {\n\t\tsuper(error.message, error, options);\n\t\tthis.name = 'CacheError';\n\t}\n}\n\nexport class RequestError extends GotError {\n\tconstructor(error: Error, options: NormalizedOptions) {\n\t\tsuper(error.message, error, options);\n\t\tthis.name = 'RequestError';\n\t}\n}\n\nexport class ReadError extends GotError {\n\tconstructor(error: Error, options: NormalizedOptions) {\n\t\tsuper(error.message, error, options);\n\t\tthis.name = 'ReadError';\n\t}\n}\n\nexport class ParseError extends GotError {\n\tdeclare readonly response: Response;\n\n\tconstructor(error: Error, response: Response, options: NormalizedOptions) {\n\t\tsuper(`${error.message} in \"${options.url.toString()}\"`, error, options);\n\t\tthis.name = 'ParseError';\n\n\t\tObject.defineProperty(this, 'response', {\n\t\t\tenumerable: false,\n\t\t\tvalue: response\n\t\t});\n\t}\n}\n\nexport class HTTPError extends GotError {\n\tdeclare readonly response: Response;\n\n\tconstructor(response: Response, options: NormalizedOptions) {\n\t\tsuper(`Response code ${response.statusCode} (${response.statusMessage!})`, {}, options);\n\t\tthis.name = 'HTTPError';\n\n\t\tObject.defineProperty(this, 'response', {\n\t\t\tenumerable: false,\n\t\t\tvalue: response\n\t\t});\n\t}\n}\n\nexport class MaxRedirectsError extends GotError {\n\tdeclare readonly response: Response;\n\n\tconstructor(response: Response, maxRedirects: number, options: NormalizedOptions) {\n\t\tsuper(`Redirected ${maxRedirects} times. Aborting.`, {}, options);\n\t\tthis.name = 'MaxRedirectsError';\n\n\t\tObject.defineProperty(this, 'response', {\n\t\t\tenumerable: false,\n\t\t\tvalue: response\n\t\t});\n\t}\n}\n\nexport class UnsupportedProtocolError extends GotError {\n\tconstructor(options: NormalizedOptions) {\n\t\tsuper(`Unsupported protocol \"${options.url.protocol}\"`, {}, options);\n\t\tthis.name = 'UnsupportedProtocolError';\n\t}\n}\n\nexport class TimeoutError extends GotError {\n\ttimings: Timings;\n\tevent: string;\n\n\tconstructor(error: TimedOutError, timings: Timings, options: NormalizedOptions) {\n\t\tsuper(error.message, error, options);\n\t\tthis.name = 'TimeoutError';\n\t\tthis.event = error.event;\n\t\tthis.timings = timings;\n\t}\n}\n\nexport {CancelError} from 'p-cancelable';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d1eb8cc8181b24810e0765b336d07718cac8229e","contentHash":"747834ac0a90969ad6e411d2e47181d1b6e5c59d93fb2d568a1f97a688d8959b"},"/Users/ldlafountaine/code/got/source/normalize-arguments.ts":{"path":"/Users/ldlafountaine/code/got/source/normalize-arguments.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":14},"end":{"line":7,"column":30}},"6":{"start":{"line":8,"column":22},"end":{"line":8,"column":47}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":54}},"8":{"start":{"line":10,"column":13},"end":{"line":10,"column":40}},"9":{"start":{"line":11,"column":27},"end":{"line":11,"column":54}},"10":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}},"11":{"start":{"line":13,"column":28},"end":{"line":13,"column":58}},"12":{"start":{"line":14,"column":26},"end":{"line":14,"column":60}},"13":{"start":{"line":15,"column":24},"end":{"line":15,"column":56}},"14":{"start":{"line":16,"column":23},"end":{"line":16,"column":54}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},"16":{"start":{"line":18,"column":25},"end":{"line":18,"column":58}},"17":{"start":{"line":19,"column":26},"end":{"line":19,"column":60}},"18":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"19":{"start":{"line":21,"column":32},"end":{"line":26,"column":1}},"20":{"start":{"line":27,"column":26},"end":{"line":27,"column":63}},"21":{"start":{"line":27,"column":37},"end":{"line":27,"column":63}},"22":{"start":{"line":29,"column":0},"end":{"line":182,"column":2}},"23":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"24":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"25":{"start":{"line":36,"column":8},"end":{"line":36,"column":57}},"26":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"27":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"28":{"start":{"line":40,"column":12},"end":{"line":40,"column":105}},"29":{"start":{"line":44,"column":4},"end":{"line":52,"column":5}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":57}},"31":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"32":{"start":{"line":47,"column":12},"end":{"line":47,"column":37}},"33":{"start":{"line":51,"column":8},"end":{"line":51,"column":63}},"34":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"35":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"36":{"start":{"line":57,"column":4},"end":{"line":71,"column":5}},"37":{"start":{"line":58,"column":8},"end":{"line":67,"column":9}},"38":{"start":{"line":59,"column":12},"end":{"line":66,"column":13}},"39":{"start":{"line":60,"column":16},"end":{"line":62,"column":17}},"40":{"start":{"line":61,"column":20},"end":{"line":61,"column":126}},"41":{"start":{"line":65,"column":16},"end":{"line":65,"column":42}},"42":{"start":{"line":70,"column":8},"end":{"line":70,"column":105}},"43":{"start":{"line":72,"column":4},"end":{"line":82,"column":5}},"44":{"start":{"line":73,"column":8},"end":{"line":81,"column":9}},"45":{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},"46":{"start":{"line":76,"column":16},"end":{"line":79,"column":18}},"47":{"start":{"line":84,"column":4},"end":{"line":89,"column":5}},"48":{"start":{"line":85,"column":8},"end":{"line":85,"column":55}},"49":{"start":{"line":87,"column":9},"end":{"line":89,"column":5}},"50":{"start":{"line":88,"column":8},"end":{"line":88,"column":29}},"51":{"start":{"line":91,"column":22},"end":{"line":91,"column":29}},"52":{"start":{"line":92,"column":4},"end":{"line":104,"column":5}},"53":{"start":{"line":93,"column":8},"end":{"line":93,"column":46}},"54":{"start":{"line":96,"column":8},"end":{"line":103,"column":10}},"55":{"start":{"line":97,"column":43},"end":{"line":97,"column":68}},"56":{"start":{"line":105,"column":4},"end":{"line":113,"column":5}},"57":{"start":{"line":106,"column":8},"end":{"line":109,"column":10}},"58":{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},"59":{"start":{"line":112,"column":8},"end":{"line":112,"column":36}},"60":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"61":{"start":{"line":115,"column":8},"end":{"line":115,"column":150}},"62":{"start":{"line":115,"column":115},"end":{"line":115,"column":147}},"63":{"start":{"line":117,"column":4},"end":{"line":117,"column":100}},"64":{"start":{"line":117,"column":76},"end":{"line":117,"column":96}},"65":{"start":{"line":118,"column":4},"end":{"line":118,"column":72}},"66":{"start":{"line":119,"column":4},"end":{"line":119,"column":70}},"67":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"68":{"start":{"line":122,"column":8},"end":{"line":122,"column":94}},"69":{"start":{"line":125,"column":4},"end":{"line":130,"column":5}},"70":{"start":{"line":126,"column":8},"end":{"line":126,"column":54}},"71":{"start":{"line":129,"column":8},"end":{"line":129,"column":140}},"72":{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},"73":{"start":{"line":133,"column":8},"end":{"line":135,"column":116}},"74":{"start":{"line":135,"column":37},"end":{"line":135,"column":99}},"75":{"start":{"line":138,"column":4},"end":{"line":155,"column":5}},"76":{"start":{"line":139,"column":45},"end":{"line":139,"column":62}},"77":{"start":{"line":141,"column":8},"end":{"line":153,"column":9}},"78":{"start":{"line":142,"column":12},"end":{"line":146,"column":13}},"79":{"start":{"line":144,"column":16},"end":{"line":144,"column":80}},"80":{"start":{"line":145,"column":16},"end":{"line":145,"column":92}},"81":{"start":{"line":148,"column":13},"end":{"line":153,"column":9}},"82":{"start":{"line":149,"column":12},"end":{"line":149,"column":112}},"83":{"start":{"line":151,"column":13},"end":{"line":153,"column":9}},"84":{"start":{"line":152,"column":12},"end":{"line":152,"column":117}},"85":{"start":{"line":154,"column":8},"end":{"line":154,"column":59}},"86":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"87":{"start":{"line":158,"column":8},"end":{"line":158,"column":95}},"88":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"89":{"start":{"line":162,"column":8},"end":{"line":162,"column":33}},"90":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"91":{"start":{"line":166,"column":8},"end":{"line":166,"column":57}},"92":{"start":{"line":169,"column":4},"end":{"line":169,"column":53}},"93":{"start":{"line":170,"column":4},"end":{"line":170,"column":49}},"94":{"start":{"line":171,"column":4},"end":{"line":171,"column":63}},"95":{"start":{"line":172,"column":4},"end":{"line":172,"column":73}},"96":{"start":{"line":173,"column":4},"end":{"line":173,"column":86}},"97":{"start":{"line":174,"column":4},"end":{"line":174,"column":101}},"98":{"start":{"line":175,"column":4},"end":{"line":175,"column":63}},"99":{"start":{"line":176,"column":4},"end":{"line":176,"column":61}},"100":{"start":{"line":177,"column":4},"end":{"line":177,"column":92}},"101":{"start":{"line":178,"column":4},"end":{"line":178,"column":61}},"102":{"start":{"line":179,"column":4},"end":{"line":179,"column":63}},"103":{"start":{"line":180,"column":4},"end":{"line":180,"column":87}},"104":{"start":{"line":181,"column":4},"end":{"line":181,"column":19}},"105":{"start":{"line":183,"column":0},"end":{"line":203,"column":2}},"106":{"start":{"line":184,"column":24},"end":{"line":184,"column":57}},"107":{"start":{"line":186,"column":23},"end":{"line":186,"column":25}},"108":{"start":{"line":187,"column":4},"end":{"line":200,"column":5}},"109":{"start":{"line":188,"column":8},"end":{"line":188,"column":98}},"110":{"start":{"line":189,"column":8},"end":{"line":199,"column":9}},"111":{"start":{"line":190,"column":12},"end":{"line":192,"column":13}},"112":{"start":{"line":191,"column":16},"end":{"line":191,"column":25}},"113":{"start":{"line":193,"column":12},"end":{"line":198,"column":14}},"114":{"start":{"line":201,"column":4},"end":{"line":201,"column":55}},"115":{"start":{"line":202,"column":4},"end":{"line":202,"column":25}},"116":{"start":{"line":204,"column":0},"end":{"line":272,"column":2}},"117":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"118":{"start":{"line":208,"column":8},"end":{"line":208,"column":54}},"119":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"120":{"start":{"line":211,"column":8},"end":{"line":211,"column":21}},"121":{"start":{"line":213,"column":4},"end":{"line":226,"column":5}},"122":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"123":{"start":{"line":215,"column":12},"end":{"line":215,"column":96}},"124":{"start":{"line":218,"column":8},"end":{"line":218,"column":26}},"125":{"start":{"line":219,"column":8},"end":{"line":219,"column":162}},"126":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"127":{"start":{"line":223,"column":12},"end":{"line":223,"column":86}},"128":{"start":{"line":225,"column":8},"end":{"line":225,"column":167}},"129":{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},"130":{"start":{"line":230,"column":8},"end":{"line":230,"column":54}},"131":{"start":{"line":231,"column":8},"end":{"line":231,"column":65}},"132":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"133":{"start":{"line":233,"column":12},"end":{"line":233,"column":52}},"134":{"start":{"line":236,"column":8},"end":{"line":239,"column":11}},"135":{"start":{"line":241,"column":9},"end":{"line":244,"column":5}},"136":{"start":{"line":243,"column":8},"end":{"line":243,"column":90}},"137":{"start":{"line":245,"column":30},"end":{"line":245,"column":37}},"138":{"start":{"line":247,"column":20},"end":{"line":247,"column":37}},"139":{"start":{"line":248,"column":4},"end":{"line":257,"column":7}},"140":{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},"141":{"start":{"line":251,"column":16},"end":{"line":251,"column":124}},"142":{"start":{"line":253,"column":12},"end":{"line":253,"column":110}},"143":{"start":{"line":254,"column":12},"end":{"line":254,"column":30}},"144":{"start":{"line":256,"column":19},"end":{"line":256,"column":28}},"145":{"start":{"line":259,"column":4},"end":{"line":264,"column":5}},"146":{"start":{"line":260,"column":8},"end":{"line":263,"column":9}},"147":{"start":{"line":262,"column":12},"end":{"line":262,"column":50}},"148":{"start":{"line":265,"column":4},"end":{"line":270,"column":5}},"149":{"start":{"line":266,"column":23},"end":{"line":266,"column":46}},"150":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"151":{"start":{"line":268,"column":12},"end":{"line":268,"column":82}},"152":{"start":{"line":271,"column":4},"end":{"line":271,"column":29}},"153":{"start":{"line":273,"column":20},"end":{"line":273,"column":44}},"154":{"start":{"line":274,"column":0},"end":{"line":401,"column":2}},"155":{"start":{"line":276,"column":4},"end":{"line":276,"column":44}},"156":{"start":{"line":278,"column":24},"end":{"line":278,"column":31}},"157":{"start":{"line":279,"column":26},"end":{"line":279,"column":73}},"158":{"start":{"line":282,"column":23},"end":{"line":282,"column":60}},"159":{"start":{"line":283,"column":23},"end":{"line":283,"column":60}},"160":{"start":{"line":284,"column":23},"end":{"line":284,"column":60}},"161":{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},"162":{"start":{"line":286,"column":12},"end":{"line":286,"column":95}},"163":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"164":{"start":{"line":288,"column":54},"end":{"line":288,"column":60}},"165":{"start":{"line":289,"column":12},"end":{"line":289,"column":96}},"166":{"start":{"line":291,"column":8},"end":{"line":297,"column":9}},"167":{"start":{"line":296,"column":12},"end":{"line":296,"column":97}},"168":{"start":{"line":298,"column":8},"end":{"line":300,"column":9}},"169":{"start":{"line":299,"column":12},"end":{"line":299,"column":71}},"170":{"start":{"line":302,"column":4},"end":{"line":319,"column":5}},"171":{"start":{"line":304,"column":8},"end":{"line":306,"column":9}},"172":{"start":{"line":305,"column":12},"end":{"line":305,"column":100}},"173":{"start":{"line":308,"column":9},"end":{"line":319,"column":5}},"174":{"start":{"line":309,"column":8},"end":{"line":311,"column":9}},"175":{"start":{"line":310,"column":12},"end":{"line":310,"column":74}},"176":{"start":{"line":312,"column":8},"end":{"line":312,"column":76}},"177":{"start":{"line":314,"column":9},"end":{"line":319,"column":5}},"178":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"179":{"start":{"line":316,"column":12},"end":{"line":316,"column":57}},"180":{"start":{"line":318,"column":8},"end":{"line":318,"column":52}},"181":{"start":{"line":320,"column":27},"end":{"line":320,"column":65}},"182":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"183":{"start":{"line":322,"column":8},"end":{"line":322,"column":54}},"184":{"start":{"line":333,"column":4},"end":{"line":339,"column":5}},"185":{"start":{"line":334,"column":8},"end":{"line":338,"column":9}},"186":{"start":{"line":337,"column":12},"end":{"line":337,"column":63}},"187":{"start":{"line":340,"column":4},"end":{"line":342,"column":5}},"188":{"start":{"line":341,"column":8},"end":{"line":341,"column":44}},"189":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"190":{"start":{"line":344,"column":8},"end":{"line":344,"column":103}},"191":{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},"192":{"start":{"line":348,"column":8},"end":{"line":348,"column":61}},"193":{"start":{"line":350,"column":4},"end":{"line":350,"column":38}},"194":{"start":{"line":352,"column":4},"end":{"line":358,"column":5}},"195":{"start":{"line":353,"column":8},"end":{"line":353,"column":57}},"196":{"start":{"line":354,"column":8},"end":{"line":354,"column":31}},"197":{"start":{"line":357,"column":8},"end":{"line":357,"column":106}},"198":{"start":{"line":360,"column":4},"end":{"line":371,"column":5}},"199":{"start":{"line":361,"column":24},"end":{"line":361,"column":83}},"200":{"start":{"line":362,"column":8},"end":{"line":370,"column":9}},"201":{"start":{"line":363,"column":41},"end":{"line":363,"column":55}},"202":{"start":{"line":364,"column":12},"end":{"line":369,"column":14}},"203":{"start":{"line":372,"column":4},"end":{"line":374,"column":5}},"204":{"start":{"line":373,"column":8},"end":{"line":373,"column":133}},"205":{"start":{"line":375,"column":4},"end":{"line":377,"column":5}},"206":{"start":{"line":376,"column":8},"end":{"line":376,"column":49}},"207":{"start":{"line":387,"column":4},"end":{"line":387,"column":27}},"208":{"start":{"line":389,"column":4},"end":{"line":397,"column":5}},"209":{"start":{"line":390,"column":29},"end":{"line":390,"column":92}},"210":{"start":{"line":391,"column":8},"end":{"line":396,"column":9}},"211":{"start":{"line":392,"column":12},"end":{"line":392,"column":50}},"212":{"start":{"line":395,"column":12},"end":{"line":395,"column":42}},"213":{"start":{"line":399,"column":4},"end":{"line":399,"column":23}},"214":{"start":{"line":400,"column":4},"end":{"line":400,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":26},"end":{"line":27,"column":27}},"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":63}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":32},"end":{"line":29,"column":33}},"loc":{"start":{"line":29,"column":55},"end":{"line":182,"column":1}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":97,"column":28},"end":{"line":97,"column":29}},"loc":{"start":{"line":97,"column":43},"end":{"line":97,"column":68}},"line":97},"3":{"name":"(anonymous_3)","decl":{"start":{"line":115,"column":108},"end":{"line":115,"column":109}},"loc":{"start":{"line":115,"column":115},"end":{"line":115,"column":147}},"line":115},"4":{"name":"(anonymous_4)","decl":{"start":{"line":117,"column":66},"end":{"line":117,"column":67}},"loc":{"start":{"line":117,"column":76},"end":{"line":117,"column":96}},"line":117},"5":{"name":"(anonymous_5)","decl":{"start":{"line":135,"column":8},"end":{"line":135,"column":9}},"loc":{"start":{"line":135,"column":37},"end":{"line":135,"column":99}},"line":135},"6":{"name":"(anonymous_6)","decl":{"start":{"line":183,"column":23},"end":{"line":183,"column":24}},"loc":{"start":{"line":183,"column":39},"end":{"line":203,"column":1}},"line":183},"7":{"name":"(anonymous_7)","decl":{"start":{"line":204,"column":29},"end":{"line":204,"column":30}},"loc":{"start":{"line":204,"column":57},"end":{"line":272,"column":1}},"line":204},"8":{"name":"(anonymous_8)","decl":{"start":{"line":249,"column":13},"end":{"line":249,"column":14}},"loc":{"start":{"line":249,"column":24},"end":{"line":255,"column":9}},"line":249},"9":{"name":"(anonymous_9)","decl":{"start":{"line":256,"column":13},"end":{"line":256,"column":14}},"loc":{"start":{"line":256,"column":19},"end":{"line":256,"column":28}},"line":256},"10":{"name":"(anonymous_10)","decl":{"start":{"line":274,"column":36},"end":{"line":274,"column":37}},"loc":{"start":{"line":274,"column":55},"end":{"line":401,"column":1}},"line":274},"11":{"name":"(anonymous_11)","decl":{"start":{"line":288,"column":44},"end":{"line":288,"column":45}},"loc":{"start":{"line":288,"column":54},"end":{"line":288,"column":60}},"line":288}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},{"start":{"line":32,"column":4},"end":{"line":37,"column":5}}],"line":32},"1":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"2":{"loc":{"start":{"line":44,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":52,"column":5}},{"start":{"line":44,"column":4},"end":{"line":52,"column":5}}],"line":44},"3":{"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":93}},"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":51}},{"start":{"line":44,"column":55},"end":{"line":44,"column":93}}],"line":44},"4":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"5":{"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":78}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":42}},{"start":{"line":46,"column":46},"end":{"line":46,"column":78}}],"line":46},"6":{"loc":{"start":{"line":51,"column":28},"end":{"line":51,"column":62}},"type":"cond-expr","locations":[{"start":{"line":51,"column":39},"end":{"line":51,"column":57}},{"start":{"line":51,"column":60},"end":{"line":51,"column":62}}],"line":51},"7":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"8":{"loc":{"start":{"line":57,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":71,"column":5}},{"start":{"line":57,"column":4},"end":{"line":71,"column":5}}],"line":57},"9":{"loc":{"start":{"line":59,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":66,"column":13}},{"start":{"line":59,"column":12},"end":{"line":66,"column":13}}],"line":59},"10":{"loc":{"start":{"line":60,"column":16},"end":{"line":62,"column":17}},"type":"if","locations":[{"start":{"line":60,"column":16},"end":{"line":62,"column":17}},{"start":{"line":60,"column":16},"end":{"line":62,"column":17}}],"line":60},"11":{"loc":{"start":{"line":72,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":82,"column":5}},{"start":{"line":72,"column":4},"end":{"line":82,"column":5}}],"line":72},"12":{"loc":{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},{"start":{"line":74,"column":12},"end":{"line":80,"column":13}}],"line":74},"13":{"loc":{"start":{"line":74,"column":18},"end":{"line":74,"column":99}},"type":"binary-expr","locations":[{"start":{"line":74,"column":18},"end":{"line":74,"column":51}},{"start":{"line":74,"column":55},"end":{"line":74,"column":99}}],"line":74},"14":{"loc":{"start":{"line":84,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":89,"column":5}},{"start":{"line":84,"column":4},"end":{"line":89,"column":5}}],"line":84},"15":{"loc":{"start":{"line":87,"column":9},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":9},"end":{"line":89,"column":5}},{"start":{"line":87,"column":9},"end":{"line":89,"column":5}}],"line":87},"16":{"loc":{"start":{"line":92,"column":4},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":104,"column":5}},{"start":{"line":92,"column":4},"end":{"line":104,"column":5}}],"line":92},"17":{"loc":{"start":{"line":105,"column":4},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":113,"column":5}},{"start":{"line":105,"column":4},"end":{"line":113,"column":5}}],"line":105},"18":{"loc":{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},{"start":{"line":111,"column":9},"end":{"line":113,"column":5}}],"line":111},"19":{"loc":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},{"start":{"line":114,"column":4},"end":{"line":116,"column":5}}],"line":114},"20":{"loc":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},{"start":{"line":121,"column":4},"end":{"line":123,"column":5}}],"line":121},"21":{"loc":{"start":{"line":121,"column":8},"end":{"line":121,"column":85}},"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":24}},{"start":{"line":121,"column":28},"end":{"line":121,"column":85}}],"line":121},"22":{"loc":{"start":{"line":125,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":130,"column":5}},{"start":{"line":125,"column":4},"end":{"line":130,"column":5}}],"line":125},"23":{"loc":{"start":{"line":129,"column":31},"end":{"line":129,"column":93}},"type":"cond-expr","locations":[{"start":{"line":129,"column":75},"end":{"line":129,"column":81}},{"start":{"line":129,"column":84},"end":{"line":129,"column":93}}],"line":129},"24":{"loc":{"start":{"line":129,"column":31},"end":{"line":129,"column":72}},"type":"binary-expr","locations":[{"start":{"line":129,"column":31},"end":{"line":129,"column":55}},{"start":{"line":129,"column":59},"end":{"line":129,"column":72}}],"line":129},"25":{"loc":{"start":{"line":129,"column":96},"end":{"line":129,"column":137}},"type":"cond-expr","locations":[{"start":{"line":129,"column":127},"end":{"line":129,"column":129}},{"start":{"line":129,"column":132},"end":{"line":129,"column":137}}],"line":129},"26":{"loc":{"start":{"line":129,"column":96},"end":{"line":129,"column":124}},"type":"binary-expr","locations":[{"start":{"line":129,"column":96},"end":{"line":129,"column":107}},{"start":{"line":129,"column":111},"end":{"line":129,"column":124}}],"line":129},"27":{"loc":{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},{"start":{"line":132,"column":4},"end":{"line":136,"column":5}}],"line":132},"28":{"loc":{"start":{"line":138,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":155,"column":5}},{"start":{"line":138,"column":4},"end":{"line":155,"column":5}}],"line":138},"29":{"loc":{"start":{"line":141,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":153,"column":9}},{"start":{"line":141,"column":8},"end":{"line":153,"column":9}}],"line":141},"30":{"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":66}},"type":"binary-expr","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":34}},{"start":{"line":141,"column":38},"end":{"line":141,"column":66}}],"line":141},"31":{"loc":{"start":{"line":142,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":146,"column":13}},{"start":{"line":142,"column":12},"end":{"line":146,"column":13}}],"line":142},"32":{"loc":{"start":{"line":148,"column":13},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":13},"end":{"line":153,"column":9}},{"start":{"line":148,"column":13},"end":{"line":153,"column":9}}],"line":148},"33":{"loc":{"start":{"line":151,"column":13},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":13},"end":{"line":153,"column":9}},{"start":{"line":151,"column":13},"end":{"line":153,"column":9}}],"line":151},"34":{"loc":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},{"start":{"line":157,"column":4},"end":{"line":159,"column":5}}],"line":157},"35":{"loc":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},{"start":{"line":161,"column":4},"end":{"line":163,"column":5}}],"line":161},"36":{"loc":{"start":{"line":161,"column":8},"end":{"line":161,"column":101}},"type":"binary-expr","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":45}},{"start":{"line":161,"column":49},"end":{"line":161,"column":101}}],"line":161},"37":{"loc":{"start":{"line":161,"column":51},"end":{"line":161,"column":100}},"type":"binary-expr","locations":[{"start":{"line":161,"column":51},"end":{"line":161,"column":59}},{"start":{"line":161,"column":63},"end":{"line":161,"column":100}}],"line":161},"38":{"loc":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},{"start":{"line":165,"column":4},"end":{"line":167,"column":5}}],"line":165},"39":{"loc":{"start":{"line":173,"column":42},"end":{"line":173,"column":83}},"type":"cond-expr","locations":[{"start":{"line":173,"column":73},"end":{"line":173,"column":75}},{"start":{"line":173,"column":78},"end":{"line":173,"column":83}}],"line":173},"40":{"loc":{"start":{"line":173,"column":42},"end":{"line":173,"column":70}},"type":"binary-expr","locations":[{"start":{"line":173,"column":42},"end":{"line":173,"column":53}},{"start":{"line":173,"column":57},"end":{"line":173,"column":70}}],"line":173},"41":{"loc":{"start":{"line":174,"column":56},"end":{"line":174,"column":98}},"type":"cond-expr","locations":[{"start":{"line":174,"column":87},"end":{"line":174,"column":89}},{"start":{"line":174,"column":92},"end":{"line":174,"column":98}}],"line":174},"42":{"loc":{"start":{"line":174,"column":56},"end":{"line":174,"column":84}},"type":"binary-expr","locations":[{"start":{"line":174,"column":56},"end":{"line":174,"column":67}},{"start":{"line":174,"column":71},"end":{"line":174,"column":84}}],"line":174},"43":{"loc":{"start":{"line":177,"column":48},"end":{"line":177,"column":89}},"type":"cond-expr","locations":[{"start":{"line":177,"column":79},"end":{"line":177,"column":81}},{"start":{"line":177,"column":84},"end":{"line":177,"column":89}}],"line":177},"44":{"loc":{"start":{"line":177,"column":48},"end":{"line":177,"column":76}},"type":"binary-expr","locations":[{"start":{"line":177,"column":48},"end":{"line":177,"column":59}},{"start":{"line":177,"column":63},"end":{"line":177,"column":76}}],"line":177},"45":{"loc":{"start":{"line":180,"column":46},"end":{"line":180,"column":84}},"type":"cond-expr","locations":[{"start":{"line":180,"column":77},"end":{"line":180,"column":79}},{"start":{"line":180,"column":82},"end":{"line":180,"column":84}}],"line":180},"46":{"loc":{"start":{"line":180,"column":46},"end":{"line":180,"column":74}},"type":"binary-expr","locations":[{"start":{"line":180,"column":46},"end":{"line":180,"column":57}},{"start":{"line":180,"column":61},"end":{"line":180,"column":74}}],"line":180},"47":{"loc":{"start":{"line":190,"column":12},"end":{"line":192,"column":13}},"type":"if","locations":[{"start":{"line":190,"column":12},"end":{"line":192,"column":13}},{"start":{"line":190,"column":12},"end":{"line":192,"column":13}}],"line":190},"48":{"loc":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},{"start":{"line":207,"column":4},"end":{"line":209,"column":5}}],"line":207},"49":{"loc":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},{"start":{"line":210,"column":4},"end":{"line":212,"column":5}}],"line":210},"50":{"loc":{"start":{"line":213,"column":4},"end":{"line":226,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":226,"column":5}},{"start":{"line":213,"column":4},"end":{"line":226,"column":5}}],"line":213},"51":{"loc":{"start":{"line":213,"column":8},"end":{"line":213,"column":65}},"type":"binary-expr","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":37}},{"start":{"line":213,"column":41},"end":{"line":213,"column":65}}],"line":213},"52":{"loc":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},{"start":{"line":214,"column":8},"end":{"line":216,"column":9}}],"line":214},"53":{"loc":{"start":{"line":219,"column":45},"end":{"line":219,"column":108}},"type":"cond-expr","locations":[{"start":{"line":219,"column":89},"end":{"line":219,"column":95}},{"start":{"line":219,"column":98},"end":{"line":219,"column":108}}],"line":219},"54":{"loc":{"start":{"line":219,"column":45},"end":{"line":219,"column":86}},"type":"binary-expr","locations":[{"start":{"line":219,"column":45},"end":{"line":219,"column":69}},{"start":{"line":219,"column":73},"end":{"line":219,"column":86}}],"line":219},"55":{"loc":{"start":{"line":219,"column":111},"end":{"line":219,"column":149}},"type":"cond-expr","locations":[{"start":{"line":219,"column":142},"end":{"line":219,"column":144}},{"start":{"line":219,"column":147},"end":{"line":219,"column":149}}],"line":219},"56":{"loc":{"start":{"line":219,"column":111},"end":{"line":219,"column":139}},"type":"binary-expr","locations":[{"start":{"line":219,"column":111},"end":{"line":219,"column":122}},{"start":{"line":219,"column":126},"end":{"line":219,"column":139}}],"line":219},"57":{"loc":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},{"start":{"line":222,"column":8},"end":{"line":224,"column":9}}],"line":222},"58":{"loc":{"start":{"line":225,"column":45},"end":{"line":225,"column":108}},"type":"cond-expr","locations":[{"start":{"line":225,"column":89},"end":{"line":225,"column":95}},{"start":{"line":225,"column":98},"end":{"line":225,"column":108}}],"line":225},"59":{"loc":{"start":{"line":225,"column":45},"end":{"line":225,"column":86}},"type":"binary-expr","locations":[{"start":{"line":225,"column":45},"end":{"line":225,"column":69}},{"start":{"line":225,"column":73},"end":{"line":225,"column":86}}],"line":225},"60":{"loc":{"start":{"line":225,"column":111},"end":{"line":225,"column":149}},"type":"cond-expr","locations":[{"start":{"line":225,"column":142},"end":{"line":225,"column":144}},{"start":{"line":225,"column":147},"end":{"line":225,"column":149}}],"line":225},"61":{"loc":{"start":{"line":225,"column":111},"end":{"line":225,"column":139}},"type":"binary-expr","locations":[{"start":{"line":225,"column":111},"end":{"line":225,"column":122}},{"start":{"line":225,"column":126},"end":{"line":225,"column":139}}],"line":225},"62":{"loc":{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},{"start":{"line":229,"column":4},"end":{"line":244,"column":5}}],"line":229},"63":{"loc":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},{"start":{"line":232,"column":8},"end":{"line":234,"column":9}}],"line":232},"64":{"loc":{"start":{"line":232,"column":12},"end":{"line":232,"column":50}},"type":"binary-expr","locations":[{"start":{"line":232,"column":12},"end":{"line":232,"column":32}},{"start":{"line":232,"column":36},"end":{"line":232,"column":50}}],"line":232},"65":{"loc":{"start":{"line":241,"column":9},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":9},"end":{"line":244,"column":5}},{"start":{"line":241,"column":9},"end":{"line":244,"column":5}}],"line":241},"66":{"loc":{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},"type":"if","locations":[{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},{"start":{"line":250,"column":12},"end":{"line":252,"column":13}}],"line":250},"67":{"loc":{"start":{"line":260,"column":8},"end":{"line":263,"column":9}},"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":263,"column":9}},{"start":{"line":260,"column":8},"end":{"line":263,"column":9}}],"line":260},"68":{"loc":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},{"start":{"line":267,"column":8},"end":{"line":269,"column":9}}],"line":267},"69":{"loc":{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},"type":"if","locations":[{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},{"start":{"line":285,"column":8},"end":{"line":287,"column":9}}],"line":285},"70":{"loc":{"start":{"line":285,"column":12},"end":{"line":285,"column":75}},"type":"binary-expr","locations":[{"start":{"line":285,"column":13},"end":{"line":285,"column":19}},{"start":{"line":285,"column":23},"end":{"line":285,"column":29}},{"start":{"line":285,"column":33},"end":{"line":285,"column":39}},{"start":{"line":285,"column":44},"end":{"line":285,"column":75}}],"line":285},"71":{"loc":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},{"start":{"line":288,"column":8},"end":{"line":290,"column":9}}],"line":288},"72":{"loc":{"start":{"line":291,"column":8},"end":{"line":297,"column":9}},"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":297,"column":9}},{"start":{"line":291,"column":8},"end":{"line":297,"column":9}}],"line":291},"73":{"loc":{"start":{"line":291,"column":12},"end":{"line":295,"column":88}},"type":"binary-expr","locations":[{"start":{"line":291,"column":12},"end":{"line":291,"column":18}},{"start":{"line":292,"column":12},"end":{"line":292,"column":50}},{"start":{"line":293,"column":12},"end":{"line":293,"column":46}},{"start":{"line":294,"column":12},"end":{"line":294,"column":46}},{"start":{"line":295,"column":12},"end":{"line":295,"column":88}}],"line":291},"74":{"loc":{"start":{"line":295,"column":14},"end":{"line":295,"column":87}},"type":"binary-expr","locations":[{"start":{"line":295,"column":14},"end":{"line":295,"column":47}},{"start":{"line":295,"column":51},"end":{"line":295,"column":87}}],"line":295},"75":{"loc":{"start":{"line":298,"column":8},"end":{"line":300,"column":9}},"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":300,"column":9}},{"start":{"line":298,"column":8},"end":{"line":300,"column":9}}],"line":298},"76":{"loc":{"start":{"line":298,"column":12},"end":{"line":298,"column":56}},"type":"binary-expr","locations":[{"start":{"line":298,"column":12},"end":{"line":298,"column":18}},{"start":{"line":298,"column":22},"end":{"line":298,"column":56}}],"line":298},"77":{"loc":{"start":{"line":302,"column":4},"end":{"line":319,"column":5}},"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":319,"column":5}},{"start":{"line":302,"column":4},"end":{"line":319,"column":5}}],"line":302},"78":{"loc":{"start":{"line":304,"column":8},"end":{"line":306,"column":9}},"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":306,"column":9}},{"start":{"line":304,"column":8},"end":{"line":306,"column":9}}],"line":304},"79":{"loc":{"start":{"line":304,"column":12},"end":{"line":304,"column":102}},"type":"binary-expr","locations":[{"start":{"line":304,"column":12},"end":{"line":304,"column":45}},{"start":{"line":304,"column":49},"end":{"line":304,"column":85}},{"start":{"line":304,"column":89},"end":{"line":304,"column":102}}],"line":304},"80":{"loc":{"start":{"line":308,"column":9},"end":{"line":319,"column":5}},"type":"if","locations":[{"start":{"line":308,"column":9},"end":{"line":319,"column":5}},{"start":{"line":308,"column":9},"end":{"line":319,"column":5}}],"line":308},"81":{"loc":{"start":{"line":309,"column":8},"end":{"line":311,"column":9}},"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":311,"column":9}},{"start":{"line":309,"column":8},"end":{"line":311,"column":9}}],"line":309},"82":{"loc":{"start":{"line":314,"column":9},"end":{"line":319,"column":5}},"type":"if","locations":[{"start":{"line":314,"column":9},"end":{"line":319,"column":5}},{"start":{"line":314,"column":9},"end":{"line":319,"column":5}}],"line":314},"83":{"loc":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"type":"if","locations":[{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},{"start":{"line":315,"column":8},"end":{"line":317,"column":9}}],"line":315},"84":{"loc":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},{"start":{"line":321,"column":4},"end":{"line":323,"column":5}}],"line":321},"85":{"loc":{"start":{"line":333,"column":4},"end":{"line":339,"column":5}},"type":"if","locations":[{"start":{"line":333,"column":4},"end":{"line":339,"column":5}},{"start":{"line":333,"column":4},"end":{"line":339,"column":5}}],"line":333},"86":{"loc":{"start":{"line":333,"column":8},"end":{"line":333,"column":113}},"type":"binary-expr","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":57}},{"start":{"line":333,"column":61},"end":{"line":333,"column":113}}],"line":333},"87":{"loc":{"start":{"line":334,"column":8},"end":{"line":338,"column":9}},"type":"if","locations":[{"start":{"line":334,"column":8},"end":{"line":338,"column":9}},{"start":{"line":334,"column":8},"end":{"line":338,"column":9}}],"line":334},"88":{"loc":{"start":{"line":334,"column":12},"end":{"line":335,"column":51}},"type":"binary-expr","locations":[{"start":{"line":334,"column":13},"end":{"line":334,"column":38}},{"start":{"line":334,"column":42},"end":{"line":334,"column":66}},{"start":{"line":334,"column":70},"end":{"line":334,"column":96}},{"start":{"line":335,"column":12},"end":{"line":335,"column":51}}],"line":334},"89":{"loc":{"start":{"line":340,"column":4},"end":{"line":342,"column":5}},"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":342,"column":5}},{"start":{"line":340,"column":4},"end":{"line":342,"column":5}}],"line":340},"90":{"loc":{"start":{"line":340,"column":8},"end":{"line":340,"column":102}},"type":"binary-expr","locations":[{"start":{"line":340,"column":8},"end":{"line":340,"column":25}},{"start":{"line":340,"column":29},"end":{"line":340,"column":60}},{"start":{"line":340,"column":64},"end":{"line":340,"column":102}}],"line":340},"91":{"loc":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"type":"if","locations":[{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},{"start":{"line":343,"column":4},"end":{"line":345,"column":5}}],"line":343},"92":{"loc":{"start":{"line":343,"column":8},"end":{"line":343,"column":80}},"type":"binary-expr","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":26}},{"start":{"line":343,"column":30},"end":{"line":343,"column":80}}],"line":343},"93":{"loc":{"start":{"line":344,"column":37},"end":{"line":344,"column":102}},"type":"cond-expr","locations":[{"start":{"line":344,"column":65},"end":{"line":344,"column":84}},{"start":{"line":344,"column":87},"end":{"line":344,"column":102}}],"line":344},"94":{"loc":{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},{"start":{"line":347,"column":4},"end":{"line":349,"column":5}}],"line":347},"95":{"loc":{"start":{"line":347,"column":8},"end":{"line":347,"column":77}},"type":"binary-expr","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":40}},{"start":{"line":347,"column":44},"end":{"line":347,"column":77}}],"line":347},"96":{"loc":{"start":{"line":352,"column":4},"end":{"line":358,"column":5}},"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":358,"column":5}},{"start":{"line":352,"column":4},"end":{"line":358,"column":5}}],"line":352},"97":{"loc":{"start":{"line":357,"column":41},"end":{"line":357,"column":105}},"type":"cond-expr","locations":[{"start":{"line":357,"column":77},"end":{"line":357,"column":90}},{"start":{"line":357,"column":93},"end":{"line":357,"column":105}}],"line":357},"98":{"loc":{"start":{"line":360,"column":4},"end":{"line":371,"column":5}},"type":"if","locations":[{"start":{"line":360,"column":4},"end":{"line":371,"column":5}},{"start":{"line":360,"column":4},"end":{"line":371,"column":5}}],"line":360},"99":{"loc":{"start":{"line":362,"column":8},"end":{"line":370,"column":9}},"type":"if","locations":[{"start":{"line":362,"column":8},"end":{"line":370,"column":9}},{"start":{"line":362,"column":8},"end":{"line":370,"column":9}}],"line":362},"100":{"loc":{"start":{"line":362,"column":12},"end":{"line":362,"column":73}},"type":"cond-expr","locations":[{"start":{"line":362,"column":55},"end":{"line":362,"column":61}},{"start":{"line":362,"column":64},"end":{"line":362,"column":73}}],"line":362},"101":{"loc":{"start":{"line":362,"column":12},"end":{"line":362,"column":52}},"type":"binary-expr","locations":[{"start":{"line":362,"column":12},"end":{"line":362,"column":35}},{"start":{"line":362,"column":39},"end":{"line":362,"column":52}}],"line":362},"102":{"loc":{"start":{"line":372,"column":4},"end":{"line":374,"column":5}},"type":"if","locations":[{"start":{"line":372,"column":4},"end":{"line":374,"column":5}},{"start":{"line":372,"column":4},"end":{"line":374,"column":5}}],"line":372},"103":{"loc":{"start":{"line":373,"column":81},"end":{"line":373,"column":130}},"type":"cond-expr","locations":[{"start":{"line":373,"column":112},"end":{"line":373,"column":114}},{"start":{"line":373,"column":117},"end":{"line":373,"column":130}}],"line":373},"104":{"loc":{"start":{"line":373,"column":81},"end":{"line":373,"column":109}},"type":"binary-expr","locations":[{"start":{"line":373,"column":81},"end":{"line":373,"column":92}},{"start":{"line":373,"column":96},"end":{"line":373,"column":109}}],"line":373},"105":{"loc":{"start":{"line":375,"column":4},"end":{"line":377,"column":5}},"type":"if","locations":[{"start":{"line":375,"column":4},"end":{"line":377,"column":5}},{"start":{"line":375,"column":4},"end":{"line":377,"column":5}}],"line":375},"106":{"loc":{"start":{"line":389,"column":4},"end":{"line":397,"column":5}},"type":"if","locations":[{"start":{"line":389,"column":4},"end":{"line":397,"column":5}},{"start":{"line":389,"column":4},"end":{"line":397,"column":5}}],"line":389},"107":{"loc":{"start":{"line":391,"column":8},"end":{"line":396,"column":9}},"type":"if","locations":[{"start":{"line":391,"column":8},"end":{"line":396,"column":9}},{"start":{"line":391,"column":8},"end":{"line":396,"column":9}}],"line":391}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":7,"22":1,"23":32,"24":19,"25":13,"26":32,"27":13,"28":0,"29":32,"30":14,"31":14,"32":0,"33":18,"34":32,"35":19,"36":32,"37":32,"38":192,"39":78,"40":0,"41":114,"42":0,"43":32,"44":19,"45":114,"46":114,"47":32,"48":0,"49":32,"50":19,"51":32,"52":32,"53":19,"54":13,"55":0,"56":32,"57":13,"58":19,"59":0,"60":32,"61":18,"62":36,"63":32,"64":114,"65":32,"66":32,"67":32,"68":0,"69":32,"70":13,"71":19,"72":32,"73":0,"74":0,"75":32,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":32,"87":0,"88":32,"89":13,"90":32,"91":19,"92":32,"93":32,"94":32,"95":32,"96":32,"97":32,"98":32,"99":32,"100":32,"101":32,"102":32,"103":32,"104":32,"105":1,"106":13,"107":13,"108":13,"109":19,"110":19,"111":76,"112":63,"113":13,"114":13,"115":13,"116":1,"117":5,"118":0,"119":5,"120":5,"121":5,"122":5,"123":0,"124":5,"125":5,"126":0,"127":0,"128":0,"129":5,"130":5,"131":5,"132":5,"133":0,"134":5,"135":0,"136":0,"137":5,"138":5,"139":5,"140":0,"141":0,"142":0,"143":0,"144":9,"145":5,"146":5,"147":0,"148":5,"149":0,"150":0,"151":0,"152":5,"153":1,"154":1,"155":7,"156":7,"157":7,"158":7,"159":7,"160":7,"161":7,"162":0,"163":7,"164":21,"165":0,"166":7,"167":0,"168":7,"169":0,"170":7,"171":0,"172":0,"173":7,"174":0,"175":0,"176":0,"177":7,"178":0,"179":0,"180":0,"181":7,"182":7,"183":7,"184":7,"185":7,"186":0,"187":7,"188":0,"189":7,"190":7,"191":7,"192":0,"193":7,"194":7,"195":0,"196":0,"197":7,"198":7,"199":7,"200":7,"201":4,"202":4,"203":7,"204":0,"205":7,"206":0,"207":7,"208":7,"209":0,"210":0,"211":0,"212":0,"213":7,"214":7},"f":{"0":7,"1":32,"2":0,"3":36,"4":114,"5":0,"6":13,"7":5,"8":0,"9":9,"10":7,"11":21},"b":{"0":[19,13],"1":[0,13],"2":[14,18],"3":[32,32],"4":[0,14],"5":[14,3],"6":[5,13],"7":[19,13],"8":[32,0],"9":[78,114],"10":[0,78],"11":[19,13],"12":[114,0],"13":[114,114],"14":[0,32],"15":[19,13],"16":[19,13],"17":[13,19],"18":[0,19],"19":[18,14],"20":[0,32],"21":[32,0],"22":[13,19],"23":[13,6],"24":[19,19],"25":[6,13],"26":[19,19],"27":[0,32],"28":[0,32],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,32],"35":[13,19],"36":[32,19],"37":[19,6],"38":[19,13],"39":[19,13],"40":[32,32],"41":[19,13],"42":[32,32],"43":[19,13],"44":[32,32],"45":[19,13],"46":[32,32],"47":[63,13],"48":[0,5],"49":[5,0],"50":[5,0],"51":[5,5],"52":[0,5],"53":[0,5],"54":[5,5],"55":[5,0],"56":[5,5],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[5,0],"63":[0,5],"64":[5,5],"65":[0,0],"66":[0,0],"67":[0,5],"68":[0,0],"69":[0,7],"70":[7,7,7,0],"71":[0,7],"72":[0,7],"73":[7,0,0,0,0],"74":[0,0],"75":[0,7],"76":[7,0],"77":[0,7],"78":[0,0],"79":[0,0,0],"80":[0,7],"81":[0,0],"82":[0,7],"83":[0,0],"84":[7,0],"85":[7,0],"86":[7,7],"87":[0,7],"88":[7,7,7,0],"89":[0,7],"90":[7,7,0],"91":[7,0],"92":[7,7],"93":[7,0],"94":[0,7],"95":[7,0],"96":[0,7],"97":[0,7],"98":[7,0],"99":[4,3],"100":[3,4],"101":[7,4],"102":[0,7],"103":[0,0],"104":[0,0],"105":[0,7],"106":[0,7],"107":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/normalize-arguments.ts","sources":["/Users/ldlafountaine/code/got/source/normalize-arguments.ts"],"names":[],"mappings":"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","sourcesContent":["import {URL, URLSearchParams} from 'url';\nimport {promisify, deprecate} from 'util';\nimport CacheableRequest = require('cacheable-request');\nimport http = require('http');\nimport https = require('https');\nimport Keyv = require('keyv');\nimport lowercaseKeys = require('lowercase-keys');\nimport stream = require('stream');\nimport toReadableStream = require('to-readable-stream');\nimport is from '@sindresorhus/is';\nimport CacheableLookup from 'cacheable-lookup';\nimport {Merge} from 'type-fest';\nimport {UnsupportedProtocolError} from './errors';\nimport knownHookEvents from './known-hook-events';\nimport dynamicRequire from './utils/dynamic-require';\nimport getBodySize from './utils/get-body-size';\nimport isFormData from './utils/is-form-data';\nimport merge from './utils/merge';\nimport optionsToUrl from './utils/options-to-url';\nimport supportsBrotli from './utils/supports-brotli';\nimport {\n\tAgentByProtocol,\n\tDefaults,\n\tMethod,\n\tNormalizedOptions,\n\tOptions,\n\tRequestFunction,\n\tURLOrOptions,\n\trequestSymbol\n} from './types';\n\n// `preNormalizeArguments` normalizes these options: `headers`, `prefixUrl`, `hooks`, `timeout`, `retry` and `method`.\n// `normalizeArguments` is *only* called on `got(...)`. It normalizes the URL and performs `mergeOptions(...)`.\n// `normalizeRequestArguments` converts Got options into HTTP options.\n\ntype NonEnumerableProperty = 'context' | 'body' | 'json' | 'form';\nconst nonEnumerableProperties: NonEnumerableProperty[] = [\n\t'context',\n\t'body',\n\t'json',\n\t'form'\n];\n\nconst isAgentByProtocol = (agent: Options['agent']): agent is AgentByProtocol => is.object(agent);\n\n// TODO: `preNormalizeArguments` should merge `options` & `defaults`\nexport const preNormalizeArguments = (options: Options, defaults?: NormalizedOptions): NormalizedOptions => {\n\t// `options.headers`\n\tif (is.undefined(options.headers)) {\n\t\toptions.headers = {};\n\t} else {\n\t\toptions.headers = lowercaseKeys(options.headers);\n\t}\n\n\tfor (const [key, value] of Object.entries(options.headers)) {\n\t\tif (is.null_(value)) {\n\t\t\tthrow new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n\t\t}\n\t}\n\n\t// `options.prefixUrl`\n\tif (is.urlInstance(options.prefixUrl) || is.string(options.prefixUrl)) {\n\t\toptions.prefixUrl = options.prefixUrl.toString();\n\n\t\tif (options.prefixUrl.length !== 0 && !options.prefixUrl.endsWith('/')) {\n\t\t\toptions.prefixUrl += '/';\n\t\t}\n\t} else {\n\t\toptions.prefixUrl = defaults ? defaults.prefixUrl : '';\n\t}\n\n\t// `options.hooks`\n\tif (is.undefined(options.hooks)) {\n\t\toptions.hooks = {};\n\t}\n\n\tif (is.object(options.hooks)) {\n\t\tfor (const event of knownHookEvents) {\n\t\t\tif (Reflect.has(options.hooks, event)) {\n\t\t\t\tif (!is.array(options.hooks[event])) {\n\t\t\t\t\tthrow new TypeError(`Parameter \\`${event}\\` must be an Array, not ${is(options.hooks[event])}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toptions.hooks[event] = [];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new TypeError(`Parameter \\`hooks\\` must be an Object, not ${is(options.hooks)}`);\n\t}\n\n\tif (defaults) {\n\t\tfor (const event of knownHookEvents) {\n\t\t\tif (!(Reflect.has(options.hooks, event) && is.undefined(options.hooks[event]))) {\n\t\t\t\t// @ts-ignore Union type array is not assignable to union array type\n\t\t\t\toptions.hooks[event] = [\n\t\t\t\t\t...defaults.hooks[event],\n\t\t\t\t\t...options.hooks[event]!\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t}\n\n\t// `options.timeout`\n\tif (is.number(options.timeout)) {\n\t\toptions.timeout = {request: options.timeout};\n\t} else if (!is.object(options.timeout)) {\n\t\toptions.timeout = {};\n\t}\n\n\t// `options.retry`\n\tconst {retry} = options;\n\n\tif (defaults) {\n\t\toptions.retry = {...defaults.retry};\n\t} else {\n\t\toptions.retry = {\n\t\t\tcalculateDelay: retryObject => retryObject.computedValue,\n\t\t\tlimit: 0,\n\t\t\tmethods: [],\n\t\t\tstatusCodes: [],\n\t\t\terrorCodes: [],\n\t\t\tmaxRetryAfter: undefined\n\t\t};\n\t}\n\n\tif (is.object(retry)) {\n\t\toptions.retry = {\n\t\t\t...options.retry,\n\t\t\t...retry\n\t\t};\n\t} else if (is.number(retry)) {\n\t\toptions.retry.limit = retry;\n\t}\n\n\tif (options.retry.maxRetryAfter === undefined) {\n\t\toptions.retry.maxRetryAfter = Math.min(\n\t\t\t...[options.timeout.request, options.timeout.connect].filter((n): n is number => !is.nullOrUndefined(n))\n\t\t);\n\t}\n\n\toptions.retry.methods = [...new Set(options.retry.methods!.map(method => method.toUpperCase() as Method))];\n\toptions.retry.statusCodes = [...new Set(options.retry.statusCodes)];\n\toptions.retry.errorCodes = [...new Set(options.retry.errorCodes)];\n\n\t// `options.dnsCache`\n\tif (options.dnsCache && !(options.dnsCache instanceof CacheableLookup)) {\n\t\toptions.dnsCache = new CacheableLookup({cacheAdapter: options.dnsCache as Keyv});\n\t}\n\n\t// `options.method`\n\tif (is.string(options.method)) {\n\t\toptions.method = options.method.toUpperCase() as Method;\n\t} else {\n\t\toptions.method = defaults?.method ?? 'GET';\n\t}\n\n\t// Better memory management, so we don't have to generate a new object every time\n\tif (options.cache) {\n\t\t(options as NormalizedOptions).cacheableRequest = new CacheableRequest(\n\t\t\t// @ts-ignore Cannot properly type a function with multiple definitions yet\n\t\t\t(requestOptions, handler) => requestOptions[requestSymbol](requestOptions, handler),\n\t\t\toptions.cache\n\t\t);\n\t}\n\n\t// `options.cookieJar`\n\tif (is.object(options.cookieJar)) {\n\t\tlet {setCookie, getCookieString} = options.cookieJar;\n\n\t\t// Horrible `tough-cookie` check\n\t\tif (setCookie.length === 4 && getCookieString.length === 0) {\n\t\t\tif (!Reflect.has(setCookie, promisify.custom)) {\n\t\t\t\t// @ts-ignore TS is dumb.\n\t\t\t\tsetCookie = promisify(setCookie.bind(options.cookieJar));\n\t\t\t\tgetCookieString = promisify(getCookieString.bind(options.cookieJar));\n\t\t\t}\n\t\t} else if (setCookie.length !== 2) {\n\t\t\tthrow new TypeError('`options.cookieJar.setCookie` needs to be an async function with 2 arguments');\n\t\t} else if (getCookieString.length !== 1) {\n\t\t\tthrow new TypeError('`options.cookieJar.getCookieString` needs to be an async function with 1 argument');\n\t\t}\n\n\t\toptions.cookieJar = {setCookie, getCookieString};\n\t}\n\n\t// `options.encoding`\n\tif (is.null_(options.encoding)) {\n\t\tthrow new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n\t}\n\n\t// `options.maxRedirects`\n\tif (!Reflect.has(options, 'maxRedirects') && !(defaults && Reflect.has(defaults, 'maxRedirects'))) {\n\t\toptions.maxRedirects = 0;\n\t}\n\n\t// Merge defaults\n\tif (defaults) {\n\t\toptions = merge({}, defaults, options);\n\t}\n\n\t// Other values\n\toptions.decompress = Boolean(options.decompress);\n\toptions.isStream = Boolean(options.isStream);\n\toptions.throwHttpErrors = Boolean(options.throwHttpErrors);\n\toptions.ignoreInvalidCookies = Boolean(options.ignoreInvalidCookies);\n\toptions.cache = options.cache ?? false;\n\toptions.responseType = options.responseType ?? 'text';\n\toptions.resolveBodyOnly = Boolean(options.resolveBodyOnly);\n\toptions.followRedirect = Boolean(options.followRedirect);\n\toptions.dnsCache = options.dnsCache ?? false;\n\toptions.useElectronNet = Boolean(options.useElectronNet);\n\toptions.methodRewriting = Boolean(options.methodRewriting);\n\toptions.context = options.context ?? {};\n\n\treturn options as NormalizedOptions;\n};\n\nexport const mergeOptions = (...sources: Options[]): NormalizedOptions => {\n\tlet mergedOptions = preNormalizeArguments({});\n\n\t// Non enumerable properties shall not be merged\n\tconst properties: Partial<{[Key in NonEnumerableProperty]: any}> = {};\n\n\tfor (const source of sources) {\n\t\tmergedOptions = preNormalizeArguments(merge({}, source), mergedOptions);\n\n\t\tfor (const name of nonEnumerableProperties) {\n\t\t\tif (!Reflect.has(source, name)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tproperties[name] = {\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: source[name]\n\t\t\t};\n\t\t}\n\t}\n\n\tObject.defineProperties(mergedOptions, properties);\n\n\treturn mergedOptions;\n};\n\nexport const normalizeArguments = (url: URLOrOptions, options?: Options, defaults?: Defaults): NormalizedOptions => {\n\t// Merge options\n\tif (typeof url === 'undefined') {\n\t\tthrow new TypeError('Missing `url` argument');\n\t}\n\n\tif (typeof options === 'undefined') {\n\t\toptions = {};\n\t}\n\n\tif (is.urlInstance(url) || is.string(url)) {\n\t\tif (Reflect.has(options, 'url')) {\n\t\t\tthrow new TypeError('The `url` option cannot be used if the input is a valid URL.');\n\t\t}\n\n\t\t// @ts-ignore URL is not URL\n\t\toptions.url = url;\n\n\t\toptions = mergeOptions(defaults?.options ?? {}, options);\n\t} else {\n\t\tif (Reflect.has(url, 'resolve')) {\n\t\t\tthrow new Error('The legacy `url.Url` is deprecated. Use `URL` instead.');\n\t\t}\n\n\t\toptions = mergeOptions(defaults?.options ?? {}, url, options);\n\t}\n\n\t// Normalize URL\n\t// TODO: drop `optionsToUrl` in Got 12\n\tif (is.string(options.url)) {\n\t\toptions.url = (options.prefixUrl as string) + options.url;\n\t\toptions.url = options.url.replace(/^unix:/, 'http://$&');\n\n\t\tif (options.searchParams || options.search) {\n\t\t\toptions.url = options.url.split('?')[0];\n\t\t}\n\n\t\t// @ts-ignore URL is not URL\n\t\toptions.url = optionsToUrl({\n\t\t\torigin: options.url,\n\t\t\t...options\n\t\t});\n\t} else if (!is.urlInstance(options.url)) {\n\t\t// @ts-ignore URL is not URL\n\t\toptions.url = optionsToUrl({origin: options.prefixUrl as string, ...options});\n\t}\n\n\tconst normalizedOptions = options as NormalizedOptions;\n\n\t// Make it possible to change `options.prefixUrl`\n\tlet prefixUrl = options.prefixUrl as string;\n\tObject.defineProperty(normalizedOptions, 'prefixUrl', {\n\t\tset: (value: string) => {\n\t\t\tif (!normalizedOptions.url.href.startsWith(value)) {\n\t\t\t\tthrow new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${normalizedOptions.url.href}`);\n\t\t\t}\n\n\t\t\tnormalizedOptions.url = new URL(value + normalizedOptions.url.href.slice(prefixUrl.length));\n\t\t\tprefixUrl = value;\n\t\t},\n\t\tget: () => prefixUrl\n\t});\n\n\t// Make it possible to remove default headers\n\tfor (const [key, value] of Object.entries(normalizedOptions.headers)) {\n\t\tif (is.undefined(value)) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n\t\t\tdelete normalizedOptions.headers[key];\n\t\t}\n\t}\n\n\tfor (const hook of normalizedOptions.hooks.init) {\n\t\tconst result = hook(normalizedOptions);\n\n\t\tif (is.promise(result)) {\n\t\t\tthrow new TypeError('The `init` hook must be a synchronous function');\n\t\t}\n\t}\n\n\treturn normalizedOptions;\n};\n\nconst withoutBody: ReadonlySet<string> = new Set(['GET', 'HEAD']);\n\nexport type NormalizedRequestArguments = Merge<https.RequestOptions, {\n\tbody?: stream.Readable;\n\t[requestSymbol]: RequestFunction;\n\turl: Pick<NormalizedOptions, 'url'>;\n}>;\n\nexport const normalizeRequestArguments = async (options: NormalizedOptions): Promise<NormalizedRequestArguments> => {\n\toptions = mergeOptions(options);\n\n\t// Serialize body\n\tconst {headers} = options;\n\tconst noContentType = is.undefined(headers['content-type']);\n\n\t{\n\t\t// TODO: these checks should be moved to `preNormalizeArguments`\n\t\tconst isForm = !is.undefined(options.form);\n\t\tconst isJSON = !is.undefined(options.json);\n\t\tconst isBody = !is.undefined(options.body);\n\t\tif ((isBody || isForm || isJSON) && withoutBody.has(options.method)) {\n\t\t\tthrow new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n\t\t}\n\n\t\tif ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {\n\t\t\tthrow new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n\t\t}\n\n\t\tif (\n\t\t\tisBody &&\n\t\t\t!is.nodeStream(options.body) &&\n\t\t\t!is.string(options.body) &&\n\t\t\t!is.buffer(options.body) &&\n\t\t\t!(is.object(options.body) && isFormData(options.body))\n\t\t) {\n\t\t\tthrow new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n\t\t}\n\n\t\tif (isForm && !is.object(options.form)) {\n\t\t\tthrow new TypeError('The `form` option must be an Object');\n\t\t}\n\t}\n\n\tif (options.body) {\n\t\t// Special case for https://github.com/form-data/form-data\n\t\tif (is.object(options.body) && isFormData(options.body) && noContentType) {\n\t\t\theaders['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n\t\t}\n\t} else if (options.form) {\n\t\tif (noContentType) {\n\t\t\theaders['content-type'] = 'application/x-www-form-urlencoded';\n\t\t}\n\n\t\toptions.body = (new URLSearchParams(options.form as Record<string, string>)).toString();\n\t} else if (options.json) {\n\t\tif (noContentType) {\n\t\t\theaders['content-type'] = 'application/json';\n\t\t}\n\n\t\toptions.body = JSON.stringify(options.json);\n\t}\n\n\tconst uploadBodySize = await getBodySize(options);\n\n\tif (!is.nodeStream(options.body)) {\n\t\toptions.body = toReadableStream(options.body!);\n\t}\n\n\t// See https://tools.ietf.org/html/rfc7230#section-3.3.2\n\t// A user agent SHOULD send a Content-Length in a request message when\n\t// no Transfer-Encoding is sent and the request method defines a meaning\n\t// for an enclosed payload body.  For example, a Content-Length header\n\t// field is normally sent in a POST request even when the value is 0\n\t// (indicating an empty payload body).  A user agent SHOULD NOT send a\n\t// Content-Length header field when the request message does not contain\n\t// a payload body and the method semantics do not anticipate such a\n\t// body.\n\tif (is.undefined(headers['content-length']) && is.undefined(headers['transfer-encoding'])) {\n\t\tif (\n\t\t\t(options.method === 'POST' || options.method === 'PUT' || options.method === 'PATCH') &&\n\t\t\t!is.undefined(uploadBodySize)\n\t\t) {\n\t\t\t// @ts-ignore We assign if it is undefined, so this IS correct\n\t\t\theaders['content-length'] = String(uploadBodySize);\n\t\t}\n\t}\n\n\tif (!options.isStream && options.responseType === 'json' && is.undefined(headers.accept)) {\n\t\theaders.accept = 'application/json';\n\t}\n\n\tif (options.decompress && is.undefined(headers['accept-encoding'])) {\n\t\theaders['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';\n\t}\n\n\t// Validate URL\n\tif (options.url.protocol !== 'http:' && options.url.protocol !== 'https:') {\n\t\tthrow new UnsupportedProtocolError(options);\n\t}\n\n\tdecodeURI(options.url.toString());\n\n\t// Normalize request function\n\tif (is.function_(options.request)) {\n\t\toptions[requestSymbol] = options.request;\n\t\tdelete options.request;\n\t} else {\n\t\toptions[requestSymbol] = options.url.protocol === 'https:' ? https.request : http.request;\n\t}\n\n\t// UNIX sockets\n\tif (options.url.hostname === 'unix') {\n\t\tconst matches = /(?<socketPath>.+?):(?<path>.+)/.exec(options.url.pathname);\n\n\t\tif (matches?.groups) {\n\t\t\tconst {socketPath, path} = matches.groups;\n\n\t\t\toptions = {\n\t\t\t\t...options,\n\t\t\t\tsocketPath,\n\t\t\t\tpath,\n\t\t\t\thost: ''\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isAgentByProtocol(options.agent)) {\n\t\toptions.agent = options.agent[options.url.protocol.slice(0, -1) as keyof AgentByProtocol] ?? options.agent;\n\t}\n\n\tif (options.dnsCache) {\n\t\toptions.lookup = options.dnsCache.lookup;\n\t}\n\n\t/* istanbul ignore next: electron.net is broken */\n\t// No point in typing process.versions correctly, as\n\t// `process.version.electron` is used only once, right here.\n\tif (options.useElectronNet && (process.versions as any).electron) {\n\t\tconst electron = dynamicRequire(module, 'electron') as any; // Trick webpack\n\t\toptions.request = deprecate(\n\t\t\telectron.net.request ?? electron.remote.net.request,\n\t\t\t'Electron support has been deprecated and will be removed in Got 11.\\n' +\n\t\t\t'See https://github.com/sindresorhus/got/issues/899 for further information.',\n\t\t\t'GOT_ELECTRON'\n\t\t);\n\t}\n\n\t// Got's `timeout` is an object, http's `timeout` is a number, so they're not compatible.\n\tdelete options.timeout;\n\n\t// Set cookies\n\tif (options.cookieJar) {\n\t\tconst cookieString = await options.cookieJar.getCookieString(options.url.toString());\n\n\t\tif (is.nonEmptyString(cookieString)) {\n\t\t\toptions.headers.cookie = cookieString;\n\t\t} else {\n\t\t\tdelete options.headers.cookie;\n\t\t}\n\t}\n\n\t// `http-cache-semantics` checks this\n\tdelete options.url;\n\n\treturn options as unknown as NormalizedRequestArguments;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0653c3bfc8d76ca267d5fce0f48a86eac7976e3","contentHash":"9df8f8339689b7078afedeabbf79edcd92c11def79b4cad23bafc7b63f3574a7"},"/Users/ldlafountaine/code/got/source/known-hook-events.ts":{"path":"/Users/ldlafountaine/code/got/source/known-hook-events.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":10,"column":1}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/known-hook-events.ts","sources":["/Users/ldlafountaine/code/got/source/known-hook-events.ts"],"names":[],"mappings":";;AA2GA,MAAM,eAAe,GAA6B;IACjD,aAAa;IACb,MAAM;IACN,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,eAAe;CACf,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import {CancelableRequest, GeneralError, NormalizedOptions, Options, Response} from './types';\n\n/**\nCalled with plain request options, right before their normalization. This is especially useful in conjunction with `got.extend()` when the input needs custom handling.\n\n**Note:** This hook must be synchronous.\n\n@see [Request migration guide](https://github.com/sindresorhus/got/blob/master/migration-guides.md#breaking-changes) for an example.\n*/\nexport type InitHook = (options: NormalizedOptions) => void;\n\n/**\nCalled with normalized [request options](https://github.com/sindresorhus/got#options). Got will make no further changes to the request before it is sent (except the body serialization). This is especially useful in conjunction with [`got.extend()`](https://github.com/sindresorhus/got#instances) when you want to create an API client that, for example, uses HMAC-signing.\n\n@see [AWS section](https://github.com/sindresorhus/got#aws) for an example.\n*/\nexport type BeforeRequestHook = (options: NormalizedOptions) => void | Promise<void>;\n\n/**\nCalled with normalized [request options](https://github.com/sindresorhus/got#options). Got will make no further changes to the request. This is especially useful when you want to avoid dead sites.\n*/\nexport type BeforeRedirectHook = (options: NormalizedOptions, response: Response) => void | Promise<void>;\n\n/**\nCalled with normalized [request options](https://github.com/sindresorhus/got#options), the error and the retry count. Got will make no further changes to the request. This is especially useful when some extra work is required before the next try.\n*/\nexport type BeforeRetryHook = (options: NormalizedOptions, error?: GeneralError, retryCount?: number) => void | Promise<void>;\n\n/**\nCalled with an `Error` instance. The error is passed to the hook right before it's thrown. This is especially useful when you want to have more detailed errors.\n\n**Note:** Errors thrown while normalizing input options are thrown directly and not part of this hook.\n*/\nexport type BeforeErrorHook = <ErrorLike extends GeneralError>(error: ErrorLike) => GeneralError | Promise<GeneralError>;\n\n/**\nCalled with [response object](https://github.com/sindresorhus/got#response) and a retry function.\n\nEach function should return the response. This is especially useful when you want to refresh an access token.\n*/\nexport type AfterResponseHook = (response: Response, retryWithMergedOptions: (options: Options) => CancelableRequest<Response>) => Response | CancelableRequest<Response> | Promise<Response | CancelableRequest<Response>>;\n\nexport type HookType =\n\t| BeforeErrorHook\n\t| InitHook\n\t| BeforeRequestHook\n\t| BeforeRedirectHook\n\t| BeforeRetryHook\n\t| AfterResponseHook;\n\n/**\nHooks allow modifications during the request lifecycle. Hook functions may be async and are run serially.\n*/\nexport interface Hooks {\n\t/**\n\tCalled with plain request options, right before their normalization. This is especially useful in conjunction with `got.extend()` when the input needs custom handling.\n\n\t**Note:** This hook must be synchronous.\n\n\t@see [Request migration guide](https://github.com/sindresorhus/got/blob/master/migration-guides.md#breaking-changes) for an example.\n\t@default []\n\t*/\n\tinit?: InitHook[];\n\n\t/**\n\tCalled with normalized [request options](https://github.com/sindresorhus/got#options). Got will make no further changes to the request before it is sent (except the body serialization). This is especially useful in conjunction with [`got.extend()`](https://github.com/sindresorhus/got#instances) when you want to create an API client that, for example, uses HMAC-signing.\n\n\t@see [AWS section](https://github.com/sindresorhus/got#aws) for an example.\n\t@default []\n\t*/\n\tbeforeRequest?: BeforeRequestHook[];\n\n\t/**\n\tCalled with normalized [request options](https://github.com/sindresorhus/got#options). Got will make no further changes to the request. This is especially useful when you want to avoid dead sites.\n\n\t@default []\n\t*/\n\tbeforeRedirect?: BeforeRedirectHook[];\n\n\t/**\n\tCalled with normalized [request options](https://github.com/sindresorhus/got#options), the error and the retry count. Got will make no further changes to the request. This is especially useful when some extra work is required before the next try.\n\n\t@default []\n\t*/\n\tbeforeRetry?: BeforeRetryHook[];\n\n\t/**\n\tCalled with an `Error` instance. The error is passed to the hook right before it's thrown. This is especially useful when you want to have more detailed errors.\n\n\t**Note:** Errors thrown while normalizing input options are thrown directly and not part of this hook.\n\n\t@default []\n\t*/\n\tbeforeError?: BeforeErrorHook[];\n\n\t/**\n\tCalled with [response object](https://github.com/sindresorhus/got#response) and a retry function.\n\n\tEach function should return the response. This is especially useful when you want to refresh an access token.\n\n\t@default []\n\t*/\n\tafterResponse?: AfterResponseHook[];\n}\n\nexport type HookEvent = keyof Hooks;\n\nconst knownHookEvents: ReadonlyArray<HookEvent> = [\n\t'beforeError',\n\t'init',\n\t'beforeRequest',\n\t'beforeRedirect',\n\t'beforeRetry',\n\t'afterResponse'\n];\n\nexport default knownHookEvents;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"26c132a34d82b2594eb791b36f17080b811a2687","contentHash":"93a4430eb403ca1e96efe5548dd3f823aee6f926549ab3e57514f2053da2af71"},"/Users/ldlafountaine/code/got/source/utils/get-body-size.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/get-body-size.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":18},"end":{"line":7,"column":45}},"6":{"start":{"line":8,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":9,"column":30},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":49}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":17}},"12":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"14":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"16":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":61}},"18":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"19":{"start":{"line":26,"column":25},"end":{"line":26,"column":51}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":20}},"21":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":18},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":37},"end":{"line":30,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{"line":10,"column":4},"end":{"line":12,"column":5}}],"line":10},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":46}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":15}},{"start":{"line":10,"column":19},"end":{"line":10,"column":46}}],"line":10},"2":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"3":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},{"start":{"line":16,"column":4},"end":{"line":18,"column":5}}],"line":16},"4":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"5":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"6":{"loc":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},{"start":{"line":25,"column":4},"end":{"line":28,"column":5}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":7,"8":7,"9":0,"10":7,"11":7,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":7},"b":{"0":[0,7],"1":[7,7],"2":[7,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/get-body-size.ts","sources":["/Users/ldlafountaine/code/got/source/utils/get-body-size.ts"],"names":[],"mappings":";;AAAA,2BAAoC;AACpC,+BAA+B;AAE/B,yCAAkC;AAClC,iDAAwC;AAOxC,MAAM,SAAS,GAAG,gBAAS,CAAC,SAAI,CAAC,CAAC;AAElC,kBAAe,KAAK,EAAE,OAAgB,EAA+B,EAAE;IACtE,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,OAAO,CAAC;IAEhC,IAAI,OAAO,IAAI,gBAAgB,IAAI,OAAO,EAAE;QAC3C,OAAO,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;KACzC;IAED,IAAI,CAAC,IAAI,EAAE;QACV,OAAO,CAAC,CAAC;KACT;IAED,IAAI,YAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC/B;IAED,IAAI,YAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;IAED,IAAI,sBAAU,CAAC,IAAI,CAAC,EAAE;QACrB,OAAO,gBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;KAC9C;IAED,IAAI,IAAI,YAAY,eAAU,EAAE;QAC/B,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;KACZ;IAED,OAAO,SAAS,CAAC;AAClB,CAAC,CAAC","sourcesContent":["import {ReadStream, stat} from 'fs';\nimport {promisify} from 'util';\nimport {ClientRequestArgs} from 'http';\nimport is from '@sindresorhus/is';\nimport isFormData from './is-form-data';\n\ninterface Options {\n\tbody?: unknown;\n\theaders: ClientRequestArgs['headers'];\n}\n\nconst statAsync = promisify(stat);\n\nexport default async (options: Options): Promise<number | undefined> => {\n\tconst {body, headers} = options;\n\n\tif (headers && 'content-length' in headers) {\n\t\treturn Number(headers['content-length']);\n\t}\n\n\tif (!body) {\n\t\treturn 0;\n\t}\n\n\tif (is.string(body)) {\n\t\treturn Buffer.byteLength(body);\n\t}\n\n\tif (is.buffer(body)) {\n\t\treturn body.length;\n\t}\n\n\tif (isFormData(body)) {\n\t\treturn promisify(body.getLength.bind(body))();\n\t}\n\n\tif (body instanceof ReadStream) {\n\t\tconst {size} = await statAsync(body.path);\n\t\treturn size;\n\t}\n\n\treturn undefined;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cb5c3f2dc56032c9c3edcf9770dd6bace15e3df1","contentHash":"798fd1e5b0bdcd0e7d6aef60a620bea5ba086d57daaeebd1430fe78532070ab0"},"/Users/ldlafountaine/code/got/source/utils/is-form-data.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/is-form-data.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":102}},"3":{"start":{"line":4,"column":28},"end":{"line":4,"column":101}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":28},"end":{"line":4,"column":101}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":28},"end":{"line":4,"column":101}},"type":"binary-expr","locations":[{"start":{"line":4,"column":28},"end":{"line":4,"column":57}},{"start":{"line":4,"column":61},"end":{"line":4,"column":101}}],"line":4}},"s":{"0":1,"1":1,"2":1,"3":0},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/is-form-data.ts","sources":["/Users/ldlafountaine/code/got/source/utils/is-form-data.ts"],"names":[],"mappings":";;AACA,yCAAkC;AAElC,kBAAe,CAAC,IAAa,EAAoB,EAAE,CAAC,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,YAAE,CAAC,SAAS,CAAE,IAAiB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import FormData = require('form-data');\nimport is from '@sindresorhus/is';\n\nexport default (body: unknown): body is FormData => is.nodeStream(body) && is.function_((body as FormData).getBoundary);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"90b3d84e36d8ad7848cd38a9b05409754746570f","contentHash":"400cb0e886a13da09f9d5a2740fa1e0f9e8510bd97f800d93f5ecc8d27b2f976"},"/Users/ldlafountaine/code/got/source/utils/merge.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/merge.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":4},"end":{"line":32,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":31,"column":9}},"5":{"start":{"line":8,"column":32},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":12},"end":{"line":30,"column":13}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":70}},"8":{"start":{"line":13,"column":17},"end":{"line":30,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":21,"column":17}},"10":{"start":{"line":16,"column":20},"end":{"line":16,"column":70}},"11":{"start":{"line":20,"column":20},"end":{"line":20,"column":57}},"12":{"start":{"line":23,"column":17},"end":{"line":30,"column":13}},"13":{"start":{"line":25,"column":16},"end":{"line":25,"column":50}},"14":{"start":{"line":29,"column":16},"end":{"line":29,"column":42}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":18}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"fnMap":{"0":{"name":"merge","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":14}},"loc":{"start":{"line":5,"column":35},"end":{"line":34,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":9,"column":12},"end":{"line":30,"column":13}},{"start":{"line":9,"column":12},"end":{"line":30,"column":13}}],"line":9},"1":{"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":89}},"type":"binary-expr","locations":[{"start":{"line":9,"column":16},"end":{"line":9,"column":53}},{"start":{"line":9,"column":57},"end":{"line":9,"column":89}}],"line":9},"2":{"loc":{"start":{"line":13,"column":17},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":17},"end":{"line":30,"column":13}},{"start":{"line":13,"column":17},"end":{"line":30,"column":13}}],"line":13},"3":{"loc":{"start":{"line":14,"column":16},"end":{"line":21,"column":17}},"type":"if","locations":[{"start":{"line":14,"column":16},"end":{"line":21,"column":17}},{"start":{"line":14,"column":16},"end":{"line":21,"column":17}}],"line":14},"4":{"loc":{"start":{"line":23,"column":17},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":17},"end":{"line":30,"column":13}},{"start":{"line":23,"column":17},"end":{"line":30,"column":13}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":271,"4":371,"5":1778,"6":1778,"7":0,"8":1778,"9":233,"10":81,"11":152,"12":1545,"13":630,"14":915,"15":271,"16":1},"f":{"0":271},"b":{"0":[0,1778],"1":[1778,0],"2":[233,1545],"3":[81,152],"4":[630,915]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/merge.ts","sources":["/Users/ldlafountaine/code/got/source/utils/merge.ts"],"names":[],"mappings":";;AAAA,6BAAwB;AACxB,yCAAkC;AAGlC,SAAwB,KAAK,CAA2E,MAAc,EAAE,GAAG,OAAiB;IAC3I,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC7B,KAAK,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACxD,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAEhC,IAAI,YAAE,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,YAAE,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBAC1D,6DAA6D;gBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,SAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;aAChD;iBAAM,IAAI,YAAE,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBACvC,IAAI,YAAE,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;oBAChC,6DAA6D;oBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;iBAClD;qBAAM;oBACN,6DAA6D;oBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;iBACrC;aACD;iBAAM,IAAI,YAAE,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;gBACjC,6DAA6D;gBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;aAClC;iBAAM;gBACN,6DAA6D;gBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;aAC1B;SACD;KACD;IAED,OAAO,MAA+B,CAAC;AACxC,CAAC;AA3BD,wBA2BC","sourcesContent":["import {URL} from 'url';\nimport is from '@sindresorhus/is';\nimport {Merge} from 'type-fest';\n\nexport default function merge<Target extends {[key: string]: any}, Source extends {[key: string]: any}>(target: Target, ...sources: Source[]): Merge<Source, Target> {\n\tfor (const source of sources) {\n\t\tfor (const [key, sourceValue] of Object.entries(source)) {\n\t\t\tconst targetValue = target[key];\n\n\t\t\tif (is.urlInstance(targetValue) && is.string(sourceValue)) {\n\t\t\t\t// @ts-ignore TS doesn't recognise Target accepts string keys\n\t\t\t\ttarget[key] = new URL(sourceValue, targetValue);\n\t\t\t} else if (is.plainObject(sourceValue)) {\n\t\t\t\tif (is.plainObject(targetValue)) {\n\t\t\t\t\t// @ts-ignore TS doesn't recognise Target accepts string keys\n\t\t\t\t\ttarget[key] = merge({}, targetValue, sourceValue);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore TS doesn't recognise Target accepts string keys\n\t\t\t\t\ttarget[key] = merge({}, sourceValue);\n\t\t\t\t}\n\t\t\t} else if (is.array(sourceValue)) {\n\t\t\t\t// @ts-ignore TS doesn't recognise Target accepts string keys\n\t\t\t\ttarget[key] = sourceValue.slice();\n\t\t\t} else {\n\t\t\t\t// @ts-ignore TS doesn't recognise Target accepts string keys\n\t\t\t\ttarget[key] = sourceValue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target as Merge<Source, Target>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"420a7a6bbea45a85dd6f61887fd598cd4f56275d","contentHash":"e3f18fcadc90c339536a8d729823cbc443800f629a8a461d32cf595a346f376b"},"/Users/ldlafountaine/code/got/source/utils/options-to-url.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/options-to-url.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"4":{"start":{"line":7,"column":12},"end":{"line":7,"column":123}},"5":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"6":{"start":{"line":22,"column":0},"end":{"line":82,"column":2}},"7":{"start":{"line":25,"column":4},"end":{"line":35,"column":5}},"8":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"9":{"start":{"line":27,"column":12},"end":{"line":27,"column":92}},"10":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"11":{"start":{"line":30,"column":12},"end":{"line":30,"column":90}},"12":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"13":{"start":{"line":33,"column":12},"end":{"line":33,"column":96}},"14":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":100}},"16":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"17":{"start":{"line":40,"column":8},"end":{"line":40,"column":94}},"18":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":43}},"20":{"start":{"line":45,"column":4},"end":{"line":53,"column":5}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":32}},"22":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"23":{"start":{"line":50,"column":12},"end":{"line":50,"column":61}},"24":{"start":{"line":52,"column":8},"end":{"line":52,"column":166}},"25":{"start":{"line":54,"column":16},"end":{"line":54,"column":37}},"26":{"start":{"line":55,"column":4},"end":{"line":64,"column":5}},"27":{"start":{"line":56,"column":28},"end":{"line":56,"column":53}},"28":{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},"29":{"start":{"line":58,"column":12},"end":{"line":58,"column":44}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":66}},"31":{"start":{"line":62,"column":12},"end":{"line":62,"column":65}},"32":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"33":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"34":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"35":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"36":{"start":{"line":70,"column":12},"end":{"line":70,"column":47}},"37":{"start":{"line":73,"column":4},"end":{"line":80,"column":5}},"38":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"39":{"start":{"line":75,"column":12},"end":{"line":75,"column":55}},"40":{"start":{"line":77,"column":8},"end":{"line":79,"column":11}},"41":{"start":{"line":78,"column":12},"end":{"line":78,"column":48}},"42":{"start":{"line":81,"column":4},"end":{"line":81,"column":15}}},"fnMap":{"0":{"name":"validateSearchParams","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":29}},"loc":{"start":{"line":4,"column":44},"end":{"line":10,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":18},"end":{"line":22,"column":19}},"loc":{"start":{"line":22,"column":31},"end":{"line":82,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":77,"column":66},"end":{"line":77,"column":67}},"loc":{"start":{"line":77,"column":82},"end":{"line":79,"column":9}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":6,"column":12},"end":{"line":6,"column":114}},"type":"binary-expr","locations":[{"start":{"line":6,"column":12},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":66}},{"start":{"line":6,"column":70},"end":{"line":6,"column":96}},{"start":{"line":6,"column":100},"end":{"line":6,"column":114}}],"line":6},"2":{"loc":{"start":{"line":25,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":35,"column":5}},{"start":{"line":25,"column":4},"end":{"line":35,"column":5}}],"line":25},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"6":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36},"7":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"8":{"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":46}},"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":22}},{"start":{"line":39,"column":26},"end":{"line":39,"column":46}}],"line":39},"9":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42},"10":{"loc":{"start":{"line":45,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":53,"column":5}},{"start":{"line":45,"column":4},"end":{"line":53,"column":5}}],"line":45},"11":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"12":{"loc":{"start":{"line":52,"column":71},"end":{"line":52,"column":119}},"type":"cond-expr","locations":[{"start":{"line":52,"column":102},"end":{"line":52,"column":104}},{"start":{"line":52,"column":107},"end":{"line":52,"column":119}}],"line":52},"13":{"loc":{"start":{"line":52,"column":71},"end":{"line":52,"column":99}},"type":"binary-expr","locations":[{"start":{"line":52,"column":71},"end":{"line":52,"column":82}},{"start":{"line":52,"column":86},"end":{"line":52,"column":99}}],"line":52},"14":{"loc":{"start":{"line":52,"column":124},"end":{"line":52,"column":162}},"type":"cond-expr","locations":[{"start":{"line":52,"column":155},"end":{"line":52,"column":157}},{"start":{"line":52,"column":160},"end":{"line":52,"column":162}}],"line":52},"15":{"loc":{"start":{"line":52,"column":124},"end":{"line":52,"column":152}},"type":"binary-expr","locations":[{"start":{"line":52,"column":124},"end":{"line":52,"column":135}},{"start":{"line":52,"column":139},"end":{"line":52,"column":152}}],"line":52},"16":{"loc":{"start":{"line":55,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":64,"column":5}},{"start":{"line":55,"column":4},"end":{"line":64,"column":5}}],"line":55},"17":{"loc":{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},{"start":{"line":57,"column":8},"end":{"line":63,"column":9}}],"line":57},"18":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"19":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"20":{"loc":{"start":{"line":73,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":80,"column":5}},{"start":{"line":73,"column":4},"end":{"line":80,"column":5}}],"line":73},"21":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"22":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":112}},"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":52}},{"start":{"line":74,"column":56},"end":{"line":74,"column":112}}],"line":74}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1,"6":1,"7":5,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":5,"15":0,"16":5,"17":0,"18":5,"19":0,"20":5,"21":5,"22":0,"23":0,"24":0,"25":5,"26":5,"27":0,"28":0,"29":0,"30":0,"31":0,"32":5,"33":0,"34":5,"35":45,"36":0,"37":5,"38":0,"39":0,"40":0,"41":0,"42":5},"f":{"0":0,"1":5,"2":0},"b":{"0":[0,0],"1":[0,0,0,0],"2":[0,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,5],"7":[0,5],"8":[5,0],"9":[0,5],"10":[5,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,5],"17":[0,0],"18":[0,5],"19":[0,45],"20":[0,5],"21":[0,0],"22":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/options-to-url.ts","sources":["/Users/ldlafountaine/code/got/source/utils/options-to-url.ts"],"names":[],"mappings":"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","sourcesContent":["import {URL, URLSearchParams} from 'url';\n\nfunction validateSearchParams(searchParams: Record<string, unknown>): asserts searchParams is Record<string, string | number | boolean | null> {\n\tfor (const value of Object.values(searchParams)) {\n\t\tif (typeof value !== 'string' && typeof value !== 'number' && typeof value !== 'boolean' && value !== null) {\n\t\t\tthrow new TypeError(`The \\`searchParams\\` value '${String(value)}' must be a string, number, boolean or null`);\n\t\t}\n\t}\n}\n\nexport interface URLOptions {\n\thref?: string;\n\torigin?: string;\n\tprotocol?: string;\n\tusername?: string;\n\tpassword?: string;\n\thost?: string;\n\thostname?: string;\n\tport?: string | number;\n\tpathname?: string;\n\tsearch?: string;\n\tsearchParams?: Record<string, string | number | boolean | null> | URLSearchParams | string;\n\thash?: string;\n\n\t// The only accepted legacy URL options\n\tpath?: string;\n}\n\nconst keys: Array<Exclude<keyof URLOptions, 'href' | 'origin' | 'searchParams' | 'path'>> = [\n\t'protocol',\n\t'username',\n\t'password',\n\t'host',\n\t'hostname',\n\t'port',\n\t'pathname',\n\t'search',\n\t'hash'\n];\n\nexport default (options: URLOptions): URL => {\n\tlet origin: string;\n\n\tif (options.path) {\n\t\tif (options.pathname) {\n\t\t\tthrow new TypeError('Parameters `path` and `pathname` are mutually exclusive.');\n\t\t}\n\n\t\tif (options.search) {\n\t\t\tthrow new TypeError('Parameters `path` and `search` are mutually exclusive.');\n\t\t}\n\n\t\tif (options.searchParams) {\n\t\t\tthrow new TypeError('Parameters `path` and `searchParams` are mutually exclusive.');\n\t\t}\n\t}\n\n\tif (Reflect.has(options, 'auth')) {\n\t\tthrow new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');\n\t}\n\n\tif (options.search && options.searchParams) {\n\t\tthrow new TypeError('Parameters `search` and `searchParams` are mutually exclusive.');\n\t}\n\n\tif (options.href) {\n\t\treturn new URL(options.href);\n\t}\n\n\tif (options.origin) {\n\t\torigin = options.origin;\n\t} else {\n\t\tif (!options.protocol) {\n\t\t\tthrow new TypeError('No URL protocol specified');\n\t\t}\n\n\t\torigin = `${options.protocol}//${options.hostname ?? options.host ?? ''}`;\n\t}\n\n\tconst url = new URL(origin);\n\n\tif (options.path) {\n\t\tconst searchIndex = options.path.indexOf('?');\n\t\tif (searchIndex === -1) {\n\t\t\toptions.pathname = options.path;\n\t\t} else {\n\t\t\toptions.pathname = options.path.slice(0, searchIndex);\n\t\t\toptions.search = options.path.slice(searchIndex + 1);\n\t\t}\n\t}\n\n\tif (Reflect.has(options, 'path')) {\n\t\tdelete options.path;\n\t}\n\n\tfor (const key of keys) {\n\t\tif (Reflect.has(options, key)) {\n\t\t\turl[key] = options[key].toString();\n\t\t}\n\t}\n\n\tif (options.searchParams) {\n\t\tif (typeof options.searchParams !== 'string' && !(options.searchParams instanceof URLSearchParams)) {\n\t\t\tvalidateSearchParams(options.searchParams);\n\t\t}\n\n\t\t(new URLSearchParams(options.searchParams as Record<string, string>)).forEach((value, key) => {\n\t\t\turl.searchParams.append(key, value);\n\t\t});\n\t}\n\n\treturn url;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c7067ee2da75b162813c3267c69a12ba9c0a25b6","contentHash":"8026e9f55960312a940f2de3b058864016d8f0b1df8e3b08a15a3ac9cf62ffa8"},"/Users/ldlafountaine/code/got/source/utils/supports-brotli.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/supports-brotli.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":68}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/supports-brotli.ts","sources":["/Users/ldlafountaine/code/got/source/utils/supports-brotli.ts"],"names":[],"mappings":";;AAAA,6BAA8B;AAE9B,kBAAe,OAAO,IAAI,CAAC,sBAAsB,KAAK,UAAU,CAAC","sourcesContent":["import zlib = require('zlib');\n\nexport default typeof zlib.createBrotliDecompress === 'function';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"89577a1dfb8abd6abef99a6154b485ab676cb2b1","contentHash":"3c3cf76c9f0f150a18fea66649d1a0792e244927e42bb7b14131ece215fafa8c"},"/Users/ldlafountaine/code/got/source/types.ts":{"path":"/Users/ldlafountaine/code/got/source/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/types.ts","sources":["/Users/ldlafountaine/code/got/source/types.ts"],"names":[],"mappings":";;AA6Ha,QAAA,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC","sourcesContent":["import http = require('http');\nimport https = require('https');\nimport Keyv = require('keyv');\nimport CacheableRequest = require('cacheable-request');\nimport PCancelable = require('p-cancelable');\nimport ResponseLike = require('responselike');\nimport {URL} from 'url';\nimport {Readable as ReadableStream} from 'stream';\nimport {Timings, IncomingMessageWithTimings} from '@szmarczak/http-timer';\nimport CacheableLookup from 'cacheable-lookup';\nimport {Except, Merge, Promisable} from 'type-fest';\nimport {GotReturn} from './create';\nimport {GotError, HTTPError, MaxRedirectsError, ParseError, TimeoutError, RequestError} from './errors';\nimport {Hooks} from './known-hook-events';\nimport {URLOptions} from './utils/options-to-url';\n\nexport type GeneralError = Error | GotError | HTTPError | MaxRedirectsError | ParseError;\n\nexport type Method =\n\t| 'GET'\n\t| 'POST'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'HEAD'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'TRACE'\n\t| 'get'\n\t| 'post'\n\t| 'put'\n\t| 'patch'\n\t| 'head'\n\t| 'delete'\n\t| 'options'\n\t| 'trace';\n\nexport type ResponseType = 'json' | 'buffer' | 'text';\n\nexport interface Response<BodyType = unknown> extends IncomingMessageWithTimings {\n\tbody: BodyType;\n\tstatusCode: number;\n\n\t/**\n\tThe remote IP address.\n\n\tNote: Not available when the response is cached. This is hopefully a temporary limitation, see [lukechilds/cacheable-request#86](https://github.com/lukechilds/cacheable-request/issues/86).\n\t*/\n\tip: string;\n\n\tfromCache?: boolean;\n\tisFromCache?: boolean;\n\treq?: http.ClientRequest;\n\trequestUrl: string;\n\tretryCount: number;\n\ttimings: Timings;\n\tredirectUrls: string[];\n\trequest: {\n\t\toptions: NormalizedOptions;\n\t};\n\turl: string;\n}\n\n// TODO: The `ResponseLike` type should be properly fixed instead:\n// https://github.com/sindresorhus/got/pull/827/files#r323633794\nexport interface ResponseObject extends Partial<ResponseLike> {\n\tsocket: {\n\t\tremoteAddress: string;\n\t};\n}\n\nexport interface RetryObject {\n\tattemptCount: number;\n\tretryOptions: Required<RetryOptions>;\n\terror: TimeoutError | RequestError;\n\tcomputedValue: number;\n}\n\nexport type RetryFunction = (retryObject: RetryObject) => number;\n\nexport type HandlerFunction = <T extends GotReturn>(options: NormalizedOptions, next: (options: NormalizedOptions) => T) => Promisable<T>;\n\nexport interface DefaultRetryOptions {\n\tlimit: number;\n\tmethods: Method[];\n\tstatusCodes: number[];\n\terrorCodes: string[];\n\tcalculateDelay: RetryFunction;\n\tmaxRetryAfter?: number;\n}\n\nexport interface RetryOptions extends Partial<DefaultRetryOptions> {\n\tretries?: number;\n}\n\nexport type RequestFunction = typeof http.request;\n\nexport interface AgentByProtocol {\n\thttp?: http.Agent;\n\thttps?: https.Agent;\n}\n\nexport interface Delays {\n\tlookup?: number;\n\tconnect?: number;\n\tsecureConnect?: number;\n\tsocket?: number;\n\tresponse?: number;\n\tsend?: number;\n\trequest?: number;\n}\n\nexport type Headers = Record<string, string | string[] | undefined>;\n\ninterface ToughCookieJar {\n\tgetCookieString(currentUrl: string, options: {[key: string]: unknown}, cb: (err: Error | null, cookies: string) => void): void;\n\tgetCookieString(url: string, callback: (error: Error | null, cookieHeader: string) => void): void;\n\tsetCookie(cookieOrString: unknown, currentUrl: string, options: {[key: string]: unknown}, cb: (err: Error | null, cookie: unknown) => void): void;\n\tsetCookie(rawCookie: string, url: string, callback: (error: Error | null, result: unknown) => void): void;\n}\n\ninterface PromiseCookieJar {\n\tgetCookieString(url: string): Promise<string>;\n\tsetCookie(rawCookie: string, url: string): Promise<unknown>;\n}\n\nexport const requestSymbol = Symbol('request');\n\n/* eslint-disable @typescript-eslint/indent */\nexport type DefaultOptions = Merge<\n\tRequired<\n\t\tExcept<\n\t\t\tGotOptions,\n\t\t\t// Override\n\t\t\t'hooks' |\n\t\t\t'retry' |\n\t\t\t'timeout' |\n\t\t\t'context' |\n\n\t\t\t// Should not be present\n\t\t\t'agent' |\n\t\t\t'body' |\n\t\t\t'cookieJar' |\n\t\t\t'encoding' |\n\t\t\t'form' |\n\t\t\t'json' |\n\t\t\t'lookup' |\n\t\t\t'request' |\n\t\t\t'url' |\n\t\t\ttypeof requestSymbol\n\t\t>\n\t>,\n\t{\n\t\thooks: Required<Hooks>;\n\t\tretry: DefaultRetryOptions;\n\t\ttimeout: Delays;\n\t\tcontext: {[key: string]: any};\n\t}\n>;\n/* eslint-enable @typescript-eslint/indent */\n\nexport interface GotOptions {\n\t[requestSymbol]?: RequestFunction;\n\turl?: URL | string;\n\tbody?: string | Buffer | ReadableStream;\n\thooks?: Hooks;\n\tdecompress?: boolean;\n\tisStream?: boolean;\n\tencoding?: BufferEncoding;\n\tmethod?: Method;\n\tretry?: RetryOptions | number;\n\tthrowHttpErrors?: boolean;\n\tcookieJar?: ToughCookieJar | PromiseCookieJar;\n\tignoreInvalidCookies?: boolean;\n\trequest?: RequestFunction;\n\tagent?: http.Agent | https.Agent | boolean | AgentByProtocol;\n\tcache?: string | CacheableRequest.StorageAdapter | false;\n\theaders?: Headers;\n\tresponseType?: ResponseType;\n\tresolveBodyOnly?: boolean;\n\tfollowRedirect?: boolean;\n\tprefixUrl?: URL | string;\n\ttimeout?: number | Delays;\n\tdnsCache?: CacheableLookup | Map<string, string> | Keyv | false;\n\tuseElectronNet?: boolean;\n\tform?: {[key: string]: any};\n\tjson?: {[key: string]: any};\n\tcontext?: {[key: string]: any};\n\tmaxRedirects?: number;\n\tlookup?: CacheableLookup['lookup'];\n\tmethodRewriting?: boolean;\n}\n\nexport type Options = Merge<https.RequestOptions, Merge<GotOptions, URLOptions>>;\n\nexport interface NormalizedOptions extends Options {\n\t// Normalized Got options\n\theaders: Headers;\n\thooks: Required<Hooks>;\n\ttimeout: Delays;\n\tdnsCache: CacheableLookup | false;\n\tlookup?: CacheableLookup['lookup'];\n\tretry: Required<RetryOptions>;\n\tprefixUrl: string;\n\tmethod: Method;\n\turl: URL;\n\tcacheableRequest?: (options: string | URL | http.RequestOptions, callback?: (response: http.ServerResponse | ResponseLike) => void) => CacheableRequest.Emitter;\n\tcookieJar?: PromiseCookieJar;\n\tmaxRedirects: number;\n\t[requestSymbol]: RequestFunction;\n\n\t// Other values\n\tdecompress: boolean;\n\tisStream: boolean;\n\tthrowHttpErrors: boolean;\n\tignoreInvalidCookies: boolean;\n\tcache: CacheableRequest.StorageAdapter | false;\n\tresponseType: ResponseType;\n\tresolveBodyOnly: boolean;\n\tfollowRedirect: boolean;\n\tuseElectronNet: boolean;\n\tmethodRewriting: boolean;\n\tcontext: {[key: string]: any};\n\n\t// UNIX socket support\n\tpath?: string;\n}\n\nexport interface ExtendOptions extends Options {\n\thandlers?: HandlerFunction[];\n\tmutableDefaults?: boolean;\n}\n\nexport interface Defaults {\n\toptions: DefaultOptions;\n\thandlers: HandlerFunction[];\n\tmutableDefaults: boolean;\n\t_rawHandlers?: HandlerFunction[];\n}\n\nexport type URLOrOptions = Options | string;\n\nexport interface Progress {\n\tpercent: number;\n\ttransferred: number;\n\ttotal?: number;\n}\n\nexport interface GotEvents<T> {\n\ton(name: 'request', listener: (request: http.ClientRequest) => void): T;\n\ton(name: 'response', listener: (response: Response) => void): T;\n\ton(name: 'redirect', listener: (response: Response, nextOptions: NormalizedOptions) => void): T;\n\ton(name: 'uploadProgress' | 'downloadProgress', listener: (progress: Progress) => void): T;\n}\n\nexport interface CancelableRequest<T extends Response | Response['body']> extends PCancelable<T>, GotEvents<CancelableRequest<T>> {\n\tjson<TReturnType>(): CancelableRequest<TReturnType>;\n\tbuffer(): CancelableRequest<Buffer>;\n\ttext(): CancelableRequest<string>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5078bf45e26dc3146542ce42e56ac1a81dda09bd","contentHash":"d205eaf60e11626718ef6f7ed4f32d5f7d8c56bc1021ce030d4e048e7d4c730d"},"/Users/ldlafountaine/code/got/source/request-as-event-emitter.ts":{"path":"/Users/ldlafountaine/code/got/source/request-as-event-emitter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":53}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":14},"end":{"line":7,"column":28}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":13},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":21},"end":{"line":10,"column":53}},"9":{"start":{"line":11,"column":32},"end":{"line":11,"column":66}},"10":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}},"11":{"start":{"line":13,"column":23},"end":{"line":13,"column":48}},"12":{"start":{"line":14,"column":30},"end":{"line":14,"column":62}},"13":{"start":{"line":15,"column":19},"end":{"line":15,"column":40}},"14":{"start":{"line":16,"column":20},"end":{"line":16,"column":48}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":34}},"16":{"start":{"line":18,"column":25},"end":{"line":18,"column":58}},"17":{"start":{"line":19,"column":26},"end":{"line":19,"column":83}},"18":{"start":{"line":19,"column":38},"end":{"line":19,"column":83}},"19":{"start":{"line":19,"column":61},"end":{"line":19,"column":82}},"20":{"start":{"line":20,"column":17},"end":{"line":20,"column":50}},"21":{"start":{"line":21,"column":22},"end":{"line":21,"column":66}},"22":{"start":{"line":22,"column":0},"end":{"line":265,"column":2}},"23":{"start":{"line":23,"column":20},"end":{"line":23,"column":38}},"24":{"start":{"line":24,"column":23},"end":{"line":24,"column":45}},"25":{"start":{"line":25,"column":22},"end":{"line":25,"column":24}},"26":{"start":{"line":26,"column":21},"end":{"line":26,"column":22}},"27":{"start":{"line":29,"column":22},"end":{"line":29,"column":96}},"28":{"start":{"line":29,"column":28},"end":{"line":29,"column":96}},"29":{"start":{"line":30,"column":22},"end":{"line":41,"column":5}},"30":{"start":{"line":31,"column":8},"end":{"line":40,"column":9}},"31":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"32":{"start":{"line":34,"column":16},"end":{"line":34,"column":42}},"33":{"start":{"line":36,"column":12},"end":{"line":36,"column":41}},"34":{"start":{"line":39,"column":12},"end":{"line":39,"column":42}},"35":{"start":{"line":42,"column":16},"end":{"line":200,"column":5}},"36":{"start":{"line":43,"column":26},"end":{"line":43,"column":88}},"37":{"start":{"line":44,"column":31},"end":{"line":123,"column":9}},"38":{"start":{"line":46,"column":12},"end":{"line":122,"column":13}},"39":{"start":{"line":59,"column":38},"end":{"line":59,"column":46}},"40":{"start":{"line":60,"column":39},"end":{"line":60,"column":52}},"41":{"start":{"line":61,"column":16},"end":{"line":61,"column":165}},"42":{"start":{"line":62,"column":16},"end":{"line":62,"column":59}},"43":{"start":{"line":63,"column":16},"end":{"line":63,"column":54}},"44":{"start":{"line":64,"column":16},"end":{"line":64,"column":54}},"45":{"start":{"line":65,"column":16},"end":{"line":65,"column":55}},"46":{"start":{"line":66,"column":16},"end":{"line":66,"column":52}},"47":{"start":{"line":67,"column":16},"end":{"line":67,"column":120}},"48":{"start":{"line":68,"column":16},"end":{"line":68,"column":47}},"49":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"50":{"start":{"line":70,"column":20},"end":{"line":70,"column":69}},"51":{"start":{"line":72,"column":35},"end":{"line":72,"column":70}},"52":{"start":{"line":73,"column":16},"end":{"line":79,"column":17}},"53":{"start":{"line":74,"column":35},"end":{"line":74,"column":129}},"54":{"start":{"line":74,"column":71},"end":{"line":74,"column":128}},"55":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"56":{"start":{"line":76,"column":24},"end":{"line":76,"column":81}},"57":{"start":{"line":76,"column":61},"end":{"line":76,"column":79}},"58":{"start":{"line":78,"column":20},"end":{"line":78,"column":48}},"59":{"start":{"line":80,"column":16},"end":{"line":117,"column":17}},"60":{"start":{"line":81,"column":20},"end":{"line":81,"column":43}},"61":{"start":{"line":82,"column":20},"end":{"line":97,"column":21}},"62":{"start":{"line":83,"column":24},"end":{"line":87,"column":25}},"63":{"start":{"line":86,"column":28},"end":{"line":86,"column":51}},"64":{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},"65":{"start":{"line":89,"column":28},"end":{"line":89,"column":48}},"66":{"start":{"line":91,"column":24},"end":{"line":93,"column":25}},"67":{"start":{"line":92,"column":28},"end":{"line":92,"column":48}},"68":{"start":{"line":94,"column":24},"end":{"line":96,"column":25}},"69":{"start":{"line":95,"column":28},"end":{"line":95,"column":48}},"70":{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},"71":{"start":{"line":99,"column":24},"end":{"line":99,"column":107}},"72":{"start":{"line":102,"column":43},"end":{"line":102,"column":107}},"73":{"start":{"line":103,"column":40},"end":{"line":103,"column":82}},"74":{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},"75":{"start":{"line":106,"column":24},"end":{"line":106,"column":54}},"76":{"start":{"line":108,"column":20},"end":{"line":108,"column":59}},"77":{"start":{"line":109,"column":20},"end":{"line":109,"column":46}},"78":{"start":{"line":110,"column":20},"end":{"line":113,"column":21}},"79":{"start":{"line":112,"column":24},"end":{"line":112,"column":59}},"80":{"start":{"line":114,"column":20},"end":{"line":114,"column":64}},"81":{"start":{"line":115,"column":20},"end":{"line":115,"column":32}},"82":{"start":{"line":116,"column":20},"end":{"line":116,"column":27}},"83":{"start":{"line":118,"column":16},"end":{"line":118,"column":78}},"84":{"start":{"line":121,"column":16},"end":{"line":121,"column":33}},"85":{"start":{"line":124,"column":30},"end":{"line":172,"column":9}},"86":{"start":{"line":125,"column":26},"end":{"line":125,"column":31}},"87":{"start":{"line":126,"column":29},"end":{"line":126,"column":34}},"88":{"start":{"line":128,"column":12},"end":{"line":130,"column":15}},"89":{"start":{"line":129,"column":16},"end":{"line":129,"column":34}},"90":{"start":{"line":131,"column":12},"end":{"line":131,"column":37}},"91":{"start":{"line":132,"column":28},"end":{"line":142,"column":13}},"92":{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},"93":{"start":{"line":134,"column":20},"end":{"line":134,"column":87}},"94":{"start":{"line":137,"column":20},"end":{"line":137,"column":70}},"95":{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},"96":{"start":{"line":140,"column":20},"end":{"line":140,"column":37}},"97":{"start":{"line":143,"column":12},"end":{"line":155,"column":15}},"98":{"start":{"line":144,"column":16},"end":{"line":153,"column":17}},"99":{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},"100":{"start":{"line":147,"column":24},"end":{"line":147,"column":31}},"101":{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},"102":{"start":{"line":151,"column":24},"end":{"line":151,"column":31}},"103":{"start":{"line":154,"column":16},"end":{"line":154,"column":31}},"104":{"start":{"line":156,"column":12},"end":{"line":171,"column":13}},"105":{"start":{"line":157,"column":16},"end":{"line":157,"column":46}},"106":{"start":{"line":158,"column":16},"end":{"line":158,"column":75}},"107":{"start":{"line":159,"column":16},"end":{"line":159,"column":49}},"108":{"start":{"line":160,"column":37},"end":{"line":160,"column":134}},"109":{"start":{"line":161,"column":16},"end":{"line":161,"column":31}},"110":{"start":{"line":162,"column":16},"end":{"line":162,"column":72}},"111":{"start":{"line":163,"column":16},"end":{"line":163,"column":48}},"112":{"start":{"line":166,"column":16},"end":{"line":169,"column":17}},"113":{"start":{"line":168,"column":20},"end":{"line":168,"column":27}},"114":{"start":{"line":170,"column":16},"end":{"line":170,"column":31}},"115":{"start":{"line":173,"column":8},"end":{"line":199,"column":9}},"116":{"start":{"line":175,"column":12},"end":{"line":178,"column":14}},"117":{"start":{"line":180,"column":33},"end":{"line":180,"column":86}},"118":{"start":{"line":181,"column":12},"end":{"line":188,"column":15}},"119":{"start":{"line":182,"column":16},"end":{"line":187,"column":17}},"120":{"start":{"line":183,"column":20},"end":{"line":183,"column":73}},"121":{"start":{"line":186,"column":20},"end":{"line":186,"column":71}},"122":{"start":{"line":189,"column":12},"end":{"line":189,"column":56}},"123":{"start":{"line":193,"column":12},"end":{"line":198,"column":13}},"124":{"start":{"line":194,"column":16},"end":{"line":194,"column":108}},"125":{"start":{"line":197,"column":16},"end":{"line":197,"column":69}},"126":{"start":{"line":201,"column":4},"end":{"line":238,"column":6}},"127":{"start":{"line":203,"column":8},"end":{"line":203,"column":21}},"128":{"start":{"line":204,"column":8},"end":{"line":220,"column":9}},"129":{"start":{"line":205,"column":12},"end":{"line":215,"column":15}},"130":{"start":{"line":218,"column":12},"end":{"line":218,"column":30}},"131":{"start":{"line":219,"column":12},"end":{"line":219,"column":25}},"132":{"start":{"line":221,"column":8},"end":{"line":236,"column":9}},"133":{"start":{"line":222,"column":26},"end":{"line":233,"column":13}},"134":{"start":{"line":223,"column":16},"end":{"line":232,"column":17}},"135":{"start":{"line":224,"column":20},"end":{"line":227,"column":21}},"136":{"start":{"line":226,"column":24},"end":{"line":226,"column":63}},"137":{"start":{"line":228,"column":20},"end":{"line":228,"column":32}},"138":{"start":{"line":231,"column":20},"end":{"line":231,"column":38}},"139":{"start":{"line":234,"column":12},"end":{"line":234,"column":75}},"140":{"start":{"line":235,"column":12},"end":{"line":235,"column":24}},"141":{"start":{"line":237,"column":8},"end":{"line":237,"column":21}},"142":{"start":{"line":239,"column":4},"end":{"line":246,"column":6}},"143":{"start":{"line":240,"column":8},"end":{"line":242,"column":11}},"144":{"start":{"line":241,"column":12},"end":{"line":241,"column":28}},"145":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"146":{"start":{"line":244,"column":12},"end":{"line":244,"column":35}},"147":{"start":{"line":247,"column":4},"end":{"line":263,"column":9}},"148":{"start":{"line":252,"column":8},"end":{"line":252,"column":34}},"149":{"start":{"line":253,"column":8},"end":{"line":262,"column":9}},"150":{"start":{"line":254,"column":12},"end":{"line":257,"column":13}},"151":{"start":{"line":256,"column":16},"end":{"line":256,"column":36}},"152":{"start":{"line":258,"column":12},"end":{"line":258,"column":24}},"153":{"start":{"line":261,"column":12},"end":{"line":261,"column":29}},"154":{"start":{"line":264,"column":4},"end":{"line":264,"column":19}},"155":{"start":{"line":266,"column":0},"end":{"line":278,"column":2}},"156":{"start":{"line":267,"column":19},"end":{"line":272,"column":5}},"157":{"start":{"line":273,"column":4},"end":{"line":277,"column":5}},"158":{"start":{"line":274,"column":8},"end":{"line":276,"column":11}},"159":{"start":{"line":275,"column":12},"end":{"line":275,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":26},"end":{"line":19,"column":27}},"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":83}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":50},"end":{"line":19,"column":51}},"loc":{"start":{"line":19,"column":61},"end":{"line":19,"column":82}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":18},"end":{"line":22,"column":19}},"loc":{"start":{"line":22,"column":31},"end":{"line":265,"column":1}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":96}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},"loc":{"start":{"line":30,"column":39},"end":{"line":41,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":17}},"loc":{"start":{"line":42,"column":28},"end":{"line":200,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":31},"end":{"line":44,"column":32}},"loc":{"start":{"line":44,"column":51},"end":{"line":123,"column":9}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":50},"end":{"line":74,"column":51}},"loc":{"start":{"line":74,"column":71},"end":{"line":74,"column":128}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":76,"column":48},"end":{"line":76,"column":49}},"loc":{"start":{"line":76,"column":61},"end":{"line":76,"column":79}},"line":76},"9":{"name":"(anonymous_9)","decl":{"start":{"line":76,"column":69},"end":{"line":76,"column":70}},"loc":{"start":{"line":76,"column":75},"end":{"line":76,"column":78}},"line":76},"10":{"name":"(anonymous_10)","decl":{"start":{"line":124,"column":30},"end":{"line":124,"column":31}},"loc":{"start":{"line":124,"column":49},"end":{"line":172,"column":9}},"line":124},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":35},"end":{"line":128,"column":36}},"loc":{"start":{"line":128,"column":41},"end":{"line":130,"column":13}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":132,"column":28},"end":{"line":132,"column":29}},"loc":{"start":{"line":132,"column":39},"end":{"line":142,"column":13}},"line":132},"13":{"name":"(anonymous_13)","decl":{"start":{"line":143,"column":32},"end":{"line":143,"column":33}},"loc":{"start":{"line":143,"column":41},"end":{"line":155,"column":13}},"line":143},"14":{"name":"(anonymous_14)","decl":{"start":{"line":181,"column":39},"end":{"line":181,"column":40}},"loc":{"start":{"line":181,"column":50},"end":{"line":188,"column":13}},"line":181},"15":{"name":"(anonymous_15)","decl":{"start":{"line":201,"column":20},"end":{"line":201,"column":21}},"loc":{"start":{"line":201,"column":29},"end":{"line":238,"column":5}},"line":201},"16":{"name":"(anonymous_16)","decl":{"start":{"line":222,"column":26},"end":{"line":222,"column":27}},"loc":{"start":{"line":222,"column":45},"end":{"line":233,"column":13}},"line":222},"17":{"name":"(anonymous_17)","decl":{"start":{"line":239,"column":20},"end":{"line":239,"column":21}},"loc":{"start":{"line":239,"column":26},"end":{"line":246,"column":5}},"line":239},"18":{"name":"(anonymous_18)","decl":{"start":{"line":240,"column":43},"end":{"line":240,"column":44}},"loc":{"start":{"line":240,"column":56},"end":{"line":242,"column":9}},"line":240},"19":{"name":"(anonymous_19)","decl":{"start":{"line":247,"column":5},"end":{"line":247,"column":6}},"loc":{"start":{"line":247,"column":17},"end":{"line":263,"column":5}},"line":247},"20":{"name":"(anonymous_20)","decl":{"start":{"line":266,"column":22},"end":{"line":266,"column":23}},"loc":{"start":{"line":266,"column":42},"end":{"line":278,"column":1}},"line":266},"21":{"name":"(anonymous_21)","decl":{"start":{"line":274,"column":26},"end":{"line":274,"column":27}},"loc":{"start":{"line":274,"column":39},"end":{"line":276,"column":9}},"line":274}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":96}},"type":"binary-expr","locations":[{"start":{"line":29,"column":28},"end":{"line":29,"column":70}},{"start":{"line":29,"column":74},"end":{"line":29,"column":96}}],"line":29},"1":{"loc":{"start":{"line":61,"column":46},"end":{"line":61,"column":164}},"type":"cond-expr","locations":[{"start":{"line":61,"column":105},"end":{"line":61,"column":132}},{"start":{"line":61,"column":135},"end":{"line":61,"column":164}}],"line":61},"2":{"loc":{"start":{"line":67,"column":76},"end":{"line":67,"column":117}},"type":"cond-expr","locations":[{"start":{"line":67,"column":107},"end":{"line":67,"column":109}},{"start":{"line":67,"column":112},"end":{"line":67,"column":117}}],"line":67},"3":{"loc":{"start":{"line":67,"column":76},"end":{"line":67,"column":104}},"type":"binary-expr","locations":[{"start":{"line":67,"column":76},"end":{"line":67,"column":87}},{"start":{"line":67,"column":91},"end":{"line":67,"column":104}}],"line":67},"4":{"loc":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},{"start":{"line":69,"column":16},"end":{"line":71,"column":17}}],"line":69},"5":{"loc":{"start":{"line":73,"column":16},"end":{"line":79,"column":17}},"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":79,"column":17}},{"start":{"line":73,"column":16},"end":{"line":79,"column":17}}],"line":73},"6":{"loc":{"start":{"line":73,"column":20},"end":{"line":73,"column":67}},"type":"binary-expr","locations":[{"start":{"line":73,"column":20},"end":{"line":73,"column":53}},{"start":{"line":73,"column":57},"end":{"line":73,"column":67}}],"line":73},"7":{"loc":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},{"start":{"line":75,"column":20},"end":{"line":77,"column":21}}],"line":75},"8":{"loc":{"start":{"line":80,"column":16},"end":{"line":117,"column":17}},"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":117,"column":17}},{"start":{"line":80,"column":16},"end":{"line":117,"column":17}}],"line":80},"9":{"loc":{"start":{"line":80,"column":20},"end":{"line":80,"column":125}},"type":"binary-expr","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":42}},{"start":{"line":80,"column":46},"end":{"line":80,"column":92}},{"start":{"line":80,"column":96},"end":{"line":80,"column":125}}],"line":80},"10":{"loc":{"start":{"line":82,"column":20},"end":{"line":97,"column":21}},"type":"if","locations":[{"start":{"line":82,"column":20},"end":{"line":97,"column":21}},{"start":{"line":82,"column":20},"end":{"line":97,"column":21}}],"line":82},"11":{"loc":{"start":{"line":82,"column":24},"end":{"line":82,"column":79}},"type":"binary-expr","locations":[{"start":{"line":82,"column":24},"end":{"line":82,"column":42}},{"start":{"line":82,"column":46},"end":{"line":82,"column":79}}],"line":82},"12":{"loc":{"start":{"line":83,"column":24},"end":{"line":87,"column":25}},"type":"if","locations":[{"start":{"line":83,"column":24},"end":{"line":87,"column":25}},{"start":{"line":83,"column":24},"end":{"line":87,"column":25}}],"line":83},"13":{"loc":{"start":{"line":83,"column":28},"end":{"line":83,"column":81}},"type":"binary-expr","locations":[{"start":{"line":83,"column":28},"end":{"line":83,"column":52}},{"start":{"line":83,"column":56},"end":{"line":83,"column":81}}],"line":83},"14":{"loc":{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},"type":"if","locations":[{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},{"start":{"line":88,"column":24},"end":{"line":90,"column":25}}],"line":88},"15":{"loc":{"start":{"line":91,"column":24},"end":{"line":93,"column":25}},"type":"if","locations":[{"start":{"line":91,"column":24},"end":{"line":93,"column":25}},{"start":{"line":91,"column":24},"end":{"line":93,"column":25}}],"line":91},"16":{"loc":{"start":{"line":94,"column":24},"end":{"line":96,"column":25}},"type":"if","locations":[{"start":{"line":94,"column":24},"end":{"line":96,"column":25}},{"start":{"line":94,"column":24},"end":{"line":96,"column":25}}],"line":94},"17":{"loc":{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},"type":"if","locations":[{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},{"start":{"line":98,"column":20},"end":{"line":100,"column":21}}],"line":98},"18":{"loc":{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},"type":"if","locations":[{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},{"start":{"line":105,"column":20},"end":{"line":107,"column":21}}],"line":105},"19":{"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":111}},"type":"binary-expr","locations":[{"start":{"line":105,"column":24},"end":{"line":105,"column":69}},{"start":{"line":105,"column":73},"end":{"line":105,"column":111}}],"line":105},"20":{"loc":{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},"type":"if","locations":[{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},{"start":{"line":133,"column":16},"end":{"line":138,"column":17}}],"line":133},"21":{"loc":{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},"type":"if","locations":[{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},{"start":{"line":139,"column":16},"end":{"line":141,"column":17}}],"line":139},"22":{"loc":{"start":{"line":144,"column":16},"end":{"line":153,"column":17}},"type":"if","locations":[{"start":{"line":144,"column":16},"end":{"line":153,"column":17}},{"start":{"line":144,"column":16},"end":{"line":153,"column":17}}],"line":144},"23":{"loc":{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},"type":"if","locations":[{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},{"start":{"line":146,"column":20},"end":{"line":148,"column":21}}],"line":146},"24":{"loc":{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},"type":"if","locations":[{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},{"start":{"line":150,"column":20},"end":{"line":152,"column":21}}],"line":150},"25":{"loc":{"start":{"line":150,"column":24},"end":{"line":150,"column":83}},"type":"binary-expr","locations":[{"start":{"line":150,"column":24},"end":{"line":150,"column":35}},{"start":{"line":150,"column":39},"end":{"line":150,"column":83}}],"line":150},"26":{"loc":{"start":{"line":166,"column":16},"end":{"line":169,"column":17}},"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":169,"column":17}},{"start":{"line":166,"column":16},"end":{"line":169,"column":17}}],"line":166},"27":{"loc":{"start":{"line":166,"column":20},"end":{"line":166,"column":70}},"type":"binary-expr","locations":[{"start":{"line":166,"column":20},"end":{"line":166,"column":31}},{"start":{"line":166,"column":35},"end":{"line":166,"column":70}}],"line":166},"28":{"loc":{"start":{"line":173,"column":8},"end":{"line":199,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":199,"column":9}},{"start":{"line":173,"column":8},"end":{"line":199,"column":9}}],"line":173},"29":{"loc":{"start":{"line":182,"column":16},"end":{"line":187,"column":17}},"type":"if","locations":[{"start":{"line":182,"column":16},"end":{"line":187,"column":17}},{"start":{"line":182,"column":16},"end":{"line":187,"column":17}}],"line":182},"30":{"loc":{"start":{"line":221,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":236,"column":9}},{"start":{"line":221,"column":8},"end":{"line":236,"column":9}}],"line":221},"31":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{"line":243,"column":8},"end":{"line":245,"column":9}}],"line":243}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":5,"19":5,"20":1,"21":1,"22":1,"23":5,"24":5,"25":5,"26":5,"27":5,"28":3,"29":5,"30":1,"31":1,"32":0,"33":1,"34":0,"35":5,"36":7,"37":7,"38":4,"39":4,"40":4,"41":4,"42":4,"43":4,"44":4,"45":4,"46":4,"47":4,"48":4,"49":4,"50":4,"51":4,"52":4,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":4,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":4,"84":0,"85":7,"86":7,"87":7,"88":7,"89":4,"90":7,"91":7,"92":3,"93":0,"94":3,"95":3,"96":1,"97":7,"98":3,"99":3,"100":3,"101":0,"102":0,"103":0,"104":7,"105":7,"106":7,"107":7,"108":7,"109":7,"110":7,"111":4,"112":3,"113":0,"114":3,"115":7,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":7,"124":7,"125":0,"126":5,"127":3,"128":3,"129":3,"130":0,"131":0,"132":3,"133":2,"134":2,"135":2,"136":0,"137":2,"138":0,"139":2,"140":2,"141":1,"142":5,"143":0,"144":0,"145":0,"146":0,"147":5,"148":5,"149":5,"150":5,"151":0,"152":5,"153":0,"154":5,"155":1,"156":5,"157":5,"158":20,"159":29},"f":{"0":5,"1":5,"2":5,"3":3,"4":1,"5":7,"6":4,"7":0,"8":0,"9":0,"10":7,"11":4,"12":3,"13":3,"14":0,"15":3,"16":2,"17":0,"18":0,"19":5,"20":5,"21":29},"b":{"0":[3,3],"1":[4,0],"2":[0,4],"3":[4,4],"4":[4,0],"5":[0,4],"6":[4,0],"7":[0,0],"8":[0,4],"9":[4,4,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,3],"21":[1,2],"22":[3,0],"23":[3,0],"24":[0,0],"25":[0,0],"26":[0,3],"27":[3,3],"28":[0,7],"29":[0,0],"30":[2,1],"31":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/request-as-event-emitter.ts","sources":["/Users/ldlafountaine/code/got/source/request-as-event-emitter.ts"],"names":[],"mappings":"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","sourcesContent":["import CacheableRequest = require('cacheable-request');\nimport EventEmitter = require('events');\nimport http = require('http');\nimport stream = require('stream');\nimport {URL} from 'url';\nimport {promisify} from 'util';\nimport is from '@sindresorhus/is';\nimport timer, {ClientRequestWithTimings} from '@szmarczak/http-timer';\nimport {ProxyStream} from './as-stream';\nimport calculateRetryDelay from './calculate-retry-delay';\nimport {CacheError, GotError, MaxRedirectsError, RequestError, TimeoutError} from './errors';\nimport getResponse from './get-response';\nimport {normalizeRequestArguments} from './normalize-arguments';\nimport {createProgressStream} from './progress';\nimport timedOut, {TimeoutError as TimedOutTimeoutError} from './utils/timed-out';\nimport {GeneralError, NormalizedOptions, Response, requestSymbol} from './types';\nimport urlToOptions from './utils/url-to-options';\n\nconst setImmediateAsync = async (): Promise<void> => new Promise(resolve => setImmediate(resolve));\nconst pipeline = promisify(stream.pipeline);\n\nconst redirectCodes: ReadonlySet<number> = new Set([300, 301, 302, 303, 304, 307, 308]);\n\nexport interface RequestAsEventEmitter extends EventEmitter {\n\tretry: (error: TimeoutError | RequestError) => boolean;\n\tabort: () => void;\n}\n\nexport default (options: NormalizedOptions): RequestAsEventEmitter => {\n\tconst emitter = new EventEmitter() as RequestAsEventEmitter;\n\n\tconst requestURL = options.url.toString();\n\tconst redirects: string[] = [];\n\tlet retryCount = 0;\n\n\tlet currentRequest: http.ClientRequest;\n\n\t// `request.aborted` is a boolean since v11.0.0: https://github.com/nodejs/node/commit/4b00c4fafaa2ae8c41c1f78823c0feb810ae4723#diff-e3bc37430eb078ccbafe3aa3b570c91a\n\tconst isAborted = (): boolean => typeof currentRequest.aborted === 'number' || (currentRequest.aborted as unknown as boolean);\n\n\tconst emitError = async (error: GeneralError): Promise<void> => {\n\t\ttry {\n\t\t\tfor (const hook of options.hooks.beforeError) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\terror = await hook(error);\n\t\t\t}\n\n\t\t\temitter.emit('error', error);\n\t\t} catch (error_) {\n\t\t\temitter.emit('error', error_);\n\t\t}\n\t};\n\n\tconst get = async (): Promise<void> => {\n\t\tlet httpOptions = await normalizeRequestArguments(options);\n\n\t\tconst handleResponse = async (response: http.IncomingMessage): Promise<void> => {\n\t\t\ttry {\n\t\t\t\t/* istanbul ignore next: fixes https://github.com/electron/electron/blob/cbb460d47628a7a146adf4419ed48550a98b2923/lib/browser/api/net.js#L59-L65 */\n\t\t\t\tif (options.useElectronNet) {\n\t\t\t\t\tresponse = new Proxy(response, {\n\t\t\t\t\t\tget: (target, name) => {\n\t\t\t\t\t\t\tif (name === 'trailers' || name === 'rawTrailers') {\n\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst value = (target as any)[name];\n\t\t\t\t\t\t\treturn is.function_(value) ? value.bind(target) : value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst typedResponse = response as Response;\n\t\t\t\tconst {statusCode} = typedResponse;\n\t\t\t\ttypedResponse.statusMessage = is.nonEmptyString(typedResponse.statusMessage) ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];\n\t\t\t\ttypedResponse.url = options.url.toString();\n\t\t\t\ttypedResponse.requestUrl = requestURL;\n\t\t\t\ttypedResponse.retryCount = retryCount;\n\t\t\t\ttypedResponse.redirectUrls = redirects;\n\t\t\t\ttypedResponse.request = {options};\n\t\t\t\ttypedResponse.isFromCache = typedResponse.fromCache ?? false;\n\t\t\t\tdelete typedResponse.fromCache;\n\n\t\t\t\tif (!typedResponse.isFromCache) {\n\t\t\t\t\ttypedResponse.ip = response.socket.remoteAddress!;\n\t\t\t\t}\n\n\t\t\t\tconst rawCookies = typedResponse.headers['set-cookie'];\n\t\t\t\tif (Reflect.has(options, 'cookieJar') && rawCookies) {\n\t\t\t\t\tlet promises: Array<Promise<unknown>> = rawCookies.map(async (rawCookie: string) => options.cookieJar.setCookie(rawCookie, typedResponse.url));\n\n\t\t\t\t\tif (options.ignoreInvalidCookies) {\n\t\t\t\t\t\tpromises = promises.map(async p => p.catch(() => {}));\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Promise.all(promises);\n\t\t\t\t}\n\n\t\t\t\tif (options.followRedirect && Reflect.has(typedResponse.headers, 'location') && redirectCodes.has(statusCode)) {\n\t\t\t\t\ttypedResponse.resume(); // We're being redirected, we don't care about the response.\n\n\t\t\t\t\tif (statusCode === 303 || options.methodRewriting === false) {\n\t\t\t\t\t\tif (options.method !== 'GET' && options.method !== 'HEAD') {\n\t\t\t\t\t\t\t// Server responded with \"see other\", indicating that the resource exists at another location,\n\t\t\t\t\t\t\t// and the client should request it from that location via GET or HEAD.\n\t\t\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Reflect.has(options, 'body')) {\n\t\t\t\t\t\t\tdelete options.body;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Reflect.has(options, 'json')) {\n\t\t\t\t\t\t\tdelete options.json;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Reflect.has(options, 'form')) {\n\t\t\t\t\t\t\tdelete options.form;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (redirects.length >= options.maxRedirects) {\n\t\t\t\t\t\tthrow new MaxRedirectsError(typedResponse, options.maxRedirects, options);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604\n\t\t\t\t\tconst redirectBuffer = Buffer.from(typedResponse.headers.location, 'binary').toString();\n\t\t\t\t\tconst redirectURL = new URL(redirectBuffer, options.url);\n\n\t\t\t\t\t// Redirecting to a different site, clear cookies.\n\t\t\t\t\tif (redirectURL.hostname !== options.url.hostname && Reflect.has(options.headers, 'cookie')) {\n\t\t\t\t\t\tdelete options.headers.cookie;\n\t\t\t\t\t}\n\n\t\t\t\t\tredirects.push(redirectURL.toString());\n\t\t\t\t\toptions.url = redirectURL;\n\n\t\t\t\t\tfor (const hook of options.hooks.beforeRedirect) {\n\t\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\t\tawait hook(options, typedResponse);\n\t\t\t\t\t}\n\n\t\t\t\t\temitter.emit('redirect', response, options);\n\n\t\t\t\t\tawait get();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait getResponse(typedResponse, options, emitter);\n\t\t\t} catch (error) {\n\t\t\t\temitError(error);\n\t\t\t}\n\t\t};\n\n\t\tconst handleRequest = async (request: ClientRequestWithTimings): Promise<void> => {\n\t\t\tlet isPiped = false;\n\t\t\tlet isFinished = false;\n\n\t\t\t// `request.finished` doesn't indicate whether this has been emitted or not\n\t\t\trequest.once('finish', () => {\n\t\t\t\tisFinished = true;\n\t\t\t});\n\n\t\t\tcurrentRequest = request;\n\n\t\t\tconst onError = (error: GeneralError): void => {\n\t\t\t\tif (error instanceof TimedOutTimeoutError) {\n\t\t\t\t\terror = new TimeoutError(error, request.timings!, options);\n\t\t\t\t} else {\n\t\t\t\t\terror = new RequestError(error, options);\n\t\t\t\t}\n\n\t\t\t\tif (!emitter.retry(error as GotError)) {\n\t\t\t\t\temitError(error);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trequest.on('error', error => {\n\t\t\t\tif (isPiped) {\n\t\t\t\t\t// Check if it's caught by `stream.pipeline(...)`\n\t\t\t\t\tif (!isFinished) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We need to let `TimedOutTimeoutError` through, because `stream.pipeline(…)` aborts the request automatically.\n\t\t\t\t\tif (isAborted() && !(error instanceof TimedOutTimeoutError)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tonError(error);\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\ttimer(request);\n\t\t\t\ttimedOut(request, options.timeout, options.url);\n\n\t\t\t\temitter.emit('request', request);\n\n\t\t\t\tconst uploadStream = createProgressStream('uploadProgress', emitter, httpOptions.headers!['content-length'] as string);\n\n\t\t\t\tisPiped = true;\n\n\t\t\t\tawait pipeline(\n\t\t\t\t\thttpOptions.body!,\n\t\t\t\t\tuploadStream,\n\t\t\t\t\trequest\n\t\t\t\t);\n\n\t\t\t\trequest.emit('upload-complete');\n\t\t\t} catch (error) {\n\t\t\t\tif (isAborted() && error.message === 'Premature close') {\n\t\t\t\t\t// The request was aborted on purpose\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tonError(error);\n\t\t\t}\n\t\t};\n\n\t\tif (options.cache) {\n\t\t\t// `cacheable-request` doesn't support Node 10 API, fallback.\n\t\t\thttpOptions = {\n\t\t\t\t...httpOptions,\n\t\t\t\t...urlToOptions(options.url)\n\t\t\t};\n\n\t\t\t// @ts-ignore `cacheable-request` has got invalid types\n\t\t\tconst cacheRequest = options.cacheableRequest!(httpOptions, handleResponse);\n\n\t\t\tcacheRequest.once('error', (error: GeneralError) => {\n\t\t\t\tif (error instanceof CacheableRequest.RequestError) {\n\t\t\t\t\temitError(new RequestError(error, options));\n\t\t\t\t} else {\n\t\t\t\t\temitError(new CacheError(error, options));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcacheRequest.once('request', handleRequest);\n\t\t} else {\n\t\t\t// Catches errors thrown by calling `requestFn(…)`\n\t\t\ttry {\n\t\t\t\thandleRequest(httpOptions[requestSymbol](options.url, httpOptions, handleResponse));\n\t\t\t} catch (error) {\n\t\t\t\temitError(new RequestError(error, options));\n\t\t\t}\n\t\t}\n\t};\n\n\temitter.retry = error => {\n\t\tlet backoff: number;\n\n\t\tretryCount++;\n\n\t\ttry {\n\t\t\tbackoff = options.retry.calculateDelay({\n\t\t\t\tattemptCount: retryCount,\n\t\t\t\tretryOptions: options.retry,\n\t\t\t\terror,\n\t\t\t\tcomputedValue: calculateRetryDelay({\n\t\t\t\t\tattemptCount: retryCount,\n\t\t\t\t\tretryOptions: options.retry,\n\t\t\t\t\terror,\n\t\t\t\t\tcomputedValue: 0\n\t\t\t\t})\n\t\t\t});\n\t\t} catch (error_) {\n\t\t\temitError(error_);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (backoff) {\n\t\t\tconst retry = async (options: NormalizedOptions): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const hook of options.hooks.beforeRetry) {\n\t\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\t\tawait hook(options, error, retryCount);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait get();\n\t\t\t\t} catch (error_) {\n\t\t\t\t\temitError(error_);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetTimeout(retry, backoff, {...options, forceRefresh: true});\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\temitter.abort = () => {\n\t\temitter.prependListener('request', (request: http.ClientRequest) => {\n\t\t\trequest.abort();\n\t\t});\n\n\t\tif (currentRequest) {\n\t\t\tcurrentRequest.abort();\n\t\t}\n\t};\n\n\t(async () => {\n\t\t// Promises are executed immediately.\n\t\t// If there were no `setImmediate` here,\n\t\t// `promise.json()` would have no effect\n\t\t// as the request would be sent already.\n\t\tawait setImmediateAsync();\n\n\t\ttry {\n\t\t\tfor (const hook of options.hooks.beforeRequest) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait hook(options);\n\t\t\t}\n\n\t\t\tawait get();\n\t\t} catch (error) {\n\t\t\temitError(error);\n\t\t}\n\t})();\n\n\treturn emitter;\n};\n\nexport const proxyEvents = (proxy: EventEmitter | ProxyStream, emitter: RequestAsEventEmitter): void => {\n\tconst events = [\n\t\t'request',\n\t\t'redirect',\n\t\t'uploadProgress',\n\t\t'downloadProgress'\n\t];\n\n\tfor (const event of events) {\n\t\temitter.on(event, (...args: unknown[]) => {\n\t\t\tproxy.emit(event, ...args);\n\t\t});\n\t}\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e16026cd9d5d3a57c28810adce4a91ab98e8df9","contentHash":"b0ceecdf80d375b82fc845e0cd2e24d02c9a42bd7c77c7b79949d925141cc45d"},"/Users/ldlafountaine/code/got/source/calculate-retry-delay.ts":{"path":"/Users/ldlafountaine/code/got/source/calculate-retry-delay.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":30},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":163}},"5":{"start":{"line":6,"column":40},"end":{"line":6,"column":162}},"6":{"start":{"line":7,"column":28},"end":{"line":38,"column":1}},"7":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":17}},"9":{"start":{"line":11,"column":22},"end":{"line":11,"column":73}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"11":{"start":{"line":13,"column":26},"end":{"line":13,"column":116}},"12":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},"14":{"start":{"line":17,"column":4},"end":{"line":35,"column":5}},"15":{"start":{"line":18,"column":29},"end":{"line":18,"column":34}},"16":{"start":{"line":19,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":20,"column":24},"end":{"line":20,"column":63}},"18":{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},"19":{"start":{"line":22,"column":16},"end":{"line":22,"column":81}},"20":{"start":{"line":25,"column":16},"end":{"line":25,"column":30}},"21":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":25}},"23":{"start":{"line":30,"column":12},"end":{"line":30,"column":25}},"24":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"25":{"start":{"line":33,"column":12},"end":{"line":33,"column":21}},"26":{"start":{"line":36,"column":18},"end":{"line":36,"column":37}},"27":{"start":{"line":37,"column":4},"end":{"line":37,"column":54}},"28":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":40},"end":{"line":6,"column":162}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":71},"end":{"line":38,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":40},"end":{"line":6,"column":162}},"type":"binary-expr","locations":[{"start":{"line":6,"column":40},"end":{"line":6,"column":75}},{"start":{"line":6,"column":79},"end":{"line":6,"column":115}},{"start":{"line":6,"column":119},"end":{"line":6,"column":162}}],"line":6},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"2":{"loc":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"type":"binary-expr","locations":[{"start":{"line":12,"column":25},"end":{"line":12,"column":51}},{"start":{"line":12,"column":55},"end":{"line":12,"column":99}}],"line":12},"3":{"loc":{"start":{"line":13,"column":26},"end":{"line":13,"column":116}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":52}},{"start":{"line":13,"column":56},"end":{"line":13,"column":116}}],"line":13},"4":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"5":{"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":55}},"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":18}},{"start":{"line":14,"column":23},"end":{"line":14,"column":36}},{"start":{"line":14,"column":40},"end":{"line":14,"column":54}}],"line":14},"6":{"loc":{"start":{"line":17,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":35,"column":5}},{"start":{"line":17,"column":4},"end":{"line":35,"column":5}}],"line":17},"7":{"loc":{"start":{"line":19,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":31,"column":9}},{"start":{"line":19,"column":8},"end":{"line":31,"column":9}}],"line":19},"8":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":118}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":20}},{"start":{"line":19,"column":24},"end":{"line":19,"column":68}},{"start":{"line":19,"column":72},"end":{"line":19,"column":118}}],"line":19},"9":{"loc":{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},{"start":{"line":21,"column":12},"end":{"line":26,"column":13}}],"line":21},"10":{"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},{"start":{"line":27,"column":12},"end":{"line":29,"column":13}}],"line":27},"11":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":1,"7":3,"8":1,"9":2,"10":2,"11":2,"12":2,"13":0,"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":2,"27":2,"28":1},"f":{"0":4,"1":3},"b":{"0":[4,4,4],"1":[1,2],"2":[2,2],"3":[2,0],"4":[0,2],"5":[2,2,0],"6":[0,2],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/calculate-retry-delay.ts","sources":["/Users/ldlafountaine/code/got/source/calculate-retry-delay.ts"],"names":[],"mappings":";;AAAA,yCAAkC;AAClC,qCAAkE;AAGlE,MAAM,qBAAqB,GAAwB,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAE5E,MAAM,mBAAmB,GAAG,CAAC,KAA2B,EAAuD,EAAE,CAAC,CACjH,KAAK,YAAY,kBAAS,IAAI,KAAK,YAAY,mBAAU,IAAI,KAAK,YAAY,0BAAiB,CAC/F,CAAC;AAEF,MAAM,mBAAmB,GAAkB,CAAC,EAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAC,EAAE,EAAE;IAClF,IAAI,YAAY,GAAG,YAAY,CAAC,KAAK,EAAE;QACtC,OAAO,CAAC,CAAC;KACT;IAED,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACtE,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAChG,MAAM,aAAa,GAAG,mBAAmB,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACjH,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,EAAE;QACpD,OAAO,CAAC,CAAC;KACT;IAED,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;QAC/B,MAAM,EAAC,QAAQ,EAAC,GAAG,KAAK,CAAC;QACzB,IAAI,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC/G,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACpD,IAAI,YAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAClB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;aAClE;iBAAM;gBACN,KAAK,IAAI,IAAI,CAAC;aACd;YAED,IAAI,KAAK,GAAG,YAAY,CAAC,aAAa,EAAE;gBACvC,OAAO,CAAC,CAAC;aACT;YAED,OAAO,KAAK,CAAC;SACb;QAED,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;YAChC,OAAO,CAAC,CAAC;SACT;KACD;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;IAClC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;AACnD,CAAC,CAAC;AAEF,kBAAe,mBAAmB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport {HTTPError, ParseError, MaxRedirectsError} from './errors';\nimport {RetryFunction, RetryObject} from './types';\n\nconst retryAfterStatusCodes: ReadonlySet<number> = new Set([413, 429, 503]);\n\nconst isErrorWithResponse = (error: RetryObject['error']): error is HTTPError | ParseError | MaxRedirectsError => (\n\terror instanceof HTTPError || error instanceof ParseError || error instanceof MaxRedirectsError\n);\n\nconst calculateRetryDelay: RetryFunction = ({attemptCount, retryOptions, error}) => {\n\tif (attemptCount > retryOptions.limit) {\n\t\treturn 0;\n\t}\n\n\tconst hasMethod = retryOptions.methods.includes(error.options.method);\n\tconst hasErrorCode = Reflect.has(error, 'code') && retryOptions.errorCodes.includes(error.code);\n\tconst hasStatusCode = isErrorWithResponse(error) && retryOptions.statusCodes.includes(error.response.statusCode);\n\tif (!hasMethod || (!hasErrorCode && !hasStatusCode)) {\n\t\treturn 0;\n\t}\n\n\tif (isErrorWithResponse(error)) {\n\t\tconst {response} = error;\n\t\tif (response && Reflect.has(response.headers, 'retry-after') && retryAfterStatusCodes.has(response.statusCode)) {\n\t\t\tlet after = Number(response.headers['retry-after']);\n\t\t\tif (is.nan(after)) {\n\t\t\t\tafter = Date.parse(response.headers['retry-after']!) - Date.now();\n\t\t\t} else {\n\t\t\t\tafter *= 1000;\n\t\t\t}\n\n\t\t\tif (after > retryOptions.maxRetryAfter) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn after;\n\t\t}\n\n\t\tif (response.statusCode === 413) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tconst noise = Math.random() * 100;\n\treturn ((2 ** (attemptCount - 1)) * 1000) + noise;\n};\n\nexport default calculateRetryDelay;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ef20bfb6d9d873f4577768011207454b1fd8e464","contentHash":"d206c0bcfbfa07571bc7caf5a2b895ef1709215170b74db8710f60ccceaad5e1"},"/Users/ldlafountaine/code/got/source/get-response.ts":{"path":"/Users/ldlafountaine/code/got/source/get-response.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":27},"end":{"line":3,"column":57}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":40}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":50}},"7":{"start":{"line":9,"column":0},"end":{"line":25,"column":2}},"8":{"start":{"line":11,"column":29},"end":{"line":11,"column":84}},"9":{"start":{"line":12,"column":27},"end":{"line":12,"column":105}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":44}},"11":{"start":{"line":14,"column":25},"end":{"line":15,"column":87}},"12":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":40}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"15":{"start":{"line":20,"column":4},"end":{"line":24,"column":7}},"16":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"17":{"start":{"line":22,"column":12},"end":{"line":22,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":56},"end":{"line":25,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":52},"end":{"line":20,"column":53}},"loc":{"start":{"line":20,"column":61},"end":{"line":24,"column":5}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":29},"end":{"line":11,"column":84}},"type":"binary-expr","locations":[{"start":{"line":11,"column":29},"end":{"line":11,"column":71}},{"start":{"line":11,"column":75},"end":{"line":11,"column":84}}],"line":11},"1":{"loc":{"start":{"line":14,"column":25},"end":{"line":15,"column":87}},"type":"cond-expr","locations":[{"start":{"line":15,"column":36},"end":{"line":15,"column":70}},{"start":{"line":15,"column":73},"end":{"line":15,"column":87}}],"line":14},"2":{"loc":{"start":{"line":14,"column":25},"end":{"line":15,"column":33}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":43}},{"start":{"line":15,"column":8},"end":{"line":15,"column":33}}],"line":14},"3":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},{"start":{"line":16,"column":4},"end":{"line":18,"column":5}}],"line":16},"4":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":155}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":155}}],"line":16},"5":{"loc":{"start":{"line":16,"column":114},"end":{"line":16,"column":152}},"type":"cond-expr","locations":[{"start":{"line":16,"column":145},"end":{"line":16,"column":147}},{"start":{"line":16,"column":150},"end":{"line":16,"column":152}}],"line":16},"6":{"loc":{"start":{"line":16,"column":114},"end":{"line":16,"column":142}},"type":"binary-expr","locations":[{"start":{"line":16,"column":114},"end":{"line":16,"column":125}},{"start":{"line":16,"column":129},"end":{"line":16,"column":142}}],"line":16},"7":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":4,"9":4,"10":4,"11":4,"12":4,"13":0,"14":4,"15":4,"16":0,"17":0},"f":{"0":4,"1":0},"b":{"0":[4,0],"1":[4,0],"2":[4,4],"3":[0,4],"4":[4,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/get-response.ts","sources":["/Users/ldlafountaine/code/got/source/get-response.ts"],"names":[],"mappings":";;AAAA,0DAA2D;AAE3D,gDAAiD;AACjD,iCAAkC;AAElC,+BAA+B;AAC/B,yCAAgD;AAGhD,MAAM,QAAQ,GAAG,gBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAE5C,kBAAe,KAAK,EAAE,QAAyB,EAAE,OAA0B,EAAE,OAAqB,EAAiB,EAAE;;IACpH,MAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,SAAS,CAAC;IACjF,MAAM,cAAc,GAAG,+BAAoB,CAAC,kBAAkB,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;IAE3F,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IAExC,MAAM,WAAW,GAAG,CACnB,OAAO,CAAC,UAAU;QAClB,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,cAA4C,CAAC,CAAC,CAAC,CAAC,cAAc,CAC1F,CAAC;IAErB,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,OAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,uCAAI,EAAE,GAAC,EAAE;QAC7G,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;KAChC;IAED,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAEtC,OAAO,QAAQ,CACd,QAAQ,EACR,cAAc,CACd,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACf,IAAI,KAAK,CAAC,IAAI,KAAK,4BAA4B,EAAE;YAChD,MAAM,KAAK,CAAC;SACZ;IACF,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import decompressResponse = require('decompress-response');\nimport EventEmitter = require('events');\nimport mimicResponse = require('mimic-response');\nimport stream = require('stream');\nimport {IncomingMessage} from 'http';\nimport {promisify} from 'util';\nimport {createProgressStream} from './progress';\nimport {NormalizedOptions} from './types';\n\nconst pipeline = promisify(stream.pipeline);\n\nexport default async (response: IncomingMessage, options: NormalizedOptions, emitter: EventEmitter): Promise<void> => {\n\tconst downloadBodySize = Number(response.headers['content-length']) || undefined;\n\tconst progressStream = createProgressStream('downloadProgress', emitter, downloadBodySize);\n\n\tmimicResponse(response, progressStream);\n\n\tconst newResponse = (\n\t\toptions.decompress &&\n\t\toptions.method !== 'HEAD' ? decompressResponse(progressStream as unknown as IncomingMessage) : progressStream\n\t) as IncomingMessage;\n\n\tif (!options.decompress && ['gzip', 'deflate', 'br'].includes(newResponse.headers['content-encoding'] ?? '')) {\n\t\toptions.responseType = 'buffer';\n\t}\n\n\temitter.emit('response', newResponse);\n\n\treturn pipeline(\n\t\tresponse,\n\t\tprogressStream\n\t).catch(error => {\n\t\tif (error.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n\t\t\tthrow error;\n\t\t}\n\t});\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e6edc3c37d6f4e5a9b43546f2601b735c2519ed","contentHash":"460ec2cd85e50ee15f77ec08e72661aab2f8060b5b4bafbde79e7f9c7ea7c784"},"/Users/ldlafountaine/code/got/source/progress.ts":{"path":"/Users/ldlafountaine/code/got/source/progress.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":40}},"6":{"start":{"line":10,"column":27},"end":{"line":32,"column":6}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":45}},"8":{"start":{"line":13,"column":28},"end":{"line":13,"column":74}},"9":{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},"10":{"start":{"line":16,"column":16},"end":{"line":20,"column":19}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":39}},"12":{"start":{"line":25,"column":12},"end":{"line":29,"column":15}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"14":{"start":{"line":33,"column":4},"end":{"line":37,"column":7}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":26}},"16":{"start":{"line":40,"column":0},"end":{"line":40,"column":52}}},"fnMap":{"0":{"name":"createProgressStream","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":29}},"loc":{"start":{"line":5,"column":57},"end":{"line":39,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":8},"end":{"line":11,"column":9}},"loc":{"start":{"line":11,"column":46},"end":{"line":23,"column":9}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":8},"end":{"line":24,"column":9}},"loc":{"start":{"line":24,"column":24},"end":{"line":31,"column":9}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7},"1":{"loc":{"start":{"line":13,"column":28},"end":{"line":13,"column":74}},"type":"cond-expr","locations":[{"start":{"line":13,"column":41},"end":{"line":13,"column":70}},{"start":{"line":13,"column":73},"end":{"line":13,"column":74}}],"line":13},"2":{"loc":{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},{"start":{"line":15,"column":12},"end":{"line":21,"column":13}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":11,"4":11,"5":0,"6":11,"7":4,"8":4,"9":4,"10":0,"11":4,"12":11,"13":11,"14":11,"15":11,"16":1},"f":{"0":11,"1":4,"2":11},"b":{"0":[0,11],"1":[4,0],"2":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/progress.ts","sources":["/Users/ldlafountaine/code/got/source/progress.ts"],"names":[],"mappings":";;AACA,mCAAoD;AACpD,yCAAkC;AAElC,SAAgB,oBAAoB,CAAC,IAA2C,EAAE,OAAqB,EAAE,UAA4B;IACpI,IAAI,gBAAgB,GAAG,CAAC,CAAC;IAEzB,IAAI,YAAE,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;QAC1B,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;KAChC;IAED,MAAM,cAAc,GAAG,IAAI,kBAAe,CAAC;QAC1C,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ;YACnC,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC;YAEjC,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,gBAAgB,GAAI,UAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3E,2DAA2D;YAC3D,IAAI,OAAO,GAAG,CAAC,EAAE;gBAChB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;oBAClB,OAAO;oBACP,WAAW,EAAE,gBAAgB;oBAC7B,KAAK,EAAE,UAAU;iBACjB,CAAC,CAAC;aACH;YAED,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC;QAED,KAAK,CAAC,QAAQ;YACb,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;gBAClB,OAAO,EAAE,CAAC;gBACV,WAAW,EAAE,gBAAgB;gBAC7B,KAAK,EAAE,UAAU;aACjB,CAAC,CAAC;YAEH,QAAQ,EAAE,CAAC;QACZ,CAAC;KACD,CAAC,CAAC;IAEH,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,WAAW,EAAE,CAAC;QACd,KAAK,EAAE,UAAU;KACjB,CAAC,CAAC;IAEH,OAAO,cAAc,CAAC;AACvB,CAAC;AA3CD,oDA2CC","sourcesContent":["import EventEmitter = require('events');\nimport {Transform as TransformStream} from 'stream';\nimport is from '@sindresorhus/is';\n\nexport function createProgressStream(name: 'downloadProgress' | 'uploadProgress', emitter: EventEmitter, totalBytes?: number | string): TransformStream {\n\tlet transformedBytes = 0;\n\n\tif (is.string(totalBytes)) {\n\t\ttotalBytes = Number(totalBytes);\n\t}\n\n\tconst progressStream = new TransformStream({\n\t\ttransform(chunk, _encoding, callback) {\n\t\t\ttransformedBytes += chunk.length;\n\n\t\t\tconst percent = totalBytes ? transformedBytes / (totalBytes as number) : 0;\n\n\t\t\t// Let `flush()` be responsible for emitting the last event\n\t\t\tif (percent < 1) {\n\t\t\t\temitter.emit(name, {\n\t\t\t\t\tpercent,\n\t\t\t\t\ttransferred: transformedBytes,\n\t\t\t\t\ttotal: totalBytes\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(undefined, chunk);\n\t\t},\n\n\t\tflush(callback) {\n\t\t\temitter.emit(name, {\n\t\t\t\tpercent: 1,\n\t\t\t\ttransferred: transformedBytes,\n\t\t\t\ttotal: totalBytes\n\t\t\t});\n\n\t\t\tcallback();\n\t\t}\n\t});\n\n\temitter.emit(name, {\n\t\tpercent: 0,\n\t\ttransferred: 0,\n\t\ttotal: totalBytes\n\t});\n\n\treturn progressStream;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"85a99e9bbeb336bc95fbbb51783031a7b2f2ac48","contentHash":"5233a19eecb5d51dd7fc84e63a24991c872fba8f4648fc18f94e44e6e18c202f"},"/Users/ldlafountaine/code/got/source/utils/timed-out.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/timed-out.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":22}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":64}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":32}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"10":{"start":{"line":16,"column":0},"end":{"line":125,"column":2}},"11":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":28}},"14":{"start":{"line":21,"column":22},"end":{"line":21,"column":24}},"15":{"start":{"line":22,"column":34},"end":{"line":22,"column":54}},"16":{"start":{"line":23,"column":23},"end":{"line":32,"column":5}},"17":{"start":{"line":25,"column":24},"end":{"line":25,"column":65}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":85}},"19":{"start":{"line":27,"column":23},"end":{"line":29,"column":9}},"20":{"start":{"line":28,"column":12},"end":{"line":28,"column":34}},"21":{"start":{"line":30,"column":8},"end":{"line":30,"column":31}},"22":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"23":{"start":{"line":33,"column":31},"end":{"line":33,"column":38}},"24":{"start":{"line":34,"column":27},"end":{"line":41,"column":5}},"25":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"26":{"start":{"line":37,"column":12},"end":{"line":37,"column":44}},"27":{"start":{"line":39,"column":8},"end":{"line":39,"column":24}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":62}},"29":{"start":{"line":42,"column":27},"end":{"line":47,"column":5}},"30":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"31":{"start":{"line":44,"column":12},"end":{"line":44,"column":21}},"32":{"start":{"line":46,"column":8},"end":{"line":46,"column":22}},"33":{"start":{"line":48,"column":4},"end":{"line":54,"column":7}},"34":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"35":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"36":{"start":{"line":52,"column":12},"end":{"line":52,"column":24}},"37":{"start":{"line":55,"column":4},"end":{"line":55,"column":42}},"38":{"start":{"line":56,"column":4},"end":{"line":58,"column":7}},"39":{"start":{"line":57,"column":8},"end":{"line":57,"column":46}},"40":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"41":{"start":{"line":60,"column":8},"end":{"line":60,"column":62}},"42":{"start":{"line":62,"column":4},"end":{"line":73,"column":5}},"43":{"start":{"line":63,"column":37},"end":{"line":65,"column":9}},"44":{"start":{"line":64,"column":12},"end":{"line":64,"column":52}},"45":{"start":{"line":66,"column":8},"end":{"line":66,"column":64}},"46":{"start":{"line":70,"column":8},"end":{"line":72,"column":11}},"47":{"start":{"line":71,"column":12},"end":{"line":71,"column":68}},"48":{"start":{"line":74,"column":4},"end":{"line":117,"column":7}},"49":{"start":{"line":77,"column":31},"end":{"line":77,"column":38}},"50":{"start":{"line":105,"column":8},"end":{"line":116,"column":9}},"51":{"start":{"line":106,"column":32},"end":{"line":106,"column":85}},"52":{"start":{"line":106,"column":38},"end":{"line":106,"column":85}},"53":{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},"54":{"start":{"line":119,"column":8},"end":{"line":122,"column":11}},"55":{"start":{"line":120,"column":34},"end":{"line":120,"column":89}},"56":{"start":{"line":121,"column":12},"end":{"line":121,"column":53}},"57":{"start":{"line":124,"column":4},"end":{"line":124,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":14}},"loc":{"start":{"line":6,"column":19},"end":{"line":6,"column":22}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":34},"end":{"line":13,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":18},"end":{"line":16,"column":19}},"loc":{"start":{"line":16,"column":48},"end":{"line":125,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":23},"end":{"line":23,"column":24}},"loc":{"start":{"line":23,"column":51},"end":{"line":32,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":23},"end":{"line":27,"column":24}},"loc":{"start":{"line":27,"column":29},"end":{"line":29,"column":9}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":27},"end":{"line":34,"column":28}},"loc":{"start":{"line":34,"column":45},"end":{"line":41,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":27},"end":{"line":42,"column":28}},"loc":{"start":{"line":42,"column":33},"end":{"line":47,"column":5}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":48,"column":26},"end":{"line":48,"column":27}},"loc":{"start":{"line":48,"column":35},"end":{"line":54,"column":5}},"line":48},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":30},"end":{"line":56,"column":31}},"loc":{"start":{"line":56,"column":44},"end":{"line":58,"column":5}},"line":56},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":37},"end":{"line":63,"column":38}},"loc":{"start":{"line":63,"column":43},"end":{"line":65,"column":9}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":29},"end":{"line":72,"column":9}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":28},"end":{"line":74,"column":29}},"loc":{"start":{"line":74,"column":40},"end":{"line":117,"column":5}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":106,"column":32},"end":{"line":106,"column":33}},"loc":{"start":{"line":106,"column":38},"end":{"line":106,"column":85}},"line":106},"13":{"name":"(anonymous_13)","decl":{"start":{"line":119,"column":41},"end":{"line":119,"column":42}},"loc":{"start":{"line":119,"column":47},"end":{"line":122,"column":9}},"line":119}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}],"line":17},"1":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":84}},"type":"cond-expr","locations":[{"start":{"line":26,"column":64},"end":{"line":26,"column":70}},{"start":{"line":26,"column":73},"end":{"line":26,"column":84}}],"line":26},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":61}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":44}},{"start":{"line":26,"column":48},"end":{"line":26,"column":61}}],"line":26},"3":{"loc":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},{"start":{"line":35,"column":8},"end":{"line":38,"column":9}}],"line":35},"4":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"5":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":4},"end":{"line":61,"column":5}}],"line":59},"6":{"loc":{"start":{"line":62,"column":4},"end":{"line":73,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":73,"column":5}},{"start":{"line":62,"column":4},"end":{"line":73,"column":5}}],"line":62},"7":{"loc":{"start":{"line":105,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":116,"column":9}},{"start":{"line":105,"column":8},"end":{"line":116,"column":9}}],"line":105},"8":{"loc":{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},{"start":{"line":118,"column":4},"end":{"line":123,"column":5}}],"line":118}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":7,"12":0,"13":7,"14":7,"15":7,"16":7,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":7,"24":7,"25":0,"26":0,"27":0,"28":0,"29":7,"30":10,"31":0,"32":10,"33":7,"34":3,"35":3,"36":0,"37":7,"38":7,"39":4,"40":7,"41":0,"42":7,"43":0,"44":0,"45":0,"46":0,"47":0,"48":7,"49":7,"50":7,"51":0,"52":0,"53":7,"54":0,"55":0,"56":0,"57":7},"f":{"0":0,"1":0,"2":7,"3":0,"4":0,"5":0,"6":10,"7":3,"8":4,"9":0,"10":0,"11":7,"12":0,"13":0},"b":{"0":[0,7],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,3],"5":[0,7],"6":[0,7],"7":[0,7],"8":[0,7]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/timed-out.ts","sources":["/Users/ldlafountaine/code/got/source/utils/timed-out.ts"],"names":[],"mappings":"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","sourcesContent":["import net = require('net');\nimport {ClientRequest, IncomingMessage} from 'http';\nimport unhandler from './unhandle';\n\nconst reentry: unique symbol = Symbol('reentry');\nconst noop = (): void => {};\n\ninterface TimedOutOptions {\n\thost?: string;\n\thostname?: string;\n\tprotocol?: string;\n}\n\nexport interface Delays {\n\tlookup?: number;\n\tconnect?: number;\n\tsecureConnect?: number;\n\tsocket?: number;\n\tresponse?: number;\n\tsend?: number;\n\trequest?: number;\n}\n\nexport type ErrorCode =\n\t| 'ETIMEDOUT'\n\t| 'ECONNRESET'\n\t| 'EADDRINUSE'\n\t| 'ECONNREFUSED'\n\t| 'EPIPE'\n\t| 'ENOTFOUND'\n\t| 'ENETUNREACH'\n\t| 'EAI_AGAIN';\n\nexport class TimeoutError extends Error {\n\tcode: ErrorCode;\n\n\tconstructor(threshold: number, public event: string) {\n\t\tsuper(`Timeout awaiting '${event}' for ${threshold}ms`);\n\n\t\tthis.name = 'TimeoutError';\n\t\tthis.code = 'ETIMEDOUT';\n\t}\n}\n\nexport default (request: ClientRequest, delays: Delays, options: TimedOutOptions): () => void => {\n\tif (Reflect.has(request, reentry)) {\n\t\treturn noop;\n\t}\n\n\trequest[reentry] = true;\n\tconst cancelers: Array<typeof noop> = [];\n\tconst {once, unhandleAll} = unhandler();\n\n\tconst addTimeout = (delay: number, callback: (delay: number, event: string) => void, event: string): (typeof noop) => {\n\t\tconst timeout = setTimeout(callback, delay, delay, event) as unknown as NodeJS.Timeout;\n\n\t\ttimeout.unref?.();\n\n\t\tconst cancel = (): void => {\n\t\t\tclearTimeout(timeout);\n\t\t};\n\n\t\tcancelers.push(cancel);\n\n\t\treturn cancel;\n\t};\n\n\tconst {host, hostname} = options;\n\n\tconst timeoutHandler = (delay: number, event: string): void => {\n\t\tif (request.socket) {\n\t\t\t// @ts-ignore We do not want the `socket hang up` error\n\t\t\trequest.socket._hadError = true;\n\t\t}\n\n\t\trequest.abort();\n\t\trequest.emit('error', new TimeoutError(delay, event));\n\t};\n\n\tconst cancelTimeouts = (): void => {\n\t\tfor (const cancel of cancelers) {\n\t\t\tcancel();\n\t\t}\n\n\t\tunhandleAll();\n\t};\n\n\trequest.once('error', error => {\n\t\tcancelTimeouts();\n\n\t\t// Save original behavior\n\t\tif (request.listenerCount('error') === 0) {\n\t\t\tthrow error;\n\t\t}\n\t});\n\n\trequest.once('abort', cancelTimeouts);\n\n\tonce(request, 'response', (response: IncomingMessage): void => {\n\t\tonce(response, 'end', cancelTimeouts);\n\t});\n\n\tif (typeof delays.request !== 'undefined') {\n\t\taddTimeout(delays.request, timeoutHandler, 'request');\n\t}\n\n\tif (typeof delays.socket !== 'undefined') {\n\t\tconst socketTimeoutHandler = (): void => {\n\t\t\ttimeoutHandler(delays.socket!, 'socket');\n\t\t};\n\n\t\trequest.setTimeout(delays.socket, socketTimeoutHandler);\n\n\t\t// `request.setTimeout(0)` causes a memory leak.\n\t\t// We can just remove the listener and forget about the timer - it's unreffed.\n\t\t// See https://github.com/sindresorhus/got/issues/690\n\t\tcancelers.push(() => {\n\t\t\trequest.removeListener('timeout', socketTimeoutHandler);\n\t\t});\n\t}\n\n\tonce(request, 'socket', (socket: net.Socket): void => {\n\t\t// @ts-ignore Node typings doesn't have this property\n\t\tconst {socketPath} = request;\n\n\t\t/* istanbul ignore next: hard to test */\n\t\tif (socket.connecting) {\n\t\t\tconst hasPath = Boolean(socketPath ?? net.isIP(hostname ?? host ?? '') !== 0);\n\n\t\t\tif (typeof delays.lookup !== 'undefined' && !hasPath && typeof (socket.address() as net.AddressInfo).address === 'undefined') {\n\t\t\t\tconst cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n\t\t\t\tonce(socket, 'lookup', cancelTimeout);\n\t\t\t}\n\n\t\t\tif (typeof delays.connect !== 'undefined') {\n\t\t\t\tconst timeConnect = (): (() => void) => addTimeout(delays.connect!, timeoutHandler, 'connect');\n\n\t\t\t\tif (hasPath) {\n\t\t\t\t\tonce(socket, 'connect', timeConnect());\n\t\t\t\t} else {\n\t\t\t\t\tonce(socket, 'lookup', (error: Error): void => {\n\t\t\t\t\t\tif (error === null) {\n\t\t\t\t\t\t\tonce(socket, 'connect', timeConnect());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof delays.secureConnect !== 'undefined' && options.protocol === 'https:') {\n\t\t\t\tonce(socket, 'connect', (): void => {\n\t\t\t\t\tconst cancelTimeout = addTimeout(delays.secureConnect!, timeoutHandler, 'secureConnect');\n\t\t\t\t\tonce(socket, 'secureConnect', cancelTimeout);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (typeof delays.send !== 'undefined') {\n\t\t\tconst timeRequest = (): (() => void) => addTimeout(delays.send!, timeoutHandler, 'send');\n\t\t\t/* istanbul ignore next: hard to test */\n\t\t\tif (socket.connecting) {\n\t\t\t\tonce(socket, 'connect', (): void => {\n\t\t\t\t\tonce(request, 'upload-complete', timeRequest());\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tonce(request, 'upload-complete', timeRequest());\n\t\t\t}\n\t\t}\n\t});\n\n\tif (typeof delays.response !== 'undefined') {\n\t\tonce(request, 'upload-complete', (): void => {\n\t\t\tconst cancelTimeout = addTimeout(delays.response!, timeoutHandler, 'response');\n\t\t\tonce(request, 'response', cancelTimeout);\n\t\t});\n\t}\n\n\treturn cancelTimeouts;\n};\n\ndeclare module 'http' {\n\tinterface ClientRequest {\n\t\t[reentry]: boolean;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d7ec2536f2303ec62455c8166126a3fd577cf23b","contentHash":"8490a17d76f561abdedb5b9c44cb2fc82457b688ffab2d1b8cd58bbdfa580084"},"/Users/ldlafountaine/code/got/source/utils/unhandle.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/unhandle.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":22,"column":2}},"2":{"start":{"line":8,"column":21},"end":{"line":8,"column":23}},"3":{"start":{"line":9,"column":4},"end":{"line":21,"column":6}},"4":{"start":{"line":11,"column":12},"end":{"line":11,"column":35}},"5":{"start":{"line":12,"column":12},"end":{"line":12,"column":49}},"6":{"start":{"line":15,"column":12},"end":{"line":18,"column":13}},"7":{"start":{"line":16,"column":46},"end":{"line":16,"column":53}},"8":{"start":{"line":17,"column":16},"end":{"line":17,"column":49}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":18},"end":{"line":7,"column":19}},"loc":{"start":{"line":7,"column":24},"end":{"line":22,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":8},"end":{"line":10,"column":9}},"loc":{"start":{"line":10,"column":32},"end":{"line":13,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":8},"end":{"line":14,"column":9}},"loc":{"start":{"line":14,"column":22},"end":{"line":20,"column":9}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":7,"3":7,"4":18,"5":18,"6":10,"7":18,"8":18,"9":10},"f":{"0":7,"1":18,"2":10},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/unhandle.ts","sources":["/Users/ldlafountaine/code/got/source/utils/unhandle.ts"],"names":[],"mappings":";;AAiBA,iEAAiE;AACjE,wDAAwD;AACxD,iFAAiF;AACjF,0EAA0E;AAC1E,kBAAe,GAAc,EAAE;IAC9B,MAAM,QAAQ,GAAc,EAAE,CAAC;IAE/B,OAAO;QACN,IAAI,CAAC,MAAc,EAAE,KAAY,EAAE,EAAM;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvB,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACpC,CAAC;QAED,WAAW;YACV,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC/B,MAAM,EAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAC,GAAG,OAAO,CAAC;gBACpC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;aACjC;YAED,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,CAAC;KACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import EventEmitter = require('events');\n\ntype Origin = EventEmitter;\ntype Event = string | symbol;\ntype Fn = (...args: any[]) => void;\n\ninterface Handler {\n\torigin: Origin;\n\tevent: Event;\n\tfn: Fn;\n}\n\ninterface Unhandler {\n\tonce: (origin: Origin, event: Event, fn: Fn) => void;\n\tunhandleAll: () => void;\n}\n\n// When attaching listeners, it's very easy to forget about them.\n// Especially if you do error handling and set timeouts.\n// So instead of checking if it's proper to throw an error on every timeout ever,\n// use this simple tool which will remove all listeners you have attached.\nexport default (): Unhandler => {\n\tconst handlers: Handler[] = [];\n\n\treturn {\n\t\tonce(origin: Origin, event: Event, fn: Fn) {\n\t\t\torigin.once(event, fn);\n\t\t\thandlers.push({origin, event, fn});\n\t\t},\n\n\t\tunhandleAll() {\n\t\t\tfor (const handler of handlers) {\n\t\t\t\tconst {origin, event, fn} = handler;\n\t\t\t\torigin.removeListener(event, fn);\n\t\t\t}\n\n\t\t\thandlers.length = 0;\n\t\t}\n\t};\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"41b706e12beb08ce7128a6b936b582063b68f1e1","contentHash":"2a75c34cfe188a0c1f454e6eea6695eecb5de81aa031ea4672dbeb5ba25605d5"},"/Users/ldlafountaine/code/got/source/utils/url-to-options.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/url-to-options.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":14}},"4":{"start":{"line":7,"column":20},"end":{"line":16,"column":5}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":40}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":69}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":27},"end":{"line":24,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":126}},"type":"cond-expr","locations":[{"start":{"line":9,"column":86},"end":{"line":9,"column":111}},{"start":{"line":9,"column":114},"end":{"line":9,"column":126}}],"line":9},"1":{"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":83}},"type":"binary-expr","locations":[{"start":{"line":9,"column":18},"end":{"line":9,"column":51}},{"start":{"line":9,"column":55},"end":{"line":9,"column":83}}],"line":9},"2":{"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":35}},"type":"binary-expr","locations":[{"start":{"line":15,"column":17},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":35}}],"line":15},"3":{"loc":{"start":{"line":15,"column":38},"end":{"line":15,"column":54}},"type":"binary-expr","locations":[{"start":{"line":15,"column":38},"end":{"line":15,"column":48}},{"start":{"line":15,"column":52},"end":{"line":15,"column":54}}],"line":15},"4":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}],"line":17},"5":{"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":62}},"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":37}},{"start":{"line":17,"column":41},"end":{"line":17,"column":62}}],"line":17},"6":{"loc":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},{"start":{"line":20,"column":4},"end":{"line":22,"column":5}}],"line":20},"7":{"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":36}},"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":20}},{"start":{"line":20,"column":24},"end":{"line":20,"column":36}}],"line":20},"8":{"loc":{"start":{"line":21,"column":26},"end":{"line":21,"column":44}},"type":"binary-expr","locations":[{"start":{"line":21,"column":26},"end":{"line":21,"column":38}},{"start":{"line":21,"column":42},"end":{"line":21,"column":44}}],"line":21},"9":{"loc":{"start":{"line":21,"column":48},"end":{"line":21,"column":66}},"type":"binary-expr","locations":[{"start":{"line":21,"column":48},"end":{"line":21,"column":60}},{"start":{"line":21,"column":64},"end":{"line":21,"column":66}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/url-to-options.ts","sources":["/Users/ldlafountaine/code/got/source/utils/url-to-options.ts"],"names":[],"mappings":";;AACA,yCAAkC;AAiBlC,kBAAe,CAAC,GAA6B,EAAoB,EAAE;IAClE,cAAc;IACd,GAAG,GAAG,GAAU,CAAC;IAEjB,MAAM,OAAO,GAAqB;QACjC,QAAQ,EAAE,GAAG,CAAC,QAAQ;QACtB,QAAQ,EAAE,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ;QAC5G,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,QAAQ,EAAE,GAAG,CAAC,QAAQ;QACtB,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,IAAI,EAAE,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,EAAE,EAAE;KAChD,CAAC;IAEF,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACjD,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAChC;IAED,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,EAAE;QACjC,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,IAAI,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;KAC7D;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import {URL, UrlWithStringQuery} from 'url';\nimport is from '@sindresorhus/is';\n\n// TODO: Deprecate legacy URL at some point\n\nexport interface LegacyURLOptions {\n\tprotocol: string;\n\thostname: string;\n\thost: string;\n\thash: string | null;\n\tsearch: string | null;\n\tpathname: string;\n\thref: string;\n\tpath: string;\n\tport?: number;\n\tauth?: string;\n}\n\nexport default (url: URL | UrlWithStringQuery): LegacyURLOptions => {\n\t// Cast to URL\n\turl = url as URL;\n\n\tconst options: LegacyURLOptions = {\n\t\tprotocol: url.protocol,\n\t\thostname: is.string(url.hostname) && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n\t\thost: url.host,\n\t\thash: url.hash,\n\t\tsearch: url.search,\n\t\tpathname: url.pathname,\n\t\thref: url.href,\n\t\tpath: `${url.pathname || ''}${url.search || ''}`\n\t};\n\n\tif (is.string(url.port) && url.port.length !== 0) {\n\t\toptions.port = Number(url.port);\n\t}\n\n\tif (url.username || url.password) {\n\t\toptions.auth = `${url.username || ''}:${url.password || ''}`;\n\t}\n\n\treturn options;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"008337fa785af09c436dcfd390377b210453dd1d","contentHash":"45ff587fc295d93d7587ac432efa4503b7696405c5d48aec87daca947b8911e0"},"/Users/ldlafountaine/code/got/source/as-stream.ts":{"path":"/Users/ldlafountaine/code/got/source/as-stream.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":35},"end":{"line":8,"column":72}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"8":{"start":{"line":13,"column":18},"end":{"line":13,"column":44}},"9":{"start":{"line":14,"column":19},"end":{"line":14,"column":45}},"10":{"start":{"line":15,"column":18},"end":{"line":15,"column":42}},"11":{"start":{"line":16,"column":18},"end":{"line":16,"column":27}},"12":{"start":{"line":17,"column":21},"end":{"line":17,"column":26}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":43}},"14":{"start":{"line":18,"column":41},"end":{"line":18,"column":42}},"15":{"start":{"line":19,"column":4},"end":{"line":33,"column":5}},"16":{"start":{"line":20,"column":8},"end":{"line":23,"column":10}},"17":{"start":{"line":21,"column":12},"end":{"line":21,"column":28}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":110}},"19":{"start":{"line":25,"column":9},"end":{"line":33,"column":5}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":29}},"21":{"start":{"line":29,"column":8},"end":{"line":32,"column":10}},"22":{"start":{"line":30,"column":12},"end":{"line":30,"column":28}},"23":{"start":{"line":31,"column":12},"end":{"line":31,"column":95}},"24":{"start":{"line":34,"column":20},"end":{"line":34,"column":63}},"25":{"start":{"line":35,"column":22},"end":{"line":46,"column":5}},"26":{"start":{"line":36,"column":8},"end":{"line":45,"column":9}},"27":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"28":{"start":{"line":39,"column":16},"end":{"line":39,"column":42}},"29":{"start":{"line":41,"column":12},"end":{"line":41,"column":39}},"30":{"start":{"line":44,"column":12},"end":{"line":44,"column":40}},"31":{"start":{"line":48,"column":4},"end":{"line":51,"column":6}},"32":{"start":{"line":49,"column":8},"end":{"line":49,"column":24}},"33":{"start":{"line":50,"column":8},"end":{"line":50,"column":24}},"34":{"start":{"line":52,"column":4},"end":{"line":90,"column":7}},"35":{"start":{"line":53,"column":44},"end":{"line":53,"column":52}},"36":{"start":{"line":54,"column":8},"end":{"line":54,"column":40}},"37":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"38":{"start":{"line":56,"column":12},"end":{"line":56,"column":65}},"39":{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},"40":{"start":{"line":60,"column":25},"end":{"line":60,"column":36}},"41":{"start":{"line":61,"column":12},"end":{"line":65,"column":14}},"42":{"start":{"line":62,"column":16},"end":{"line":62,"column":34}},"43":{"start":{"line":63,"column":16},"end":{"line":63,"column":35}},"44":{"start":{"line":64,"column":16},"end":{"line":64,"column":47}},"45":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"46":{"start":{"line":68,"column":12},"end":{"line":68,"column":48}},"47":{"start":{"line":70,"column":8},"end":{"line":74,"column":11}},"48":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"49":{"start":{"line":72,"column":16},"end":{"line":72,"column":66}},"50":{"start":{"line":75,"column":8},"end":{"line":88,"column":9}},"51":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"52":{"start":{"line":77,"column":16},"end":{"line":77,"column":25}},"53":{"start":{"line":79,"column":12},"end":{"line":86,"column":13}},"54":{"start":{"line":82,"column":34},"end":{"line":82,"column":88}},"55":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"56":{"start":{"line":84,"column":20},"end":{"line":84,"column":54}},"57":{"start":{"line":87,"column":12},"end":{"line":87,"column":57}},"58":{"start":{"line":89,"column":8},"end":{"line":89,"column":41}},"59":{"start":{"line":91,"column":4},"end":{"line":91,"column":59}},"60":{"start":{"line":92,"column":4},"end":{"line":92,"column":63}},"61":{"start":{"line":92,"column":35},"end":{"line":92,"column":61}},"62":{"start":{"line":93,"column":17},"end":{"line":93,"column":39}},"63":{"start":{"line":94,"column":19},"end":{"line":94,"column":43}},"64":{"start":{"line":95,"column":4},"end":{"line":104,"column":6}},"65":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"66":{"start":{"line":97,"column":12},"end":{"line":97,"column":86}},"67":{"start":{"line":99,"column":8},"end":{"line":99,"column":35}},"68":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"69":{"start":{"line":101,"column":12},"end":{"line":101,"column":35}},"70":{"start":{"line":103,"column":8},"end":{"line":103,"column":27}},"71":{"start":{"line":105,"column":4},"end":{"line":108,"column":6}},"72":{"start":{"line":106,"column":8},"end":{"line":106,"column":29}},"73":{"start":{"line":107,"column":8},"end":{"line":107,"column":30}},"74":{"start":{"line":109,"column":4},"end":{"line":116,"column":7}},"75":{"start":{"line":110,"column":8},"end":{"line":115,"column":9}},"76":{"start":{"line":111,"column":12},"end":{"line":114,"column":14}},"77":{"start":{"line":117,"column":4},"end":{"line":117,"column":34}},"78":{"start":{"line":118,"column":4},"end":{"line":118,"column":17}},"79":{"start":{"line":120,"column":0},"end":{"line":120,"column":27}}},"fnMap":{"0":{"name":"asStream","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":17}},"loc":{"start":{"line":12,"column":27},"end":{"line":119,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":35},"end":{"line":18,"column":36}},"loc":{"start":{"line":18,"column":41},"end":{"line":18,"column":42}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":22},"end":{"line":20,"column":23}},"loc":{"start":{"line":20,"column":28},"end":{"line":23,"column":9}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},"loc":{"start":{"line":29,"column":28},"end":{"line":32,"column":9}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},"loc":{"start":{"line":35,"column":39},"end":{"line":46,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":21},"end":{"line":48,"column":22}},"loc":{"start":{"line":48,"column":42},"end":{"line":51,"column":5}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":27},"end":{"line":52,"column":28}},"loc":{"start":{"line":52,"column":41},"end":{"line":90,"column":5}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":26},"end":{"line":61,"column":27}},"loc":{"start":{"line":61,"column":39},"end":{"line":65,"column":13}},"line":61},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":42},"end":{"line":70,"column":43}},"loc":{"start":{"line":70,"column":51},"end":{"line":74,"column":9}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":92,"column":24},"end":{"line":92,"column":25}},"loc":{"start":{"line":92,"column":35},"end":{"line":92,"column":61}},"line":92},"10":{"name":"(anonymous_10)","decl":{"start":{"line":95,"column":17},"end":{"line":95,"column":18}},"loc":{"start":{"line":95,"column":43},"end":{"line":104,"column":5}},"line":95},"11":{"name":"(anonymous_11)","decl":{"start":{"line":105,"column":19},"end":{"line":105,"column":20}},"loc":{"start":{"line":105,"column":29},"end":{"line":108,"column":5}},"line":105},"12":{"name":"(anonymous_12)","decl":{"start":{"line":109,"column":21},"end":{"line":109,"column":22}},"loc":{"start":{"line":109,"column":31},"end":{"line":116,"column":5}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":33,"column":5}},{"start":{"line":19,"column":4},"end":{"line":33,"column":5}}],"line":19},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":52}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},{"start":{"line":19,"column":24},"end":{"line":19,"column":36}},{"start":{"line":19,"column":40},"end":{"line":19,"column":52}}],"line":19},"2":{"loc":{"start":{"line":25,"column":9},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":33,"column":5}},{"start":{"line":25,"column":9},"end":{"line":33,"column":5}}],"line":25},"3":{"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":96}},"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":38}},{"start":{"line":25,"column":42},"end":{"line":25,"column":66}},{"start":{"line":25,"column":70},"end":{"line":25,"column":96}}],"line":25},"4":{"loc":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},{"start":{"line":55,"column":8},"end":{"line":58,"column":9}}],"line":55},"5":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":99}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":35}},{"start":{"line":55,"column":39},"end":{"line":55,"column":57}},{"start":{"line":55,"column":62},"end":{"line":55,"column":78}},{"start":{"line":55,"column":82},"end":{"line":55,"column":98}}],"line":55},"6":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{"line":67,"column":8},"end":{"line":69,"column":9}}],"line":67},"7":{"loc":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},{"start":{"line":71,"column":12},"end":{"line":73,"column":13}}],"line":71},"8":{"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":60}},"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":21}},{"start":{"line":71,"column":25},"end":{"line":71,"column":60}}],"line":71},"9":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{"line":76,"column":12},"end":{"line":78,"column":13}}],"line":76},"10":{"loc":{"start":{"line":82,"column":34},"end":{"line":82,"column":88}},"type":"cond-expr","locations":[{"start":{"line":82,"column":55},"end":{"line":82,"column":81}},{"start":{"line":82,"column":84},"end":{"line":82,"column":88}}],"line":82},"11":{"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},{"start":{"line":83,"column":16},"end":{"line":85,"column":17}}],"line":83},"12":{"loc":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},{"start":{"line":96,"column":8},"end":{"line":98,"column":9}}],"line":96},"13":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"14":{"loc":{"start":{"line":110,"column":8},"end":{"line":115,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":115,"column":9}},{"start":{"line":110,"column":8},"end":{"line":115,"column":9}}],"line":110}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/as-stream.ts","sources":["/Users/ldlafountaine/code/got/source/as-stream.ts"],"names":[],"mappings":"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","sourcesContent":["import duplexer3 = require('duplexer3');\nimport stream = require('stream');\nimport {IncomingMessage, ServerResponse} from 'http';\nimport {Duplex as DuplexStream, PassThrough as PassThroughStream} from 'stream';\nimport {HTTPError, ReadError} from './errors';\nimport requestAsEventEmitter, {proxyEvents} from './request-as-event-emitter';\nimport {GeneralError, GotEvents, NormalizedOptions, Response} from './types';\n\nexport class ProxyStream<T = unknown> extends DuplexStream implements GotEvents<ProxyStream<T>> {\n\tisFromCache?: boolean;\n}\n\nexport default function asStream<T>(options: NormalizedOptions): ProxyStream<T> {\n\tconst input = new PassThroughStream();\n\tconst output = new PassThroughStream();\n\tconst proxy = duplexer3(input, output) as ProxyStream;\n\tconst piped = new Set<ServerResponse>();\n\tlet isFinished = false;\n\n\toptions.retry.calculateDelay = () => 0;\n\n\tif (options.body || options.json || options.form) {\n\t\tproxy.write = () => {\n\t\t\tproxy.destroy();\n\t\t\tthrow new Error('Got\\'s stream is not writable when the `body`, `json` or `form` option is used');\n\t\t};\n\t} else if (options.method === 'POST' || options.method === 'PUT' || options.method === 'PATCH') {\n\t\toptions.body = input;\n\t} else {\n\t\tproxy.write = () => {\n\t\t\tproxy.destroy();\n\t\t\tthrow new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n\t\t};\n\t}\n\n\tconst emitter = requestAsEventEmitter(options);\n\n\tconst emitError = async (error: GeneralError): Promise<void> => {\n\t\ttry {\n\t\t\tfor (const hook of options.hooks.beforeError) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\terror = await hook(error);\n\t\t\t}\n\n\t\t\tproxy.emit('error', error);\n\t\t} catch (error_) {\n\t\t\tproxy.emit('error', error_);\n\t\t}\n\t};\n\n\t// Cancels the request\n\tproxy._destroy = (error, callback) => {\n\t\tcallback(error);\n\t\temitter.abort();\n\t};\n\n\temitter.on('response', (response: Response) => {\n\t\tconst {statusCode, isFromCache} = response;\n\t\tproxy.isFromCache = isFromCache;\n\n\t\tif (options.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {\n\t\t\temitError(new HTTPError(response, options));\n\t\t\treturn;\n\t\t}\n\n\t\t{\n\t\t\tconst read = proxy._read;\n\t\t\tproxy._read = (...args) => {\n\t\t\t\tisFinished = true;\n\n\t\t\t\tproxy._read = read;\n\t\t\t\treturn read.apply(proxy, args);\n\t\t\t};\n\t\t}\n\n\t\tif (options.encoding) {\n\t\t\tproxy.setEncoding(options.encoding);\n\t\t}\n\n\t\tstream.pipeline(\n\t\t\tresponse,\n\t\t\toutput,\n\t\t\terror => {\n\t\t\t\tif (error && error.message !== 'Premature close') {\n\t\t\t\t\temitError(new ReadError(error, options));\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tfor (const destination of piped) {\n\t\t\tif (destination.headersSent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const [key, value] of Object.entries(response.headers)) {\n\t\t\t\t// Got gives *decompressed* data. Overriding `content-encoding` header would result in an error.\n\t\t\t\t// It's not possible to decompress already decompressed data, is it?\n\t\t\t\tconst isAllowed = options.decompress ? key !== 'content-encoding' : true;\n\t\t\t\tif (isAllowed) {\n\t\t\t\t\tdestination.setHeader(key, value!);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdestination.statusCode = response.statusCode;\n\t\t}\n\n\t\tproxy.emit('response', response);\n\t});\n\n\tproxyEvents(proxy, emitter);\n\temitter.on('error', (error: GeneralError) => proxy.emit('error', error));\n\n\tconst pipe = proxy.pipe.bind(proxy);\n\tconst unpipe = proxy.unpipe.bind(proxy);\n\n\tproxy.pipe = (destination, options) => {\n\t\tif (isFinished) {\n\t\t\tthrow new Error('Failed to pipe. The response has been emitted already.');\n\t\t}\n\n\t\tpipe(destination, options);\n\n\t\tif (destination instanceof ServerResponse) {\n\t\t\tpiped.add(destination);\n\t\t}\n\n\t\treturn destination;\n\t};\n\n\tproxy.unpipe = stream => {\n\t\tpiped.delete(stream as ServerResponse);\n\t\treturn unpipe(stream);\n\t};\n\n\tproxy.on('pipe', source => {\n\t\tif (source instanceof IncomingMessage) {\n\t\t\toptions.headers = {\n\t\t\t\t...source.headers,\n\t\t\t\t...options.headers\n\t\t\t};\n\t\t}\n\t});\n\n\tproxy.isFromCache = undefined;\n\n\treturn proxy;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e85fcc033b4c81f338cb84274be95b01cff3045","contentHash":"2cd0a1afb729e9ce3526ade58a014d317688c8063ad4d851364be4afc5239f74"},"/Users/ldlafountaine/code/got/source/utils/deep-freeze.ts":{"path":"/Users/ldlafountaine/code/got/source/utils/deep-freeze.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"4":{"start":{"line":7,"column":12},"end":{"line":7,"column":30}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}}},"fnMap":{"0":{"name":"deepFreeze","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":28},"end":{"line":11,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":6,"column":12},"end":{"line":6,"column":72}},"type":"binary-expr","locations":[{"start":{"line":6,"column":12},"end":{"line":6,"column":43}},{"start":{"line":6,"column":47},"end":{"line":6,"column":72}}],"line":6}},"s":{"0":1,"1":1,"2":35,"3":123,"4":33,"5":35,"6":1},"f":{"0":35},"b":{"0":[33,90],"1":[123,112]},"inputSourceMap":{"version":3,"file":"/Users/ldlafountaine/code/got/source/utils/deep-freeze.ts","sources":["/Users/ldlafountaine/code/got/source/utils/deep-freeze.ts"],"names":[],"mappings":";;AAAA,yCAAkC;AAElC,SAAwB,UAAU,CAAmB,MAAS;IAC7D,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QAC1C,IAAI,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,YAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC7C,UAAU,CAAC,KAAK,CAAC,CAAC;SAClB;KACD;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B,CAAC;AARD,6BAQC","sourcesContent":["import is from '@sindresorhus/is';\n\nexport default function deepFreeze<T extends object>(object: T): Readonly<T> {\n\tfor (const value of Object.values(object)) {\n\t\tif (is.plainObject(value) || is.array(value)) {\n\t\t\tdeepFreeze(value);\n\t\t}\n\t}\n\n\treturn Object.freeze(object);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a5ee688bf3d59d1706f34820c8f68c513cabc2f8","contentHash":"c409c48437a730a021bf3ead05f133308c50273b43d90406cc7bce6aa649c9d4"}}